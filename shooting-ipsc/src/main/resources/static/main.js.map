{"version":3,"sources":["/./node_modules/moment/locale sync ^\\.\\/.*$","/./src/$_lazy_route_resource lazy namespace object","/./src/app/app-routing.module.ts","/./src/app/app.component.html","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/app.routes.ts","/./src/app/common/adstracts/table.abstract.ts","/./src/app/common/adstracts/unsubscribe-ondestroy-adapter.ts","/./src/app/common/guards/auth.guard.ts","/./src/app/common/guards/login.guard.ts","/./src/app/common/interceptors/auth.interceptor.ts","/./src/app/common/mappers/checkin.mapper.ts","/./src/app/common/mappers/judge.mapper.ts","/./src/app/common/mappers/person.mapper.ts","/./src/app/common/mappers/quiz.mapper.ts","/./src/app/common/mappers/tournament.mapper.ts","/./src/app/common/mappers/weapons.mapper.ts","/./src/app/common/models/constants/actions.ts","/./src/app/common/models/constants/animations.ts","/./src/app/common/models/constants/fields.ts","/./src/app/common/models/constants/form-types.ts","/./src/app/common/models/constants/icons.ts","/./src/app/common/models/constants/page-types.ts","/./src/app/common/models/constants/toastr.ts","/./src/app/common/models/interfaces/table.ts","/./src/app/common/models/mocks/course.mocks.ts","/./src/app/common/models/mocks/exercise.mock.ts","/./src/app/common/models/mocks/fields.mocks.ts","/./src/app/common/models/mocks/persons.mock.ts","/./src/app/common/models/mocks/quiz.mocks.ts","/./src/app/common/models/mocks/specialities.ts","/./src/app/common/models/mocks/tournaments.mock.ts","/./src/app/common/models/mocks/weapon.mocks.ts","/./src/app/common/modules/answers/answers.module.ts","/./src/app/common/modules/answers/components/answers/answers.component.html","/./src/app/common/modules/answers/components/answers/answers.component.ts","/./src/app/common/modules/checkin/actions/actions.ts","/./src/app/common/modules/checkin/checkin.module.ts","/./src/app/common/modules/checkin/components/checkin-details/checkin-details.component.html","/./src/app/common/modules/checkin/components/checkin-details/checkin-details.component.ts","/./src/app/common/modules/checkin/components/checkin/checkin.component.html","/./src/app/common/modules/checkin/components/checkin/checkin.component.ts","/./src/app/common/modules/checkin/effects/effects.ts","/./src/app/common/modules/checkin/reducers/reducer.ts","/./src/app/common/modules/checkin/selectors/selectors.ts","/./src/app/common/modules/checkin/services/checkin.service.ts","/./src/app/common/modules/combat-list/actions/actions.ts","/./src/app/common/modules/combat-list/combat-list.module.ts","/./src/app/common/modules/combat-list/combat-list/combat-list.component.html","/./src/app/common/modules/combat-list/combat-list/combat-list.component.ts","/./src/app/common/modules/combat-list/effects/effects.ts","/./src/app/common/modules/combat-list/reducers/reducer.ts","/./src/app/common/modules/combat-list/selectors/selectors.ts","/./src/app/common/modules/combat-list/services/combat-list.service.ts","/./src/app/common/modules/competitors-rating/competitors-rating.module.ts","/./src/app/common/modules/competitors-rating/components/competitors-rating/competitors-rating.component.html","/./src/app/common/modules/competitors-rating/components/competitors-rating/competitors-rating.component.ts","/./src/app/common/modules/competitors/actions/actions.ts","/./src/app/common/modules/competitors/competitors.module.ts","/./src/app/common/modules/competitors/components/competitors/competitors.component.html","/./src/app/common/modules/competitors/components/competitors/competitors.component.ts","/./src/app/common/modules/competitors/effects/effects.ts","/./src/app/common/modules/competitors/reducers/reducer.ts","/./src/app/common/modules/competitors/selectors/selectors.ts","/./src/app/common/modules/competitors/services/competitors.service.ts","/./src/app/common/modules/course/actions/actions.ts","/./src/app/common/modules/course/course.module.ts","/./src/app/common/modules/course/course/course.component.html","/./src/app/common/modules/course/course/course.component.ts","/./src/app/common/modules/course/effects/effects.ts","/./src/app/common/modules/course/reducers/reducer.ts","/./src/app/common/modules/course/selectors/selectors.ts","/./src/app/common/modules/course/services/courses.service.ts","/./src/app/common/modules/dashboard/components/dashboard/dashboard.component.html","/./src/app/common/modules/dashboard/components/dashboard/dashboard.component.ts","/./src/app/common/modules/dashboard/dashboard.module.ts","/./src/app/common/modules/divisions/actions/actions.ts","/./src/app/common/modules/divisions/components/divisions/divisions.component.html","/./src/app/common/modules/divisions/components/divisions/divisions.component.ts","/./src/app/common/modules/divisions/components/table/table.component.html","/./src/app/common/modules/divisions/components/table/table.component.ts","/./src/app/common/modules/divisions/divisions.module.ts","/./src/app/common/modules/divisions/effects/effects.ts","/./src/app/common/modules/divisions/reducers/reducer.ts","/./src/app/common/modules/divisions/selectors/selectors.ts","/./src/app/common/modules/divisions/services/divisions.service.ts","/./src/app/common/modules/exercise/components/exercise/exercise.component.html","/./src/app/common/modules/exercise/components/exercise/exercise.component.ts","/./src/app/common/modules/exercise/components/timer/timer.component.html","/./src/app/common/modules/exercise/components/timer/timer.component.ts","/./src/app/common/modules/exercise/exercise.module.ts","/./src/app/common/modules/exercise/timer.service.ts","/./src/app/common/modules/forms/abstract-form.ts","/./src/app/common/modules/forms/components/address-form-part/address-form-part.component.html","/./src/app/common/modules/forms/components/address-form-part/address-form-part.component.ts","/./src/app/common/modules/forms/components/base-form/base-form.component.html","/./src/app/common/modules/forms/components/base-form/base-form.component.ts","/./src/app/common/modules/forms/components/change-password-form/change-password-form.component.html","/./src/app/common/modules/forms/components/change-password-form/change-password-form.component.ts","/./src/app/common/modules/forms/components/questions-form/questions-form.component.html","/./src/app/common/modules/forms/components/questions-form/questions-form.component.ts","/./src/app/common/modules/forms/components/standards-form/standards-form.component.html","/./src/app/common/modules/forms/components/standards-form/standards-form.component.ts","/./src/app/common/modules/forms/forms.module.ts","/./src/app/common/modules/forms/services/forms.service.ts","/./src/app/common/modules/judges/actions/judges.action.ts","/./src/app/common/modules/judges/components/judges/judges.component.html","/./src/app/common/modules/judges/components/judges/judges.component.ts","/./src/app/common/modules/judges/effects/judges-effects.service.ts","/./src/app/common/modules/judges/judges.module.ts","/./src/app/common/modules/judges/reducers/judges.reducer.ts","/./src/app/common/modules/judges/selectors/judjes.selector.ts","/./src/app/common/modules/judges/service/judges.service.ts","/./src/app/common/modules/login/components/login/login.component.html","/./src/app/common/modules/login/components/login/login.component.ts","/./src/app/common/modules/login/login.module.ts","/./src/app/common/modules/login/services/login.service.ts","/./src/app/common/modules/modal/components/base-modal/base-modal.component.html","/./src/app/common/modules/modal/components/base-modal/base-modal.component.ts","/./src/app/common/modules/modal/components/change-password-modal/change-password-modal.component.html","/./src/app/common/modules/modal/components/change-password-modal/change-password-modal.component.ts","/./src/app/common/modules/modal/components/combat-list-modal-view/combat-list-modal-view.component.html","/./src/app/common/modules/modal/components/combat-list-modal-view/combat-list-modal-view.component.ts","/./src/app/common/modules/modal/components/dialog-modal/dialog-modal.component.html","/./src/app/common/modules/modal/components/dialog-modal/dialog-modal.component.ts","/./src/app/common/modules/modal/components/standard-conditions-modal/standard-conditions-modal.component.html","/./src/app/common/modules/modal/components/standard-conditions-modal/standard-conditions-modal.component.ts","/./src/app/common/modules/modal/components/standard-errors-modal/standard-errors-modal.component.html","/./src/app/common/modules/modal/components/standard-errors-modal/standard-errors-modal.component.ts","/./src/app/common/modules/modal/components/test-result-modal/test-result-modal.component.html","/./src/app/common/modules/modal/components/test-result-modal/test-result-modal.component.ts","/./src/app/common/modules/modal/modal.module.ts","/./src/app/common/modules/modal/services/modal.service.ts","/./src/app/common/modules/persons/actions/actions.ts","/./src/app/common/modules/persons/components/persons/persons.component.html","/./src/app/common/modules/persons/components/persons/persons.component.ts","/./src/app/common/modules/persons/effects/effects.ts","/./src/app/common/modules/persons/persons.module.ts","/./src/app/common/modules/persons/reducers/reducer.ts","/./src/app/common/modules/persons/selectors/selectors.ts","/./src/app/common/modules/persons/service/person.service.ts","/./src/app/common/modules/quiz/actions/actions.ts","/./src/app/common/modules/quiz/components/categories/categories.component.html","/./src/app/common/modules/quiz/components/categories/categories.component.ts","/./src/app/common/modules/quiz/components/conditions/conditions.component.html","/./src/app/common/modules/quiz/components/conditions/conditions.component.ts","/./src/app/common/modules/quiz/components/questions/questions.component.html","/./src/app/common/modules/quiz/components/questions/questions.component.ts","/./src/app/common/modules/quiz/components/standard-details/standard-details.component.html","/./src/app/common/modules/quiz/components/standard-details/standard-details.component.ts","/./src/app/common/modules/quiz/components/standard-exam/standard-exam.component.html","/./src/app/common/modules/quiz/components/standard-exam/standard-exam.component.ts","/./src/app/common/modules/quiz/components/standards/standards.component.html","/./src/app/common/modules/quiz/components/standards/standards.component.ts","/./src/app/common/modules/quiz/components/subjects/subjects.component.html","/./src/app/common/modules/quiz/components/subjects/subjects.component.ts","/./src/app/common/modules/quiz/components/tests/tests.component.html","/./src/app/common/modules/quiz/components/tests/tests.component.ts","/./src/app/common/modules/quiz/components/units/units.component.html","/./src/app/common/modules/quiz/components/units/units.component.ts","/./src/app/common/modules/quiz/effects/effects.ts","/./src/app/common/modules/quiz/quiz.module.ts","/./src/app/common/modules/quiz/reducers/reducer.ts","/./src/app/common/modules/quiz/selectors/selectors.ts","/./src/app/common/modules/quiz/services/quiz.service.ts","/./src/app/common/modules/shared/actions/actions.ts","/./src/app/common/modules/shared/components/datepicker/datepicker.component.html","/./src/app/common/modules/shared/components/datepicker/datepicker.component.ts","/./src/app/common/modules/shared/components/empty-search/empty-search.component.html","/./src/app/common/modules/shared/components/empty-search/empty-search.component.ts","/./src/app/common/modules/shared/components/error/error.component.html","/./src/app/common/modules/shared/components/error/error.component.ts","/./src/app/common/modules/shared/components/header/header.component.html","/./src/app/common/modules/shared/components/header/header.component.ts","/./src/app/common/modules/shared/components/image-loader/image-loader.component.html","/./src/app/common/modules/shared/components/image-loader/image-loader.component.ts","/./src/app/common/modules/shared/components/location-back/location-back.component.html","/./src/app/common/modules/shared/components/location-back/location-back.component.ts","/./src/app/common/modules/shared/components/modal-root/modal-root.component.html","/./src/app/common/modules/shared/components/modal-root/modal-root.component.ts","/./src/app/common/modules/shared/components/search/search.component.html","/./src/app/common/modules/shared/components/search/search.component.ts","/./src/app/common/modules/shared/effects/effects.ts","/./src/app/common/modules/shared/reducers/reducer.ts","/./src/app/common/modules/shared/selectors/selectors.ts","/./src/app/common/modules/shared/services/dialogs.service.ts","/./src/app/common/modules/shared/services/shared.service.ts","/./src/app/common/modules/shared/shared.module.ts","/./src/app/common/modules/specialities/actions/actions.ts","/./src/app/common/modules/specialities/components/specialities.component.html","/./src/app/common/modules/specialities/components/specialities.component.ts","/./src/app/common/modules/specialities/effects/effects.ts","/./src/app/common/modules/specialities/reducers/reducer.ts","/./src/app/common/modules/specialities/selectors/selectors.ts","/./src/app/common/modules/specialities/services/specialities.service.ts","/./src/app/common/modules/specialities/specialities.module.ts","/./src/app/common/modules/stages/actions/actions.ts","/./src/app/common/modules/stages/components/stages/stages.component.html","/./src/app/common/modules/stages/components/stages/stages.component.ts","/./src/app/common/modules/stages/effects/effects.ts","/./src/app/common/modules/stages/reducers/reducer.ts","/./src/app/common/modules/stages/selectors/selectors.ts","/./src/app/common/modules/stages/service/stages.service.ts","/./src/app/common/modules/stages/stages.module.ts","/./src/app/common/modules/table/components/base-table/base-table.component.html","/./src/app/common/modules/table/components/base-table/base-table.component.ts","/./src/app/common/modules/table/table.directive.ts","/./src/app/common/modules/table/table.module.ts","/./src/app/common/modules/tournaments/actions/actions.ts","/./src/app/common/modules/tournaments/components/tournaments/tournaments.component.html","/./src/app/common/modules/tournaments/components/tournaments/tournaments.component.ts","/./src/app/common/modules/tournaments/effects/effects.ts","/./src/app/common/modules/tournaments/reducers/reducer.ts","/./src/app/common/modules/tournaments/selectors/selectors.ts","/./src/app/common/modules/tournaments/services/tournaments.service.ts","/./src/app/common/modules/tournaments/tournaments.module.ts","/./src/app/common/modules/user/actions/actions.ts","/./src/app/common/modules/user/components/user/user.component.html","/./src/app/common/modules/user/components/user/user.component.ts","/./src/app/common/modules/user/effects/effects.ts","/./src/app/common/modules/user/reducers/reducer.ts","/./src/app/common/modules/user/selectors/selectors.ts","/./src/app/common/modules/user/services/user.service.ts","/./src/app/common/modules/user/user.module.ts","/./src/app/common/modules/weapon/actions/actions.ts","/./src/app/common/modules/weapon/components/weapon-list/weapon-list.component.html","/./src/app/common/modules/weapon/components/weapon-list/weapon-list.component.ts","/./src/app/common/modules/weapon/components/weapon-types/weapon-types.component.html","/./src/app/common/modules/weapon/components/weapon-types/weapon-types.component.ts","/./src/app/common/modules/weapon/effects/effects.ts","/./src/app/common/modules/weapon/reducers/reducer.ts","/./src/app/common/modules/weapon/selectors/selectors.ts","/./src/app/common/modules/weapon/services/weapons.service.ts","/./src/app/common/modules/weapon/weapon.module.ts","/./src/app/common/modules/workspace/actions/actions.ts","/./src/app/common/modules/workspace/components/workspace/workspace.component.html","/./src/app/common/modules/workspace/components/workspace/workspace.component.ts","/./src/app/common/modules/workspace/effects/effects.ts","/./src/app/common/modules/workspace/reducers/reducer.ts","/./src/app/common/modules/workspace/selectors/selectors.ts","/./src/app/common/modules/workspace/services/workspace.service.ts","/./src/app/common/modules/workspace/workspace.module.ts","/./src/app/common/services/connection.service.ts","/./src/app/common/services/local-storage.service.ts","/./src/app/common/services/mark.service.ts","/./src/app/common/services/message.service.ts","/./src/app/common/services/subject.service.ts","/./src/app/common/services/token.service.ts","/./src/environments/environment.ts","/./src/hmr.ts","/./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {routes} from './app.routes';\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","<app-header *ngIf=\"showHeader && role !== 'GUEST'\"></app-header>\n<ng-http-loader [spinner]=\"spinkit.skCubeGrid\"\n                [debounceDelay]=\"100\"\n                [extraDuration]=\"300\"\n                [minDuration]=\"300\"\n                [opacity]=\"'.8'\"\n                [backgroundColor]=\"'#668c6e'\"\n                [filteredMethods]=\"['POST', 'PUT']\"\n></ng-http-loader>\n<app-location-back *ngIf=\"currentRoute && role !== 'GUEST'\"></app-location-back>\n<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {Router, RouterEvent} from '@angular/router';\nimport {filter, take} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Spinkit} from 'ng-http-loader';\nimport {Store} from '@ngrx/store';\n\nimport {\n    LoadClassifiers,\n    LoadCompetitorMarks,\n    LoadDisqualificationTypes,\n    LoadLevels,\n    LoadRanks,\n    LoadStatuses,\n    LoadTimeIntervals,\n    LoadUserById,\n    LoadValidations,\n    LoadWeaponTypes\n} from '@shared/actions/actions';\nimport {LoadAllData} from '@tournaments/actions/actions';\nimport {ConnectionService} from '@services/connection.service';\nimport {MessageService} from '@services/message.service';\nimport {TokenService} from '@services/token.service';\nimport {IMqttMessage, MqttService} from 'ngx-mqtt';\nimport {UnsubscribeOndestroyAdapter} from './common/adstracts/unsubscribe-ondestroy-adapter';\nimport {LoadCompetitorsRating} from '@competitors/actions/actions';\nimport {LoadCurrentWorkspace} from '@workspace/actions/actions';\nimport {ModalService} from '@modal/services/modal.service';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public showHeader: boolean;\n    public currentRoute: boolean;\n    public spinkit = Spinkit;\n    private connectionStatus: string;\n    public role: string;\n\n    constructor(private router: Router,\n                private translate: TranslateService,\n                private connectionService: ConnectionService,\n                private messageService: MessageService,\n                private tokenService: TokenService,\n                private store: Store<any>,\n                private _mqttService: MqttService,\n                private modalService: ModalService) {\n        super();\n        this.role = localStorage.getItem('role');\n        this.getRouterEvents();\n    }\n\n    ngOnInit(): void {\n        this.setLanguage();\n        this.translate.setDefaultLang(localStorage.getItem('lang') || 'ru');\n        this.getConnectionStatus();\n        if (this.role === 'GUEST') {\n            this.openDialogModal('testQuestion');\n        }\n    }\n\n    getConnectionStatus() {\n        if (this.connectionService.status) {\n            this.connectionService.status.pipe(take(1)).subscribe(status => {\n                if (status) {\n                    this.connectionStatus = status;\n                    if (this.tokenService.getToken()) {\n                        this.dispatchAllData();\n                    }\n                }\n            });\n        }\n    }\n\n    getRouterEvents() {\n        this.router.events.pipe(\n            filter(e => e instanceof RouterEvent)\n        ).subscribe((e: RouterEvent) => {\n            this.showHeader = e.url !== '/login';\n            this.currentRoute = e.url !== '/login' && e.url !== '/dashboard' &&\n                !(e.url.includes('/tournaments/rating?'));\n        });\n    }\n\n    dispatchAllData() {\n        const userId = localStorage.getItem('userId');\n        const role = localStorage.getItem('role');\n        if (this.hasConnection()) {\n            if (role === 'ADMIN') {\n                this.store.dispatch(new LoadClassifiers());\n                this.store.dispatch(new LoadWeaponTypes());\n                this.store.dispatch(new LoadLevels());\n                this.store.dispatch(new LoadCompetitorMarks());\n                this.store.dispatch(new LoadDisqualificationTypes());\n                this.store.dispatch(new LoadAllData());\n            }\n            this.store.dispatch(new LoadValidations());\n            this.store.dispatch(new LoadStatuses());\n            this.store.dispatch(new LoadTimeIntervals());\n            this.store.dispatch(new LoadUserById(userId));\n            this.store.dispatch(new LoadRanks());\n        } else {\n            this.messageService.showPushNotification('No internet connection!');\n        }\n    }\n\n    getTournamentTopic() {\n        this.subscriptions.sink = this._mqttService.observe('competition').subscribe((message: IMqttMessage) => {\n            if (message.payload) {\n                const resultString = String.fromCharCode(...message.payload);\n                const parsedResult = JSON.parse(resultString);\n                this.goToRating(parsedResult.id);\n                this.store.dispatch(new LoadCompetitorsRating(parsedResult.id));\n            }\n        });\n    }\n\n    openDialogModal(message: string) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.getCurrentWorkspace();\n                } else {\n                    this.getTournamentTopic();\n                }\n            });\n    }\n\n    getCurrentWorkspace() {\n        this.store.dispatch(new LoadCurrentWorkspace());\n    }\n\n    goToRating(id: string) {\n        this.router.navigate(['tournaments/rating'], {queryParams: {tournament: id}});\n    }\n\n\n    hasConnection() {\n        return this.connectionStatus && this.connectionStatus !== this.connectionService.NO_CONNECTION;\n    }\n\n    setLanguage() {\n        if (!localStorage.getItem('lang')) {\n            localStorage.setItem('lang', 'ru');\n        }\n    }\n\n\n}\n","import {LOCALE_ID, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {ToastrModule} from 'ngx-toastr';\nimport {NgHttpLoaderModule} from 'ng-http-loader';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {registerLocaleData} from '@angular/common';\nimport localeRus from '@angular/common/locales/ru';\nimport {IMqttServiceOptions, MqttModule} from 'ngx-mqtt';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {LoginGuard} from '@guards/login.guard';\nimport {AuthGuard} from '@guards/auth.guard';\nimport {AuthInterceptor} from '@interceptors/auth.interceptor';\nimport {SubjectService} from '@services/subject.service';\nimport {LoginModule} from '@login/login.module';\nimport {DashboardModule} from '@dashboard/dashboard.module';\nimport {ExerciseModule} from '@exercises/exercise.module';\nimport {TournamentsModule} from '@tournaments/tournaments.module';\nimport {JudgesModule} from '@judges/judges.module';\nimport {CompetitorsModule} from '@competitors/competitors.module';\nimport {SharedModule} from '@shared/shared.module';\nimport {PersonsModule} from '@persons/persons.module';\nimport {StagesModule} from '@stages/stages.module';\nimport {CompetitorsRatingModule} from './common/modules/competitors-rating/competitors-rating.module';\nimport {DivisionsModule} from '@divisions/divisions.module';\nimport {metaReducers, reducers} from './reducers';\nimport {PersonEffects} from '@persons/effects/effects';\nimport {environment} from '@environments/environment';\nimport {StagesEffects} from '@stages/effects/effects';\nimport {TournamentsEffects} from '@tournaments/effects/effects';\nimport {CompetitorsEffects} from '@competitors/effects/effects';\nimport {DivisionsEffects} from '@divisions/effects/effects';\nimport {JudgesEffects} from '@judges/effects/judges-effects.service';\nimport {SharedEffects} from '@shared/effects/effects';\nimport {QuizModule} from '@quiz/quiz.module';\nimport {QuizEffects} from '@quiz/effects/effects';\nimport {CheckinModule} from '@checkin/checkin.module';\nimport {CheckinEffects} from '@checkin/effects/effects';\nimport {AnswersModule} from './common/modules/answers/answers.module';\nimport {CombatListModule} from '@combat-list/combat-list.module';\nimport {CombatListService} from '@combat-list/services/combat-list.service';\nimport {CombatListEffects} from '@combat-list/effects/effects';\nimport {SpecialitiesModule} from '@specialities/specialities.module';\nimport {SpecialitiesEffects} from '@specialities/effects/effects';\nimport {UserModule} from '@user/user.module';\nimport {UserEffects} from '@user/effects/effects';\nimport {WeaponModule} from '@weapon/weapon.module';\nimport {WeaponsEffects} from '@weapon/effects/effects';\nimport {CourseModule} from '@course/course.module';\nimport {CourseEffects} from '@course/effects/effects';\nimport {WorkspaceEffects} from '@workspace/effects/effects';\n\nregisterLocaleData(localeRus, 'ru');\n\nexport const MQTT_SERVICE_OPTIONS: IMqttServiceOptions = {\n    hostname: environment.mqttHost,\n    port: environment.mqttPort,\n    path: '/mqtt',\n    username: environment.mqttUserName,\n    password: environment.mqttPassword\n};\n@NgModule({\n    declarations: [\n        AppComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        LoginModule,\n        DashboardModule,\n        ExerciseModule,\n        TournamentsModule,\n        JudgesModule,\n        SharedModule,\n        PersonsModule,\n        StagesModule,\n        CompetitorsModule,\n        CompetitorsRatingModule,\n        DivisionsModule,\n        QuizModule,\n        CheckinModule,\n        AnswersModule,\n        CombatListModule,\n        SpecialitiesModule,\n        UserModule,\n        WeaponModule,\n        CourseModule,\n        ToastrModule.forRoot({\n            timeOut: 10000,\n            positionClass: 'toast-top-center',\n            preventDuplicates: true,\n        }),\n        NgHttpLoaderModule.forRoot(),\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        }),\n        StoreModule.forRoot(reducers, {metaReducers}),\n        EffectsModule.forRoot([\n            PersonEffects,\n            StagesEffects,\n            TournamentsEffects,\n            CompetitorsEffects,\n            DivisionsEffects,\n            JudgesEffects,\n            SharedEffects,\n            QuizEffects,\n            CheckinEffects,\n            CombatListEffects,\n            SpecialitiesEffects,\n            UserEffects,\n            WeaponsEffects,\n            CourseEffects,\n            WorkspaceEffects\n        ]),\n        StoreDevtoolsModule.instrument({\n            maxAge: 25,\n            logOnly: environment.production,\n        }),\n        MqttModule.forRoot(MQTT_SERVICE_OPTIONS)\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: AuthInterceptor,\n            multi: true\n        },\n        {\n            provide: LOCALE_ID,\n            useValue: 'ru-KZ'\n        },\n        LoginGuard,\n        AuthGuard,\n        SubjectService,\n        CombatListService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n// required for AOT compilation\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, '/assets/i18n/', '.json');\n}\n","import {Route, Routes} from '@angular/router';\nimport {AuthGuard} from '@guards/auth.guard';\nimport {LoginGuard} from '@guards/login.guard';\nimport {TestsComponent} from '@quiz/components/tests/tests.component';\nimport {QuestionsComponent} from '@quiz/components/questions/questions.component';\nimport {CheckinDetailsComponent} from '@checkin/components/checkin-details/checkin-details.component';\nimport {StandardsComponent} from '@quiz/components/standards/standards.component';\nimport {CategoriesComponent} from '@quiz/components/categories/categories.component';\nimport {ConditionsComponent} from '@quiz/components/conditions/conditions.component';\nimport {UnitsComponent} from '@quiz/components/units/units.component';\nimport {WeaponTypesComponent} from '@weapon/components/weapon-types/weapon-types.component';\nimport {StandardDetailsComponent} from '@quiz/components/standard-details/standard-details.component';\nimport {StandardExamComponent} from '@quiz/components/standard-exam/standard-exam.component';\nimport {StandardErrorsModalComponent} from '@modal/components/standard-errors-modal/standard-errors-modal.component';\nimport {StandardConditionsModalComponent} from '@modal/components/standard-conditions-modal/standard-conditions-modal.component';\n\nconst REDIRECT_ROUTE: Route = {\n    path: '**',\n    redirectTo: ''\n};\n\nexport const routes: Routes = [\n    {\n        path: '',\n        redirectTo: '/dashboard',\n        pathMatch: 'full',\n    },\n    {\n        path: 'login',\n        loadChildren: () => import('./common/modules/login/login.module').then(m => m.LoginModule),\n        canActivate: [LoginGuard]\n    },\n    {\n        path: 'dashboard',\n        loadChildren: () => import('./common/modules/dashboard/dashboard.module').then(m => m.DashboardModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER', 'JUDGE', 'GUEST'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'exercise',\n        loadChildren: () => import('./common/modules/exercise/exercise.module').then(m => m.ExerciseModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'JUDGE'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'tournaments',\n        loadChildren: () => import('./common/modules/tournaments/tournaments.module').then(m => m.TournamentsModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'JUDGE'],\n                redirectTo: 'dashboard'\n            }\n        }\n\n    },\n    {\n        path: 'tournaments/stages',\n        loadChildren: () => import('./common/modules/stages/stages.module').then(m => m.StagesModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'JUDGE'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'tournaments/competitors',\n        loadChildren: () => import('./common/modules/competitors/competitors.module').then(m => m.CompetitorsModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'JUDGE'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'divisions',\n        loadChildren: () => import('./common/modules/divisions/divisions.module').then(m => m.DivisionsModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'judges',\n        loadChildren: () => import('./common/modules/judges/judges.module').then(m => m.JudgesModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'persons',\n        loadChildren: () => import('./common/modules/persons/persons.module').then(m => m.PersonsModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'tournaments/rating',\n        loadChildren: () => import('./common/modules/competitors-rating/competitors-rating.module').then(m => m.CompetitorsRatingModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'GUEST'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'subjects',\n        loadChildren: () => import('./common/modules/quiz/quiz.module').then(m => m.QuizModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'subjects/tests',\n        component: TestsComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'subjects/standards',\n        component: StandardsComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'subjects/standards/:id',\n        component: StandardDetailsComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'subjects/standards/:id/exam',\n        component: StandardExamComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER'],\n                redirectTo: 'dashboard'\n            }\n        },\n        children: [\n            {\n                path: 'standard-errors-modal',\n                component: StandardErrorsModalComponent\n            },\n            {\n                path: 'standard-conditions-modal',\n                component: StandardConditionsModalComponent\n            }\n        ]\n    },\n    {\n        path: 'subjects/standards/categories',\n        component: CategoriesComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'subjects/standards/conditions',\n        component: ConditionsComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'subjects/standards/conditions/units',\n        component: UnitsComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'subjects/tests/questions',\n        component: QuestionsComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'answers',\n        loadChildren: () => import('./common/modules/answers/answers.module').then(m => m.AnswersModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'checkin',\n        loadChildren: () => import('./common/modules/checkin/checkin.module').then(m => m.CheckinModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'checkin/checkin-details',\n        component: CheckinDetailsComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'combat-list',\n        loadChildren: () => import('./common/modules/combat-list/combat-list.module').then(m => m.CombatListModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'specialities',\n        loadChildren: () => import('./common/modules/specialities/specialities.module').then(m => m.SpecialitiesModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'users',\n        loadChildren: () => import('./common/modules/user/user.module').then(m => m.UserModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'weapon-list',\n        loadChildren: () => import('./common/modules/weapon/weapon.module').then(m => m.WeaponModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'weapon-list/weapon-types',\n        component: WeaponTypesComponent,\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'courses',\n        loadChildren: () => import('./common/modules/course/course.module').then(m => m.CourseModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n    {\n        path: 'workspace',\n        loadChildren: () => import('./common/modules/workspace/workspace.module').then(m => m.WorkspaceModule),\n        canActivate: [AuthGuard],\n        data: {\n            permission: {\n                only: ['ADMIN', 'USER', 'COMMANDER'],\n                redirectTo: 'dashboard'\n            }\n        }\n    },\n\n    REDIRECT_ROUTE\n];\n","import {PageTypes} from '@models/constants/page-types';\nimport {Mocks} from '@models/mocks/persons.mock';\nimport {FormFieldName} from '@models/constants/fields';\nimport {Icons} from '@models/constants/icons';\nimport {UnsubscribeOndestroyAdapter} from './unsubscribe-ondestroy-adapter';\nimport {Input, QueryList, ViewChildren} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NgbdSortableHeader} from '@table/table.directive';\nimport * as moment from 'moment';\nimport 'moment-duration-format';\nimport {KeyValue} from '@angular/common';\n\n\nexport class TableAbstract extends UnsubscribeOndestroyAdapter {\n    public fields = FormFieldName;\n    public icons = Icons;\n    public direction = '';\n\n    private language = localStorage.getItem('lang');\n\n    @Input() pageType: string;\n    @Input() isMobile: boolean;\n\n    @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\n\n    constructor(protected translateService: TranslateService) {\n        super();\n    }\n\n    get displayedCells() {\n        let notDisplay;\n        switch (this.pageType) {\n            case PageTypes.COMPETITOR:\n                notDisplay = [this.fields.ACTIVE, this.fields.RANK];\n                return this.filterCells(notDisplay);\n            case PageTypes.TOURNAMENT:\n                notDisplay = [this.fields.LEVEL, this.fields.RANK];\n                return this.filterCells(notDisplay);\n            case PageTypes.COMBAT_LIST:\n                notDisplay = [this.fields.MEMBER, this.fields.LEVEL, this.fields.ACTIVE];\n                return this.filterCells(notDisplay);\n            case PageTypes.PERSON:\n                notDisplay = [this.fields.MEMBER, this.fields.LEVEL];\n                return this.filterCells(notDisplay);\n            case PageTypes.SPECIALITIES:\n                notDisplay = [this.fields.NAME, this.language === 'ru' ? this.fields.SPECIALITY_KZ : this.fields.SPECIALITY_RUS];\n                return this.filterCells(notDisplay);\n            case PageTypes.STANDARDS:\n                notDisplay = [\n                    this.fields.NAME,\n                    this.language === 'ru' ? this.fields.NAMED_KZ : this.fields.NAMED_RUS,\n                    this.language === 'ru' ? this.fields.DESCRIPTION_KZ : this.fields.DESCRIPTION_RUS,\n                ];\n                return this.filterCells(notDisplay);\n            case PageTypes.STANDARD_DETAILS:\n                notDisplay = [this.fields.LEVEL, this.fields.MEMBER, this.fields.ACTIVE];\n                return this.filterCells(notDisplay);\n            case PageTypes.CATEGORY:\n                notDisplay = [this.fields.NAME, this.language === 'ru' ? this.fields.NAME_CATEGORY_KZ : this.fields.NAME_CATEGORY_RUS];\n                return this.filterCells(notDisplay);\n            case PageTypes.CONDITION:\n                notDisplay = [this.fields.NAME, this.language === 'ru' ? this.fields.CONDITIONS_KZ : this.fields.CONDITIONS_RUS];\n                return this.filterCells(notDisplay);\n            case PageTypes.FAILS:\n                notDisplay = [this.fields.NAME, this.language === 'ru' ? this.fields.CONDITIONS_KZ : this.fields.CONDITIONS_RUS];\n                return this.filterCells(notDisplay);\n            case PageTypes.WEAPON:\n                if (this.isMobile) {\n                    notDisplay = [this.fields.OWNER];\n                    return this.filterCells(notDisplay);\n                }\n                return Mocks.displayedCells;\n            case PageTypes.RATING:\n                const ratingCells = [...Mocks.displayedCells];\n                ratingCells.push(this.fields.STAGES);\n                return ratingCells;\n            case PageTypes.SUBJECTS:\n            case PageTypes.QUESTIONS:\n            case PageTypes.TESTS:\n                notDisplay = [this.fields.NAME, this.language === 'ru' ? this.fields.KZ_NAME : this.fields.RU_NAME];\n                return this.filterCells(notDisplay);\n            default:\n                return Mocks.displayedCells;\n        }\n    }\n\n    filterCells(notDisplay) {\n        return Mocks.displayedCells.filter((item) => !(notDisplay.includes(item)));\n    }\n\n    detectLanguage() {\n        this.subscriptions.sink = this.translateService.onLangChange\n            .subscribe((data) => this.language = data.lang);\n    }\n\n    formatTime(seconds: string): string {\n        if (seconds.includes(':')) {\n            return seconds;\n        }\n        const duration = moment.duration(Number(seconds), 'seconds');\n        return duration.format('HH:mm:ss');\n    }\n\n    noSorting = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => 0;\n\n    trackByFn(item, i) {\n        return item[i];\n    }\n}\n","import {OnDestroy} from '@angular/core';\nimport {SubSink} from 'subsink';\n\nexport class UnsubscribeOndestroyAdapter implements OnDestroy {\n    public subscriptions: SubSink = new SubSink();\n\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\n\nimport {TokenService} from '@services/token.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router,\n                private tokenService: TokenService) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const token = this.tokenService.getToken();\n        if (token) {\n            const role = this.parseJwt(token).role;\n            const userId = this.parseJwt(token).id;\n            localStorage.setItem('role', role);\n            localStorage.setItem('userId', userId);\n            const permission = route.data['permission'];\n\n            let canActivate: boolean;\n\n            if (!permission) {\n                throw new Error('Permissions is not setup!');\n            } else if (!permission.only.length) {\n                throw new Error('Roles are not setup!');\n            }\n\n            canActivate = permission.only.includes(role);\n\n            if (!canActivate) {\n                this.router.navigate([permission.redirectTo]);\n            }\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n        }\n        return false;\n    }\n\n    parseJwt(token) {\n        try {\n            return JSON.parse(atob(token.split('.')[0]));\n        } catch (e) {\n            return null;\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {TokenService} from '@services/token.service';\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n\n    constructor(private router: Router,\n                private tokenService: TokenService) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this.tokenService.getToken()) {\n            this.router.navigate(['/dashboard']);\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n","import {Observable} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {throwError} from 'rxjs/internal/observable/throwError';\n\nimport {TokenService} from '@services/token.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private router: Router,\n                private tokenService: TokenService) {\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const token = this.tokenService.getToken();\n        let headers = {};\n\n        if (!!token) {\n            headers = {\n                'Authorization': token\n            };\n        }\n\n        const authenticatedRequest = request.clone({\n            setHeaders: headers\n        });\n\n        return next.handle(authenticatedRequest).pipe(\n            map((event: HttpEvent<any>) => {\n                if (event instanceof HttpResponse) {\n                    // console.log('event--->>>', event);\n                }\n                return event;\n            }),\n            catchError(\n                (err: HttpErrorResponse) => {\n                    // console.log(err);\n                    if (!(err.error instanceof Error) && err.status === 401) {\n                        this.tokenService.removeToken();\n                        this.router.navigate(['/']);\n                    }\n                    return throwError(err);\n                }\n            ));\n    }\n}\n","import {ICheckin, ICombatNote, IStat} from '@models/interfaces/checkin';\n\nexport const findCheckinStatus = (statuses: IStat[], statusName: string): IStat => {\n    return statuses.find((item: IStat) => item.status === statusName);\n};\n\nexport const checkinMapperFromServer = (data: any, total: number): ICombatNote => {\n    const unknown = findCheckinStatus(data.statList, 'UNDEFINED');\n    const outfit = findCheckinStatus(data.statList, 'OUTFIT');\n    const mission = findCheckinStatus(data.statList, 'MISSION');\n    const sickLeave = findCheckinStatus(data.statList, 'SICK_LEAVE');\n    const infirmary = findCheckinStatus(data.statList, 'INFIRMARY');\n    const hospital = findCheckinStatus(data.statList, 'HOSPITAL');\n    const dayOff = findCheckinStatus(data.statList, 'DAY_OFF');\n    const present = findCheckinStatus(data.statList, 'PRESENT');\n    const delay = findCheckinStatus(data.statList, 'DELAY');\n\n    return {\n        combat: data.combat,\n        date: data.date,\n        division: data.division,\n        id: data.id,\n        total: total,\n        PRESENT: present ? present.count : 0,\n        UNDEFINED: unknown ? unknown.count : 0,\n        MISSION: mission ? mission.count : 0,\n        SICK_LEAVE: sickLeave ? sickLeave.count : 0,\n        INFIRMARY: infirmary ? infirmary.count : 0,\n        HOSPITAL: hospital ? hospital.count : 0,\n        OUTFIT: outfit ? outfit.count : 0,\n        DAY_OFF: dayOff ? dayOff.count : 0,\n        DELAY: delay ? delay.count : 0,\n    };\n};\n\nexport const checkinDetailsMapperFromServer = (data): ICheckin => {\n    return {\n        userName: data.person.userName,\n        birthDate: data.person.birthDate,\n        rank: data.person.rank,\n        status: Object.keys(data.status)[0]\n    };\n};\n","import {IJudge, IUserRegistration} from '@models/interfaces/human';\n\nexport const judgeMapperFromServer = (data): any => {\n    return {\n        id: data.id,\n        login: data.login,\n        userName: data.userName,\n        birthDate: data.birthDate,\n        active: data.active\n    };\n};\n\nexport const judgeMapperToServer = (judge: IJudge) => {\n    return {\n        id: judge.id,\n        userName: judge.userName,\n        birthDate: judge.birthDate,\n        login: judge.login,\n        active: judge.active\n    };\n};\n\nexport const judgeRegistrationMapperToServer = (data: IUserRegistration) => {\n    return {\n        birthDate: data.birthDate,\n        login: data.login,\n        password: data.password,\n        userName: data.userName\n    };\n};\n","import {IPerson} from '@models/interfaces/human';\n\nconst HANDGUN = 'HANDGUN';\nconst SHOTGUN = 'SHOTGUN';\nconst RIFLE = 'RIFLE';\n\nconst getCode = (codes: { code: string, name: string }[], type) => {\n    return codes.find(item => item.name === type);\n};\n\nconst getCodes = (handgunCodeIpsc: any, shotgunCodeIpsc: any, rifleCodeIpsc: any): { code: string, name: string }[] => {\n    const codes: { code: string, name: string }[] = [];\n    if (typeof handgunCodeIpsc === 'string') {\n        codes.push({code: handgunCodeIpsc, name: HANDGUN});\n    } else {\n        codes.push(handgunCodeIpsc);\n    }\n    if (typeof shotgunCodeIpsc === 'string') {\n        codes.push({code: shotgunCodeIpsc, name: SHOTGUN});\n    } else {\n        codes.push(shotgunCodeIpsc);\n    }\n    if (typeof rifleCodeIpsc === 'string') {\n        codes.push({code: rifleCodeIpsc, name: RIFLE});\n    } else {\n        codes.push(rifleCodeIpsc);\n    }\n    return codes;\n};\n\nexport const personMapperToServer = (data: any) => {\n    return {\n        id: data.id,\n        active: data.active,\n        roleName: data.roleName,\n        userName: data.userName,\n        birthDate: data.birthDate,\n        rank: data.rank.id,\n        division: data.division.id,\n        level: data.level,\n        codes: getCodes(data.handgunCodeIpsc, data.shotgunCodeIpsc, data.rifleCodeIpsc),\n        address: data.address,\n    };\n};\n\nexport const personMapperFromServer = (data: any) => {\n    return {\n        id: data.id,\n        userName: data.userName,\n        birthDate: data.birthDate,\n        rank: data.rank,\n        division: data.division,\n        level: data.level,\n        handgunCodeIpsc: getCode(data.codes, HANDGUN) || '',\n        shotgunCodeIpsc: getCode(data.codes, SHOTGUN) || '',\n        rifleCodeIpsc: getCode(data.codes, RIFLE) || '',\n        active: data.active,\n        member: false,\n        roleName: data.roleName,\n        address: data.address,\n    };\n};\n\nexport const checkinToServer = (data: IPerson) => {\n    return {\n        person: data.id,\n        status: data.status\n    };\n};\n\n","import {IAnswers, IQuestion, ITest} from '@models/interfaces/quiz';\nimport {ICondition, IStandard} from '@models/interfaces/standard';\n\nconst getActiveQuestions = (questions: IQuestion[]): IQuestion[] => {\n    return questions.filter((question: IQuestion) => question.active);\n};\n\nexport const quizMapperFromServer = (data: any): ITest => {\n    return {\n        ru: data.name.rus,\n        kk: data.name.kz,\n        questionList: data.questionList,\n        questionsCount: getActiveQuestions(data.questionList).length,\n        time: data.time,\n        great: data.great,\n        good: data.good,\n        satisfactorily: data.satisfactorily,\n        id: data.id\n    };\n};\n\nexport const quizMapperToServer = (data: ITest) => {\n    return {\n        name: {\n            rus: data.ru,\n            kz: data.kk,\n        },\n        great: data.great,\n        good: data.good,\n        satisfactorily: data.satisfactorily,\n        questionList: data.questionList,\n        subject: data.subject,\n        time: data.time\n    };\n};\n\nexport const subjectMapperFromServer = (data) => {\n    return {\n        id: data.id,\n        ru: data.rus,\n        kk: data.kz\n    };\n};\n\nexport const questionMapperFromServer = (data: any, answers: IAnswers[]) => {\n    return {\n        random: data.random,\n        id: data.id,\n        ru: data['question'].rus,\n        kk: data['question'].kz,\n        active: data.active,\n        right: data.right,\n        questionImagePath: data['question'].imagePath,\n        answers: answers\n    };\n};\n\nexport const questionMapperToServer = (data: any, answers: any[]) => {\n    return {\n        question: {\n            kz: data['question'].kk,\n            rus: data['question'].ru,\n            imagePath: data['question'].imagePath\n        },\n        active: data.active,\n        random: data.random,\n        right: data.right,\n        id: data.id,\n        answers: answers,\n    };\n};\n\nexport const answerMapperFromServer = (data: any) => {\n    return {\n        kk: data.kz,\n        ru: data.rus,\n        imagePath: data.imagePath\n    };\n};\n\nexport const answerMapperToServer = (data: IAnswers) => {\n    return {\n        kz: data.kk,\n        rus: data.ru,\n        imagePath: data.imagePath\n    };\n};\n\nexport const standardMapperFromServer = (data: any): IStandard => {\n    return {\n        namedRus: data.info.namedRus,\n        namedKz: data.info.namedKz,\n        descriptionKz: data.info.descriptionKz,\n        descriptionRus: data.info.descriptionRus,\n        active: data.active,\n        groups: data.active,\n        conditionsList: data.conditionsList,\n        categoriesList: data.categoriesList,\n        failsList: data.failsList,\n        id: data.id\n    };\n};\n\nexport const standardMapperToServer = (data: IStandard): any => {\n    return {\n        info: {\n            namedKz: data.namedKz,\n            namedRus: data.namedRus,\n            descriptionKz: data.descriptionKz,\n            descriptionRus: data.descriptionRus\n        },\n        active: data.active,\n        groups: data.active,\n        conditionsList: data.conditionsList,\n        categoriesList: data.categoriesList,\n        failsList: data.failsList,\n        id: data.id,\n        subject: data.subject\n    };\n};\n\nexport const conditionsMapper = (data: ICondition) => {\n    return {\n        conditionsRus: data.conditionsRus,\n        conditionsKz: data.conditionsKz,\n        minValue: data.minValue,\n        maxValue: data.maxValue,\n        coefficient: data.coefficient,\n        units: data.units.id,\n    };\n};\n","import {ITournament} from '@models/interfaces/tournament';\nimport {IStage} from '@models/interfaces/stage';\nimport {ICompetitor} from '@models/interfaces/human';\n\nconst translateWeaponType = (weaponType) => {\n    switch (weaponType) {\n        case 'Винтовка':\n            return 'RIFLE';\n        case 'Дробовик':\n            return 'SHOTGUN';\n        case 'Пистолет':\n            return 'HANDGUN';\n        case 'RIFLE':\n            return 'Винтовка';\n        case 'SHOTGUN':\n            return 'Дробовик';\n        case 'HANDGUN':\n            return 'Пистолет';\n    }\n};\n\nexport const tournamentMapperFromServer = (data: any): ITournament => {\n    return {\n        id: data.id,\n        name: data.name,\n        eventDate: data.eventDate,\n        location: data.location,\n        director: data.director,\n        level: data.level,\n        mainJudge: data.mainJudge,\n        stages: data.stages,\n        statisticsJudge: data.statisticsJudge,\n        weaponType: translateWeaponType(data.weaponType),\n        competitors: data.competitors,\n        humanAmount: data.competitors ? data.competitors.length : 0,\n        stageCount: data.stages ? data.stages.length : 0,\n        active: data.active\n    };\n};\n\nexport const tournamentMapperToServer = (data: any) => {\n    return {\n        id: data.id,\n        name: data.name,\n        active: data.active,\n        eventDate: data.eventDate,\n        location: data.location,\n        director: data.director ? data.director.id : null,\n        level: data.level,\n        mainJudge: data.mainJudge ? data.mainJudge.id : null,\n        stages: data.stages,\n        competitors: data.competitors && data.competitors.map((competitor: ICompetitor) => competitorMapperToStore(competitor, true)),\n        statisticsJudge: data.statisticsJudge ? data.statisticsJudge.id : null,\n        weaponType: translateWeaponType(data.weaponType)\n    };\n};\n\nexport const stagesMapperFromServer = (data: any, index: number): IStage => {\n    return {\n        id: data.id,\n        name: data.name,\n        stageNumber: data.stageNumber || index + 1,\n        location: data.location,\n        ISC_classifier: data.ISC_classifier || '',\n        allTargets: data.allTargets,\n        targets: data.targets,\n        popper: data.popper,\n        noShoots: data.noShoots,\n        notCounted: data.notCounted,\n        minShoots: data.minShoots,\n        maxPoints: data.maxPoints,\n        readyCondition: data.readyCondition,\n        startPosition: data.startPosition,\n        procedure: data.procedure,\n        pointCount: data.pointCount\n    };\n};\n\nexport const competitorMapperFromServer = (data: ICompetitor, index: number): ICompetitor => {\n    return {\n        id: data.id,\n        numberInOrder: index + 1,\n        userName: data.userName,\n        registrationType: data.mark ? 'RFID' : 'NUMBER',\n        birthDate: data.person.birthDate,\n        safetyTechnique: data.active,\n        mark: data.rfidCode || '',\n        number: data.number,\n        result: data.result,\n        person: data.person\n    };\n};\n\nexport const competitorMapperToServer = (data: any) => {\n    return {\n        mark: data.mark,\n        type: data.registrationType,\n        active: data.safetyTechnique,\n        userName: data.userName\n    };\n};\n\nexport const competitorMapperToServerWithBothFields = (data: any) => {\n    return {\n        active: data.safetyTechnique,\n        number: data.number,\n        rfid: data.rfidCode,\n        userName: data.userName\n    };\n};\n\nexport const competitorMapperToStore = (data: any, isTournament: boolean = false) => {\n    return {\n        id: data.id,\n        active: data.safetyTechnique || data.active,\n        birthDate: data.person.birthDate,\n        mark: data.mark,\n        userName: data.userName,\n        registrationType: data.registrationType,\n        person: isTournament ? data.person.id : data.person,\n        safetyTechnique: data.safetyTechnique,\n        number: data.registrationType === 'NUMBER' ? data.mark : data.number,\n        rfidCode: data.registrationType === 'RFID' ? data.mark : data.rfidCode,\n        result: data.result\n    };\n};\n","import {IWeapon} from '@models/interfaces/weapons';\n\nexport const weaponMapperToServer = (data: IWeapon) => {\n    return {\n        count: data.count,\n        division: data.division.id,\n        owner: data.owner.id,\n        serialNumber: data.serialNumber,\n        weaponType: data.weaponName.id\n    };\n};\n","export enum Actions {\n    CHANGE = 'edit',\n    COMPETITORS = 'competitors',\n    REMOVE = 'remove',\n    CHANGE_PASSWORD = 'changePassword',\n    STAGES = 'stages',\n    RATING = 'rating',\n    START = 'start',\n    TESTS = 'tests',\n    QUESTIONS = 'Questions',\n    STATUS = 'status',\n    DETAILS = 'details',\n    STANDARDS = 'standards',\n    ERRORS = 'errors',\n    CONDITIONS = 'conditions',\n    CATEGORIES = 'categories',\n    UNITS = 'units',\n    TIE = 'tie',\n    UNTIE = 'untie',\n    ADD_SHOOTS = 'addShoots',\n    MEMBER = 'member'\n}\n","import {animate, style, transition, trigger} from '@angular/animations';\n\nexport namespace Animations {\n    export const enterLeaveOpacity = trigger('EnterLeave', [\n        transition(':enter', [\n            style({opacity: 0}),\n            animate(250)\n        ]),\n        transition(':leave', [\n            animate(250, style({opacity: 1}))\n        ])\n    ]);\n\n    export const enterLeaveTop = trigger('EnterLeave', [\n        transition(':enter', [\n            style({\n                opacity: 0,\n                transform: 'translateY(-100%)'\n            }),\n            animate('300ms ease-in', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            }))\n        ]),\n        transition(':leave', [\n            animate('250ms ease-in', style({\n                transform: 'translateY(-100%)',\n                opacity: 0\n            }))\n        ])\n    ]);\n\n    export const showHide = trigger('showHide', [\n        transition(':enter', [\n            style({\n                height: 0,\n                opacity: 0\n            }),\n            animate('200ms ease-in')\n        ]),\n        transition(':leave', [\n            animate('200ms ease-out', style({\n                height: 0,\n                opacity: 1\n            }))\n        ])\n    ]);\n}\n","export enum FormFieldName {\n    EMAIL = 'email',\n    PASSWORD = 'password',\n    RE_PASSWORD = 'repassword',\n    ACTIVE = 'active',\n    USER_NAME = 'userName',\n    NAME = 'name',\n    BIRTH_DATE = 'birthDate',\n    HUMAN_AMOUNT = 'humanAmount',\n    COMPETITORS = 'competitors',\n    STREET = 'street',\n    CITY = 'city',\n    REGION = 'region',\n    INDEX = 'index',\n    PHONE = 'phone',\n    RANK = 'rank',\n    MAIN_JUDGE = 'mainJudge',\n    STATISTICS_JUDGE = 'statisticsJudge',\n    DIVISION = 'division',\n    WEAPON_TYPE = 'weaponType',\n    PARENT = 'parent',\n    LEVEL = 'level',\n    EVENT_DATE = 'eventDate',\n    DIRECTOR = 'director',\n    ID = 'id',\n    LOGIN = 'login',\n    ADDRESS = 'address',\n    ROLE_NAME = 'roleName',\n    LOCATION = 'location',\n    TARGETS = 'targets',\n    POPPER_TARGETS = 'popper',\n    NO_SHOOTS_TARGETS = 'noShoots',\n    MAX_POINTS = 'maxPoints',\n    MIN_SHOOTS = 'minShoots',\n    CREATED_DATE = 'createdDate',\n    UPDATE_DATE = 'updateDate',\n    TARGETS_TYPE = 'targetsType',\n    SHOOTING_TYPE = 'shootingType',\n    POINTS_COUNT_TYPE = 'pointsCountType',\n    ISC_CLASSIFIER = 'ISC_classifier',\n    MEMBER = 'member',\n    NOT_COUNTED = 'notCounted',\n    STAGE_NUMBER = 'stageNumber',\n    STAGES = 'stages',\n    READY_CONDITION = 'readyCondition',\n    START_POSITION = 'startPosition',\n    PROCEDURE = 'procedure',\n    RATING = 'rating',\n    POINT_COUNT = 'pointCount',\n    RFID_CODE = 'rfidCode',\n    NUMBER = 'number',\n    RESULT = 'result',\n    REGISTRATION_TYPE = 'registrationType',\n    MARK = 'mark',\n    SAFE_TECHNIQUE = 'safetyTechnique',\n    RU_NAME = 'ru',\n    KZ_NAME = 'kk',\n    QUESTIONS_COUNT = 'questionsCount',\n    HANDGUN_IPSC_CODE = 'handgunCodeIpsc',\n    SHOTGUN_IPSC_CODE = 'shotgunCodeIpsc',\n    RIFLE_IPSC_CODE = 'rifleCodeIpsc',\n    DATE = 'date',\n    UNDEFINED = 'UNDEFINED',\n    MISSION = 'MISSION',\n    SICK_LEAVE = 'Болен',\n    INFIRMARY = 'SICK_LEAVE',\n    HOSPITAL = 'HOSPITAL',\n    OUTFIT = 'OUTFIT',\n    DAY_OFF = 'DAY_OFF',\n    PRESENT = 'PRESENT',\n    DELAY = 'DELAY',\n    TOTAL = 'total',\n    STATUS = 'status',\n    SPECIALITY_RUS = 'specialityRus',\n    SPECIALITY_KZ = 'specialityKz',\n    NAME_CATEGORY_RUS = 'nameCategoryRus',\n    NAME_CATEGORY_KZ = 'nameCategoryKz',\n    NAME_FAILS_KZ = 'nameFailsKz',\n    NAME_FAILS_RUS = 'nameFailsRus',\n    NAMED_RUS = 'namedRus',\n    NAMED_KZ = 'namedKz',\n    DESCRIPTION_KZ = 'descriptionKz',\n    DESCRIPTION_RUS = 'descriptionRus',\n    MINUS_POINT = 'minusPoint',\n    TIME = 'time',\n    CATEGORY = 'category',\n    UNITS = 'units',\n    MAX_VALUE = 'maxValue',\n    MIN_VALUE = 'minValue',\n    COEFFICIENT = 'coefficient',\n    CONDITIONS_RUS = 'conditionsRus',\n    CONDITIONS_KZ = 'conditionsKz',\n    SCORE = 'score',\n    TIME_OF_EXERCISE = 'timeOfExercise',\n    GROUPS = 'groups',\n    OWNER = 'owner',\n    IMAGE_PATH = 'imagePath',\n    WEAPON_NAME = 'weaponName',\n    SERIAL_NUMBER = 'serialNumber',\n    COUNT = 'count',\n    STAGE_COUNT = 'stageCount',\n    DISQUALIFICATION_REASON = 'disqualificationReason',\n    PLACE = 'competitionPlace',\n    PERCENTAGE = 'percentage',\n    HIT_FACTOR = 'hitFactor',\n    COMPETITION_PLACE = 'competitionPlace',\n    ALL_TARGETS = 'allTargets',\n    NUMBER_IN_ORDER = 'numberInOrder'\n}\n","export enum FormTypes {\n    CATEGORY = 'category',\n    CONDITIONS = 'conditions',\n    FAILS = 'fails'\n}\n","import {\n    faArrowCircleLeft,\n    faBookOpen,\n    faCalendarAlt,\n    faCheck,\n    faChevronDown,\n    faChevronUp, faExclamationTriangle, faFileContract,\n    faFileUpload,\n    faFlagCheckered,\n    faInfoCircle,\n    faKey, faLink, faList,\n    faPen,\n    faPlus,\n    faQuestionCircle,\n    faSearch,\n    faSort,\n    faSortDown,\n    faSortUp, faThLarge,\n    faTimes,\n    faTrash,\n    faTrophy, faUnlink,\n    faUsers,\n    faWindowRestore\n} from '@fortawesome/free-solid-svg-icons';\n\nexport const Icons = {\n    calendar: faCalendarAlt,\n    closeIcon: faTimes,\n    chevronUp: faChevronUp,\n    chevronDown: faChevronDown,\n    sort: faSort,\n    asc: faSortUp,\n    desc: faSortDown,\n    search: faSearch,\n    add: faPlus,\n    edit: faPen,\n    back: faArrowCircleLeft,\n    delete: faTrash,\n    competitors: faUsers,\n    trophy: faTrophy,\n    stages: faFlagCheckered,\n    changePassword: faKey,\n    tests: faWindowRestore,\n    questions: faQuestionCircle,\n    uploadFile: faFileUpload,\n    checkIcon: faCheck,\n    details: faInfoCircle,\n    standards: faBookOpen,\n    categories: faThLarge,\n    errors: faExclamationTriangle,\n    conditions: faList,\n    units: faFileContract,\n    tie: faLink,\n    untie: faUnlink\n};\n","export enum PageTypes {\n    PERSON = 'Person',\n    JUDGE = 'Judge',\n    TOURNAMENT = 'Tournament',\n    STAGE = 'Stage',\n    COMPETITOR = 'Competitor',\n    DIVISION = 'Division',\n    EXERCISE = 'Exercise',\n    TESTS = 'Tests',\n    QUESTIONS = 'Questions',\n    SUBJECTS = 'Subjects',\n    COMBAT_LIST = 'Combat List',\n    CHECKIN = 'Checkin',\n    CHECKIN_DETAILS = 'Checkin Details',\n    SPECIALITIES = 'Specialities',\n    STANDARDS = 'Standards',\n    STANDARD_DETAILS = 'Standard Details',\n    CATEGORY = 'Category',\n    CONDITION = 'Condition',\n    UNIT = 'Unit',\n    USER = 'User',\n    FAILS = 'Fails',\n    WEAPON_TYPES = 'WeaponType',\n    WEAPON = 'Weapon',\n    COURSE = 'Course',\n    RATING = 'Rating'\n}\n","export enum ToastrTitle {\n    SUCCESS = 'Success',\n    ERROR = 'Error',\n    INFO = 'Info',\n    WARNING = 'Warning'\n}\n\nexport enum ToastrUsersType {\n    PERSON = 'Person',\n    JUDGE = 'Judge',\n    TOURNAMENT = 'Tournament',\n    STAGE = 'Stage',\n    COMPETITORS = 'Competitors',\n    COMPETITOR = 'Competitor',\n    DIVISION = 'Division',\n    TEST = 'Test',\n    QUESTION = 'Question',\n    SPECIALITY = 'Speciality',\n    CATEGORY = 'Category',\n    CONDITION = 'Condition',\n    UNIT = 'Unit',\n    USER = 'User',\n    STANDARD = 'Standard',\n    WEAPON_TYPE = 'Weapon type',\n    WEAPON = 'Weapon',\n    COURSE = 'Course'\n}\n\nexport enum ToastrMessageType {\n    CREATE = 'create',\n    UPDATE = 'update',\n    REMOVE = 'remove'\n}\n","export type SortDirection = 'asc' | 'desc' | '';\n\nexport const rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\n\nexport const compare = (v1, v2) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\n\nexport interface SortEvent {\n    column: string;\n    direction: SortDirection;\n}\n","import {ICourse} from '@models/interfaces/courses';\n\nexport namespace CourseMocks {\n    export const emptyCourse: ICourse = {\n        name: '',\n        date: '',\n        address: '',\n        imagePath: ''\n    };\n}\n","import {IScore} from '@models/interfaces/score';\n\nexport namespace ExerciseMocks {\n    export const emptyScore: IScore = {\n        mark: '',\n        score: null,\n        timeOfExercise: 0,\n        type: 'NUMBER',\n        disqualificationReason: ''\n    };\n}\n","import {FormFieldName} from '@models/constants/fields';\n\nexport namespace FieldsMocks {\n    export const notDisplayedFields = [\n        FormFieldName.ID,\n        FormFieldName.ROLE_NAME,\n        FormFieldName.CREATED_DATE,\n        FormFieldName.UPDATE_DATE,\n        FormFieldName.STAGES,\n        FormFieldName.HUMAN_AMOUNT,\n        FormFieldName.COMPETITORS,\n        FormFieldName.QUESTIONS_COUNT,\n        FormFieldName.MEMBER,\n        FormFieldName.PARENT,\n        FormFieldName.STAGE_COUNT,\n        FormFieldName.STAGE_NUMBER,\n        FormFieldName.ALL_TARGETS,\n        FormFieldName.NUMBER_IN_ORDER\n    ];\n\n    export const numberFields = [\n        FormFieldName.POPPER_TARGETS,\n        FormFieldName.TARGETS,\n        FormFieldName.NO_SHOOTS_TARGETS,\n        FormFieldName.MAX_VALUE,\n        FormFieldName.MIN_VALUE,\n        FormFieldName.COEFFICIENT,\n        FormFieldName.COUNT\n    ];\n\n    export const switcherFields = [\n        FormFieldName.ACTIVE,\n        FormFieldName.MEMBER,\n        FormFieldName.GROUPS,\n    ];\n\n    export const selectFields = [\n        FormFieldName.RANK,\n        FormFieldName.LEVEL,\n        FormFieldName.WEAPON_TYPE,\n        FormFieldName.LEVEL,\n        FormFieldName.MAIN_JUDGE,\n        FormFieldName.STATISTICS_JUDGE,\n        FormFieldName.DIRECTOR,\n        FormFieldName.ISC_CLASSIFIER,\n        FormFieldName.SHOOTING_TYPE,\n        FormFieldName.POINTS_COUNT_TYPE,\n        FormFieldName.DIVISION,\n        FormFieldName.UNITS,\n        FormFieldName.OWNER,\n        FormFieldName.WEAPON_NAME\n    ];\n\n    export const datePickerFields = [\n        FormFieldName.BIRTH_DATE,\n        FormFieldName.EVENT_DATE,\n        FormFieldName.DATE\n    ];\n\n    export const notSelectableFields = [\n        FormFieldName.MAIN_JUDGE,\n        FormFieldName.STATISTICS_JUDGE,\n        FormFieldName.DIRECTOR,\n    ];\n\n    export const textareaFields = [\n        FormFieldName.READY_CONDITION,\n        FormFieldName.START_POSITION,\n        FormFieldName.PROCEDURE,\n        FormFieldName.POINT_COUNT,\n        FormFieldName.ADDRESS\n    ];\n}\n\nexport namespace FieldsForMobile {\n    export const notDisplayedCompetitorsFields = [\n        FormFieldName.NUMBER,\n        FormFieldName.RESULT,\n        FormFieldName.RFID_CODE,\n        FormFieldName.BIRTH_DATE,\n        FormFieldName.ID\n    ];\n}\n","import {IAddress} from '@models/interfaces/address';\nimport {FormFieldName} from '@models/constants/fields';\nimport {IDivision} from '@models/interfaces/division';\n\nexport namespace Mocks {\n\n    export const emptyAddress: IAddress = {\n        street: '',\n        city: '',\n        region: '',\n        index: 0,\n        phone: '',\n    };\n\n    export const emptyJudge: any = {\n        id: '',\n        userName: '',\n        birthDate: '',\n        login: '',\n        password: '',\n        active: true\n    };\n\n    export const emptyPerson = (division: IDivision) => {\n        return {\n            id: '',\n            userName: '',\n            birthDate: '',\n            address: emptyAddress,\n            rank: undefined,\n            division,\n            level: undefined,\n            handgunCodeIpsc: '',\n            shotgunCodeIpsc: '',\n            rifleCodeIpsc: '',\n            active: true,\n            roleName: ''\n        };\n    };\n\n    export const displayedCells = [\n        FormFieldName.NAME,\n        FormFieldName.HUMAN_AMOUNT,\n        FormFieldName.USER_NAME,\n        FormFieldName.BIRTH_DATE,\n        FormFieldName.RANK,\n        FormFieldName.LOCATION,\n        FormFieldName.MAX_POINTS,\n        FormFieldName.MIN_SHOOTS,\n        FormFieldName.NOT_COUNTED,\n        FormFieldName.ALL_TARGETS,\n        FormFieldName.LOGIN,\n        FormFieldName.ACTIVE,\n        FormFieldName.MEMBER,\n        FormFieldName.RATING,\n        FormFieldName.LEVEL,\n        FormFieldName.QUESTIONS_COUNT,\n        FormFieldName.RU_NAME,\n        FormFieldName.KZ_NAME,\n        FormFieldName.SAFE_TECHNIQUE,\n        FormFieldName.DATE,\n        FormFieldName.UNDEFINED,\n        FormFieldName.MISSION,\n        FormFieldName.SICK_LEAVE,\n        FormFieldName.INFIRMARY,\n        FormFieldName.HOSPITAL,\n        FormFieldName.OUTFIT,\n        FormFieldName.DAY_OFF,\n        FormFieldName.PRESENT,\n        FormFieldName.DELAY,\n        FormFieldName.TOTAL,\n        FormFieldName.STATUS,\n        FormFieldName.SPECIALITY_RUS,\n        FormFieldName.SPECIALITY_KZ,\n        FormFieldName.NAME_CATEGORY_RUS,\n        FormFieldName.NAME_CATEGORY_KZ,\n        FormFieldName.TIME,\n        FormFieldName.CATEGORY,\n        FormFieldName.SCORE,\n        FormFieldName.TIME_OF_EXERCISE,\n        FormFieldName.CONDITIONS_RUS,\n        FormFieldName.CONDITIONS_KZ,\n        FormFieldName.COEFFICIENT,\n        FormFieldName.UNITS,\n        FormFieldName.NAME_FAILS_RUS,\n        FormFieldName.NAME_CATEGORY_KZ,\n        FormFieldName.MINUS_POINT,\n        FormFieldName.NAMED_RUS,\n        FormFieldName.NAMED_KZ,\n        FormFieldName.GROUPS,\n        FormFieldName.SERIAL_NUMBER,\n        FormFieldName.WEAPON_NAME,\n        FormFieldName.OWNER,\n        FormFieldName.COUNT,\n        FormFieldName.STAGE_COUNT,\n        FormFieldName.DISQUALIFICATION_REASON,\n        FormFieldName.PERCENTAGE,\n        FormFieldName.HIT_FACTOR,\n        FormFieldName.COMPETITION_PLACE,\n        FormFieldName.NUMBER_IN_ORDER\n    ];\n}\n\n","import {IAnswers, ITest} from '@models/interfaces/quiz';\n\nexport namespace QuizMocks {\n    export const emptyQuiz: ITest = {\n        ru: '',\n        kk: '',\n        time: 0,\n        great: 0,\n        good: 0,\n        satisfactorily: 0,\n    };\n\n    export const emptyAnswers: IAnswers = {\n        kk: '',\n        ru: ''\n    };\n\n    export const emptyQuestion = {\n        question: emptyAnswers,\n        right: 1,\n        random: false,\n        answers: [emptyAnswers, emptyAnswers]\n    };\n\n    export const questionRadio = [\n        {\n            value: 1,\n        },\n        {\n            value: 2\n        },\n    ];\n}\n","import {ISpecialities} from '@models/interfaces/specialities';\nimport {ICondition, IConditionUnits, IStandard, IStandardCategory} from '@models/interfaces/standard';\n\nexport namespace SpecialitiesMocks {\n    export const emptySpeciality: ISpecialities = {\n        specialityRus: '',\n        specialityKz: ''\n    };\n}\n\nexport namespace StandardsMocks {\n    export const emptyUnit: IConditionUnits = {\n        name: ''\n    };\n\n    export const emptyCondition: ICondition = {\n        conditionsRus: '',\n        conditionsKz: '',\n        coefficient: 0,\n        minValue: 0,\n        maxValue: 0,\n        units: ''\n    };\n\n    export const emptyCategory: IStandardCategory = {\n        nameCategoryRus: '',\n        nameCategoryKz: ''\n    };\n\n    export const emptyStandard: IStandard = {\n        namedRus: '',\n        namedKz: '',\n        descriptionRus: '',\n        descriptionKz: '',\n        active: true,\n        groups: false\n    };\n}\n","import {IStage} from '@models/interfaces/stage';\nimport {ITournament} from '@models/interfaces/tournament';\n\nexport namespace TournamentMocks {\n\n    export const emptyStage: IStage = {\n        name: '',\n        stageNumber: undefined,\n        location: '',\n        ISC_classifier: undefined,\n        targets: undefined,\n        popper: undefined,\n        noShoots: undefined,\n        notCounted: undefined,\n        minShoots: undefined,\n        maxPoints: undefined,\n        readyCondition: '',\n        startPosition: '',\n        procedure: '',\n        pointCount: '',\n    };\n\n    export const EMPTY_TOURNAMENT: ITournament = {\n        id: '',\n        name: '',\n        active: true,\n        eventDate: '',\n        location: '',\n        director: undefined,\n        level: undefined,\n        mainJudge: undefined,\n        stages: [undefined],\n        statisticsJudge: undefined,\n        competitors: [],\n        weaponType: undefined\n    };\n\n}\n","import {IWeapon, IWeaponTypes} from '@models/interfaces/weapons';\n\nexport namespace WeaponMocks {\n    export const emptyWeaponType: IWeaponTypes = {\n        name: ''\n    };\n\n    export const emptyWeapon: IWeapon = {\n        weaponName: '',\n        serialNumber: '',\n        division: undefined,\n        owner: undefined,\n        count: 0\n    };\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AnswersComponent} from './components/answers/answers.component';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AnswersComponent\n    }\n];\n\n@NgModule({\n    declarations: [AnswersComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes)\n    ]\n})\nexport class AnswersModule {\n}\n","<div class=\"container\">\n    <div class=\"row mt-2 mb-2\" *ngIf=\"subject\">\n        <div class=\"col-6 offset-3 text-center test__title\">{{subject[currentLang]}}</div>\n        <div class=\"col-3\">\n            <div class=\"row justify-content-end test__time-left\">Осталось времени</div>\n            <div class=\"row justify-content-end test__value mt-3 mb-3\">00:10:00</div>\n        </div>\n    </div>\n    <div class=\"row test__name mt-2 mb-2\" *ngIf=\"test\">\n        <div class=\"col-6 offset-3 text-center test__name\">{{test[currentLang]}}</div>\n        <div class=\"col-3\">\n            <div class=\"row justify-content-end test__question-left\">Осталось вопросов</div>\n            <div class=\"row justify-content-end test__value mt-3 mb-3\">26 / 50</div>\n        </div>\n    </div>\n    <!--    <div class=\"row test__name mt-3 mb-3\">-->\n    <!--        <div class=\"col-4 offset-4 text-center test__person-name\">Обучаемый</div>-->\n    <!--    </div>-->\n    <div class=\"row justify-content-center\">\n        <img src=\"https://fedoramagazine.org/wp-content/uploads/2015/03/test-days-945x400.png\"\n             class=\"rounded float-left w-50 h-50\">\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12 mb-3 mt-3\" *ngIf=\"question\">\n            <div class=\"test__question text-center rounded\">{{question[currentLang]}}</div>\n        </div>\n    </div>\n    <div class=\"row justify-content-center mt-4 mb-4 flex-wrap\" *ngIf=\"question?.answers?.length\">\n        <ng-container *ngFor=\"let answer of question?.answers\">\n            <div class=\"col-6 mt-1 mb-1\">\n                <button type=\"button\" class=\"btn btn-primary btn__big w-100\">\n                    {{answer[currentLang]}}\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <!--    <div class=\"row justify-content-center mt-4 mb-4\">-->\n    <!--        <div class=\"col-6\">-->\n    <!--            <img src=\"http://shopwoo.flashchat.ai/wp-content/uploads/2018/09/test.png\" class=\"w-100 rounded\">-->\n    <!--        </div>-->\n    <!--        <div class=\"col-6\">-->\n    <!--            <img src=\"http://shopwoo.flashchat.ai/wp-content/uploads/2018/09/test.png\" class=\"w-100 rounded\">-->\n    <!--        </div>-->\n    <!--    </div>-->\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {IQuestion, ISubject, ITest} from '@models/interfaces/quiz';\nimport {Subscription} from 'rxjs';\nimport {TranslateService} from '@ngx-translate/core';\nimport {QuizService} from '@quiz/services/quiz.service';\nimport {ModalService} from '@modal/services/modal.service';\n\n@Component({\n    selector: 'app-answers',\n    templateUrl: './answers.component.html',\n    styleUrls: ['./answers.component.scss']\n})\nexport class AnswersComponent implements OnInit, OnDestroy {\n    public subject: ISubject;\n    public test: ITest;\n    public question: IQuestion;\n\n    private subscriptions: Subscription[] = [];\n    private currentLang: string;\n\n    constructor(private translateService: TranslateService,\n                private quizService: QuizService,\n                private modalService: ModalService) {\n    }\n\n    ngOnInit() {\n        this.currentLang = localStorage.getItem('lang');\n        this.subscriptions.push(this.translateService.onLangChange.subscribe((res) => {\n            this.currentLang = res.lang;\n        }));\n        //\n        this.quizService.getSubjects().subscribe(subjects => {\n            this.subject = subjects[0];\n            this.quizService.getTestsBySubject(this.subject.id).subscribe(tests => {\n                this.test = tests[0];\n                this.quizService.getQuestionList(this.test.id).subscribe(questions => {\n                    this.question = questions[0];\n                });\n            });\n        });\n        // this.modalService.openModal()\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((s: Subscription) => s.unsubscribe());\n    }\n\n}\n","import {Action} from '@ngrx/store';\nimport {ICheckin, ICheckinParams} from '@models/interfaces/checkin';\nimport {IPerson} from '@models/interfaces/human';\n\nexport enum ActionTypes {\n    LoadCheckin = '[Checkin Page] Load Checkin',\n    LoadedCheckin = '[Checkin Page] Loaded Checkin',\n    CheckinErrors = '[Checkin Page] Checkin Errors',\n    LoadDivisionCheckinByInterval = '[Checkin Page] Load Division Checkin By Interval',\n    LoadedDivisionCheckinByInterval = '[Checkin Page] Loaded Division Checkin By Interval',\n    LoadPersonsCheckinByDivision = '[Checkin Page] Load Persons Checkin By Division',\n    LoadedPersonsCheckinByDivision = '[Checkin Page] Loaded Persons Checkin By Division',\n    ClearCheckin = '[Checkin Page] Clear Checkin'\n}\n\nexport class LoadCheckin implements Action {\n    readonly type = ActionTypes.LoadCheckin;\n\n    constructor(public payload: ICheckinParams) {\n    }\n}\n\nexport class LoadedCheckin implements Action {\n    readonly type = ActionTypes.LoadedCheckin;\n\n    constructor(public payload: ICheckin[]) {\n    }\n}\n\nexport class ClearCheckin implements Action {\n    readonly type = ActionTypes.ClearCheckin;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadDivisionCheckinByInterval implements Action {\n    readonly type = ActionTypes.LoadDivisionCheckinByInterval;\n\n    constructor(public payload: ICheckinParams) {\n    }\n}\n\nexport class LoadedDivisionCheckinByInterval implements Action {\n    readonly type = ActionTypes.LoadedDivisionCheckinByInterval;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadPersonsCheckinByDivision implements Action {\n    readonly type = ActionTypes.LoadPersonsCheckinByDivision;\n\n    constructor(public payload: string | number) {\n    }\n}\n\nexport class LoadedPersonsCheckinByDivision implements Action {\n    readonly type = ActionTypes.LoadedPersonsCheckinByDivision;\n\n    constructor(public payload: IPerson[]) {\n    }\n}\n\nexport class CheckinErrors implements Action {\n    readonly type = ActionTypes.CheckinErrors;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport type CheckinActions = LoadCheckin | LoadedCheckin | CheckinErrors |\n    LoadDivisionCheckinByInterval | LoadedDivisionCheckinByInterval |\n    LoadPersonsCheckinByDivision | LoadedPersonsCheckinByDivision | ClearCheckin;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\n\nimport {CheckinComponent} from './components/checkin/checkin.component';\nimport {SharedModule} from '@shared/shared.module';\nimport {CheckinDetailsComponent} from './components/checkin-details/checkin-details.component';\nimport {ModalModule} from '@modal/modal.module';\nimport {TableModule} from '@table/table.module';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CheckinComponent\n    }\n];\n\n@NgModule({\n    declarations: [CheckinComponent, CheckinDetailsComponent],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        NgSelectModule,\n        SharedModule,\n        FontAwesomeModule,\n        ReactiveFormsModule,\n        ModalModule,\n        TableModule,\n        RouterModule.forChild(routes)\n    ]\n})\nexport class CheckinModule {\n}\n","<div class=\"container\">\n  <div class=\"row mt-3\">\n    <div class=\"col\">\n      <h1>{{'checkinDetails' | translate}}</h1>\n    </div>\n  </div>\n  <div class=\"row mt-3\">\n    <div class=\"col-6 d-flex justify-content-between align-items-center mb-2\"\n         *ngIf=\"personStatuses.length\"\n    >\n      <label for=\"status\">{{'status' | translate}}</label>\n      <ng-select class=\"w-75\"\n                 id=\"status\"\n                 [items]=\"translatedStatuses\"\n                 [placeholder]=\"'choose' | translate: {value: ('status' | translate).toLowerCase()}\"\n                 [bindLabel]=\"'state'\"\n                 [bindValue]=\"'state'\"\n                 (change)=\"onStatusChanged($event)\"\n                 [dropdownPosition]=\"'bottom'\"\n      ></ng-select>\n    </div>\n  </div>\n  <div class=\"mt-3\" *ngIf=\"officersCheckin && officersCheckin.length\">\n    <h4 class=\"mb-2 font-weight-bold text-center\">{{'officersSetup' | translate}}</h4>\n    <app-base-table [objects]=\"officersCheckin\"\n    ></app-base-table>\n  </div>\n  <div class=\"mt-3\" *ngIf=\"checkin && checkin.length\">\n    <h4 class=\"mb-2 font-weight-bold text-center\">{{'soldiersSetup' | translate}}</h4>\n    <app-base-table [objects]=\"checkin\"\n    ></app-base-table>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Subscription} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {SubSink} from 'subsink';\n\nimport {selectStatuses} from '@shared/selectors/selectors';\nimport {IDialogActions, IStatus} from '@models/interfaces/human';\nimport {SharedService} from '@shared/services/shared.service';\nimport {CombatListService} from '@combat-list/services/combat-list.service';\nimport {ClearCheckin, LoadCheckin} from '@checkin/actions/actions';\nimport {ICheckin, ICheckinParams} from '@models/interfaces/checkin';\nimport {selectCheckinData} from '@checkin/selectors/selectors';\nimport {PageTypes} from '@models/constants/page-types';\nimport {LoadStatuses} from '@shared/actions/actions';\nimport {DialogsService} from '@shared/services/dialogs.service';\n\n@Component({\n    selector: 'app-checkin-details',\n    templateUrl: './checkin-details.component.html',\n    styleUrls: ['./checkin-details.component.scss']\n})\nexport class CheckinDetailsComponent implements OnInit, OnDestroy {\n    public personStatuses: IStatus[] = [];\n    public statusNames: string[];\n    public translatedStatuses: string[];\n    public selectedStatus: string;\n    public checkin: ICheckin[];\n    public officersCheckin: ICheckin[];\n    public pages = PageTypes;\n    public isOfficers = false;\n\n    private subscriptions: Subscription[] = [];\n    private divisionId: string;\n    private filteredDate: string;\n    private filteredInterval: string;\n    private dialogSubs: SubSink = new SubSink();\n\n    constructor(private store: Store<any>,\n                private route: ActivatedRoute,\n                private sharedService: SharedService,\n                private combatListService: CombatListService,\n                private location: Location,\n                private dialogsService: DialogsService) {\n    }\n\n    ngOnInit() {\n        this.getParams();\n        this.getPersonStatuses();\n    }\n\n    getParams() {\n        this.subscriptions.push(\n            this.route.queryParams.subscribe((params) => {\n                this.divisionId = params['divisionId'];\n                this.filteredDate = params['date'];\n                this.filteredInterval = params['interval'];\n            })\n        );\n    }\n\n    getPersonStatuses() {\n        this.subscriptions.push(\n            this.store.pipe(select(selectStatuses))\n                .subscribe((statuses: IStatus[]) => {\n                    this.personStatuses = statuses;\n                    this.statusNames = this.getStatusesNames(statuses);\n                    this.translatedStatuses = this.getTranslatedStatuses(this.statusNames);\n                    if (!this.personStatuses.length) {\n                        this.store.dispatch(new LoadStatuses());\n                    }\n                })\n        );\n    }\n\n    getStatusesNames(statuses: IStatus[]): string[] {\n        return statuses.map((status: IStatus) => status.state);\n    }\n\n    getTranslatedStatuses(statusNames: string[]): string[] {\n        return this.sharedService.translateArray(statusNames);\n    }\n\n    initDialogAction() {\n        const options = this.getDialogOptions();\n        this.dialogSubs.sink = this.dialogsService.getDialogAction(options)\n            .subscribe((result) => {\n                if (result !== 'Отменить' && this.translatedStatuses.includes(result)) {\n                    this.selectedStatus = result;\n                    const currentStatus = this.getCurrentStatus(this.selectedStatus);\n                    const checkinParams = this.getCheckinParams(currentStatus);\n                    this.getDivisionCheckinDetails(checkinParams);\n                }\n            });\n    }\n\n    getDialogOptions(): IDialogActions {\n        return this.dialogsService.getDialogOptions('статус', this.translatedStatuses);\n    }\n\n    getDivisionCheckinDetails(checkinParams: ICheckinParams) {\n        this.fetchCheckin(checkinParams);\n        this.subscriptions.push(\n            this.store.pipe(select(selectCheckinData))\n                .subscribe((checkin: ICheckin[]) => {\n                    if (checkin && checkin.length) {\n                        this.separatePersonsByRank(checkin);\n                    }\n                })\n        );\n    }\n\n    fetchCheckin(checkinParams: ICheckinParams) {\n        this.store.dispatch(new LoadCheckin(checkinParams));\n    }\n\n    getCurrentStatus(status: string) {\n        const index = this.findStatusIndex(status);\n        return this.statusNames[index];\n    }\n\n    separatePersonsByRank(checkin: ICheckin[]) {\n        this.officersCheckin = checkin.filter((item: ICheckin) => item.rank.officer);\n        this.checkin = checkin.filter((item: ICheckin) => !item.rank.officer);\n    }\n\n    findStatusIndex(status: string): number {\n        return this.translatedStatuses.findIndex((item: string) => item === status);\n    }\n\n    getCheckinParams(status: string): ICheckinParams {\n        return {\n            division: this.divisionId,\n            date: this.filteredDate,\n            interval: this.filteredInterval,\n            status: status\n        };\n    }\n\n    onStatusChanged(value: string) {\n        const status = this.getCurrentStatus(value);\n        const checkinParams = this.getCheckinParams(status);\n        this.store.dispatch(new LoadCheckin(checkinParams));\n    }\n\n    goBack() {\n        this.location.back();\n    }\n\n    onSwitchTables() {\n        this.isOfficers = !this.isOfficers;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((s: Subscription) => s.unsubscribe());\n        this.store.dispatch(new ClearCheckin([]));\n    }\n}\n","<div class=\"container\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <h1>{{'divisionList' | translate}}</h1>\n        </div>\n    </div>\n    <div class=\"row flex-wrap mt-4\">\n        <div class=\"col-6 d-flex justify-content-between mb-2\"\n             *ngIf=\"divisions\"\n        >\n            <label for=\"divisions\">{{'divisions' | translate}}</label>\n            <div class=\"d-flex flex-column w-75\">\n                <ng-select class=\"w-100\"\n                           id=\"divisions\"\n                           [items]=\"divisions\"\n                           [placeholder]=\"'choose' | translate: {value: ('division' | translate).toLowerCase()}\"\n                           [bindLabel]=\"'name'\"\n                           [bindValue]=\"'id'\"\n                           (change)=\"onItemSelected($event, 'division')\"\n                           [dropdownPosition]=\"'bottom'\"\n                           [formControlName]=\"'division'\"\n                           [ngClass]=\"{'is-invalid': submitted && form.controls['division'].errors}\"\n                ></ng-select>\n                <app-error [form]=\"form\" [submitted]=\"submitted\" [controlName]=\"'division'\"></app-error>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6 d-flex justify-content-between mb-2\"\n             *ngIf=\"intervals.length\"\n        >\n            <label for=\"intervals\">{{'interval' | translate}}</label>\n            <div class=\"d-flex flex-column w-75\">\n                <ng-select class=\"w-100\"\n                           id=\"intervals\"\n                           [items]=\"translatedIntervals\"\n                           [placeholder]=\"'choose' | translate: {value: ('interval' | translate).toLowerCase()}\"\n                           (change)=\"onItemSelected($event, 'interval')\"\n                           [dropdownPosition]=\"'bottom'\"\n                           [formControlName]=\"'interval'\"\n                           [bindLabel]=\"form.controls['interval'].value\"\n                           [bindValue]=\"form.controls['interval'].value\"\n                           [ngClass]=\"{'is-invalid': submitted && form.controls['interval'].errors}\"\n                ></ng-select>\n                <app-error [form]=\"form\" [submitted]=\"submitted\" [controlName]=\"'interval'\"></app-error>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6 d-flex justify-content-between mb-2\">\n            <label for=\"date\">{{'date' | translate}}</label>\n            <div class=\"d-flex flex-column w-75\">\n                <app-datepicker class=\"w-100\"\n                                id=\"date\"\n                                [form]=\"form\"\n                                [controlName]=\"'date'\"\n                                (setControlValue)=\"getDateValue($event)\"\n                                [submitted]=\"submitted\"\n                ></app-datepicker>\n                <app-error [form]=\"form\" [submitted]=\"submitted\" [controlName]=\"'date'\"></app-error>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6 d-flex justify-content-between align-items-center mt-2 mb-2\"\n             *ngIf=\"intervals.length\"\n        >\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"loadCheckin()\"\n            >{{'load' | translate}}</button>\n        </div>\n    </div>\n    <div class=\"mt-3\">\n        <app-base-table [objects]=\"checkinByInterval\"\n                        [actions]=\"mobileActions\"\n                        (action)=\"handleAction($event)\"\n        ></app-base-table>\n    </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {select, Store} from '@ngrx/store';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Subscription} from 'rxjs';\nimport {Location} from '@angular/common';\n\nimport {IDivision} from '@models/interfaces/division';\nimport {selectDivisionsData} from '@divisions/selectors/selectors';\nimport {selectIntervals} from '@shared/selectors/selectors';\nimport {SharedService} from '@shared/services/shared.service';\nimport {PageTypes} from '@models/constants/page-types';\nimport {CombatListService} from '@combat-list/services/combat-list.service';\nimport {IDialogActions, IPerson} from '@models/interfaces/human';\nimport {LoadDivisionCheckinByInterval, LoadPersonsCheckinByDivision} from '@checkin/actions/actions';\nimport {selectCheckinByInterval, selectPersonCheckinByDivision} from '@checkin/selectors/selectors';\nimport {ICombatNote} from '@models/interfaces/checkin';\nimport {Actions} from '@models/constants/actions';\nimport {LoadTimeIntervals} from '@shared/actions/actions';\nimport {LoadDivisions} from '@divisions/actions/actions';\nimport {ModalService} from '@modal/services/modal.service';\nimport {IDatePickerOptions} from '@models/interfaces/shared';\nimport {SubSink} from 'subsink';\n\n@Component({\n    selector: 'app-commander-division-list',\n    templateUrl: './checkin.component.html',\n    styleUrls: ['./checkin.component.scss']\n})\nexport class CheckinComponent implements OnInit, OnDestroy {\n    public form: FormGroup;\n    public submitted = false;\n    public intervals: string[] = [];\n    public translatedIntervals: string[] = [];\n    public divisions: IDivision[] = [];\n    public divisionNames: string[] = [];\n    public selectedDivision: string;\n    public selectedDate: string;\n    public selectedInterval: string;\n    public isoDate: string;\n    public openMobileModal = false;\n    public pageType = PageTypes;\n    public isInvalid = false;\n    public personsByDivision: IPerson[];\n    public checkinByInterval: ICombatNote[];\n    public mobileActions: string[];\n\n    private subscriptions: Subscription[] = [];\n    private dialogValueSubscription: Subscription;\n    private datePickerSubs: SubSink = new SubSink();\n\n    constructor(private store: Store<any>,\n                private translateService: TranslateService,\n                private fb: FormBuilder,\n                private sharedService: SharedService,\n                private combatListService: CombatListService,\n                private router: Router,\n                private location: Location,\n                private modalService: ModalService) {\n    }\n\n    ngOnInit() {\n        this.mobileActions = [Actions.DETAILS];\n        this.getDivisionsList();\n        this.getTimeIntervals();\n    }\n\n    getDivisionsList() {\n        this.subscriptions.push(\n            this.store.pipe(select(selectDivisionsData))\n                .subscribe((divisions: IDivision[]) => {\n                    if (divisions) {\n                        this.divisions = divisions;\n                        this.divisionNames = this.getDivisionNames(this.divisions);\n                    }\n\n                    if (!this.divisions.length) {\n                        this.store.dispatch(new LoadDivisions());\n                    }\n                })\n        );\n    }\n\n    getDivisionNames(divisions: IDivision[]) {\n        return divisions.map((division: IDivision) => division.name);\n    }\n\n    getTimeIntervals() {\n        this.subscriptions.push(\n            this.store.pipe(select(selectIntervals))\n                .subscribe((intervals: string[]) => {\n                    this.translatedIntervals = this.translateIntervals(intervals);\n                    this.intervals = intervals;\n                    if (!this.translatedIntervals.length || !this.intervals.length) {\n                        this.store.dispatch(new LoadTimeIntervals());\n                    }\n                    this.createForm();\n                })\n        );\n    }\n\n    createForm() {\n        this.form = this.fb.group({\n            division: [null, Validators.required],\n            date: ['', Validators.required],\n            interval: [null, Validators.required]\n        });\n    }\n\n    translateIntervals(intervals: string[]): string[] {\n        return this.sharedService.translateArray(intervals);\n    }\n\n    handleAction(event: { action: string, item: any }) {\n        if (event.action === Actions.DETAILS) {\n            this.goToCheckinDetails();\n        }\n    }\n\n    // Don't remove this method.\n    // It needs for mobile.\n    dialogAction(options: IDialogActions) {\n        this.combatListService.getDialogAction(options);\n        this.dialogValueSubscription = this.combatListService.dialogValue\n            .subscribe((result) => {\n                if (result && result !== 'Отменить') {\n                    if (this.divisionNames.includes(result)) {\n                        this.getDivisionDialogValue(result);\n                        this.setDivisionValue();\n                        return;\n                    } else if (this.translatedIntervals.includes(result)) {\n                        this.getIntervalsDialogValue(result);\n                        this.setIntervalValue();\n                        return;\n                    }\n                }\n            });\n    }\n\n    // Don't remove this method.\n    // It needs for mobile.\n    getDialogOptions(title: string, actions: string[]): IDialogActions {\n        return this.combatListService.getDialogOptions(title, actions);\n    }\n\n    getDivisionCheckinByInterval() {\n        this.subscriptions.push(\n            this.store.pipe(select(selectCheckinByInterval))\n                .subscribe((checkinByInterval: ICombatNote[]) =>\n                    this.checkinByInterval = checkinByInterval)\n        );\n    }\n\n    setDivisionValue() {\n        const currentDivision = this.findCurrentDivision(this.selectedDivision);\n        this.form.controls['division'].setValue(currentDivision.id);\n        this.getPersonsByDivision(currentDivision.id);\n    }\n\n    getPersonsByDivision(divisionId: string | number) {\n        this.store.dispatch(new LoadPersonsCheckinByDivision(divisionId));\n        this.subscriptions.push(\n            this.store.pipe(select(selectPersonCheckinByDivision))\n                .subscribe((persons: IPerson[]) => this.personsByDivision = persons)\n        );\n\n    }\n\n    getDivisionDialogValue(dialogValue: string) {\n        this.selectedDivision = dialogValue;\n        this.dialogValueSubscription.unsubscribe();\n    }\n\n    findCurrentDivision(divisionName: string): IDivision {\n        return this.divisions.find((division: IDivision) => division.name === divisionName);\n    }\n\n    setIntervalValue() {\n        const currentInterval = this.getCurrentInterval(this.selectedInterval);\n        this.form.controls['interval'].setValue(currentInterval);\n    }\n\n    getCurrentInterval(item: string): string {\n        const index = this.findSelectedIntervalIndex(item);\n        return this.intervals[index];\n    }\n\n    findSelectedIntervalIndex(item: string): number {\n        return this.translatedIntervals.findIndex((value: string) => value === item);\n    }\n\n\n    getIntervalsDialogValue(dialogValue: string) {\n        this.selectedInterval = dialogValue;\n        this.dialogValueSubscription.unsubscribe();\n    }\n\n    onItemSelected(item: any, type: string) {\n        switch (type) {\n            case 'division':\n                this.selectedDivision = item.name;\n                return this.form.controls[type].setValue(item.id);\n            case 'interval':\n                this.selectedInterval = this.getCurrentInterval(item);\n                return this.form.controls[type].setValue(this.selectedInterval);\n        }\n    }\n\n    // Don't remove this method.\n    // It needs for mobile.\n    onSelectDate(event) {\n        const options: IDatePickerOptions = this.getDatePickerOptions(event);\n        this.initDatePicker(options);\n    }\n\n    initDatePicker(options: IDatePickerOptions) {\n        this.datePickerSubs.sink = this.modalService.initDateModal(options)\n            .subscribe((date: Date) => {\n                if (date) {\n                    this.selectedDate = date.toDateString();\n                    this.isoDate = date.toISOString();\n                    this.form.controls['date'].setValue(this.isoDate);\n                    this.datePickerSubs.unsubscribe();\n                }\n            });\n    }\n\n    getDatePickerOptions(event): IDatePickerOptions {\n        return this.modalService.getDateModalOptions({\n            date: new Date(),\n            dateFormat: 'dd MMMM yyyy',\n            okButtonText: 'Выбрать',\n            cancelButtonText: 'Отменить',\n            title: 'Дата',\n            locale: 'ru'\n        }, event);\n    }\n\n    loadCheckin() {\n        this.submitted = true;\n        if (this.form.invalid) {\n            this.isInvalid = true;\n            return;\n        }\n        this.isInvalid = false;\n        this.store.dispatch(new LoadDivisionCheckinByInterval(this.form.value));\n        this.getDivisionCheckinByInterval();\n    }\n\n    goToCheckinDetails() {\n        const currentDivision = this.findCurrentDivision(this.selectedDivision);\n        const currentInterval = this.getCurrentInterval(this.selectedInterval);\n        this.router.navigate(['checkin/checkin-details'], {\n            queryParams: {\n                divisionId: currentDivision.id,\n                date: this.isoDate,\n                interval: currentInterval || this.selectedInterval\n            }\n        });\n    }\n\n    getDatePart(date: string) {\n        const currentHours = new Date(date);\n        return currentHours.getUTCHours() < 12;\n    }\n\n    goBack() {\n        this.location.back();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((s: Subscription) => s.unsubscribe());\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap, withLatestFrom} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport {switchMap} from 'rxjs/internal/operators/switchMap';\n\nimport * as fromCheckin from '@checkin/actions/actions';\nimport {MessageService} from '@services/message.service';\nimport {CheckinService} from '@checkin/services/checkin.service';\nimport {ICheckin, ICombatNote} from '@models/interfaces/checkin';\nimport {IPerson} from '@models/interfaces/human';\nimport {checkinMapperFromServer} from '@mappers/checkin.mapper';\nimport {selectPersonCheckinByDivision} from '@checkin/selectors/selectors';\n\n@Injectable()\nexport class CheckinEffects {\n\n    constructor(private actions$: Actions,\n                private messageService: MessageService,\n                private checkinService: CheckinService,\n                private store: Store<any>) {\n    }\n\n    @Effect()\n    loadCheckinByParams$ = this.actions$\n        .pipe(\n            ofType(fromCheckin.ActionTypes.LoadCheckin),\n            mergeMap((action: any) => this.checkinService.searchCheckin(action.payload)\n                .pipe(\n                    map((checkin: ICheckin[]) => new fromCheckin.LoadedCheckin(checkin)),\n                    catchError((error) => {\n                        this.messageService.showPushNotification(error);\n                        this.messageService.showToastrError(error);\n                        return of(new fromCheckin.CheckinErrors(error));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadDivisionCheckinByInterval$ = this.actions$\n        .pipe(\n            ofType(fromCheckin.ActionTypes.LoadDivisionCheckinByInterval),\n            withLatestFrom(this.store.pipe(select(selectPersonCheckinByDivision))),\n            switchMap(([action, persons]: any) => {\n                    return this.checkinService.getDivisionCheckinByInterval(action.payload)\n                        .pipe(\n                            map((combatLists: ICombatNote[]) => {\n                                const mappedData = combatLists.map((item) => checkinMapperFromServer(item, persons.length));\n                                return new fromCheckin.LoadedDivisionCheckinByInterval(mappedData);\n                            }),\n                            catchError((error) => {\n                                this.messageService.showPushNotification(error);\n                                this.messageService.showToastrError(error);\n                                return of(new fromCheckin.CheckinErrors(error));\n                            })\n                        );\n                }\n            )\n        );\n\n    @Effect()\n    loadPersonsCheckinByDivision$ = this.actions$\n        .pipe(\n            ofType(fromCheckin.ActionTypes.LoadPersonsCheckinByDivision),\n            mergeMap((action: any) => this.checkinService.getPersonsCheckinByDivision(action.payload)\n                .pipe(\n                    map((persons: IPerson[]) => new fromCheckin.LoadedPersonsCheckinByDivision(persons)),\n                    catchError((error) => {\n                        this.messageService.showPushNotification(error);\n                        this.messageService.showToastrError(error);\n                        return of(new fromCheckin.CheckinErrors(error));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    clearCheckin$ = this.actions$\n        .pipe(\n            ofType(fromCheckin.ActionTypes.ClearCheckin),\n            map((action: any) => new fromCheckin.LoadedCheckin(action.payload)),\n            catchError((error) => {\n                this.messageService.showPushNotification(error);\n                this.messageService.showToastrError(error);\n                return of(new fromCheckin.CheckinErrors(error));\n            })\n        );\n}\n","import {ICheckin, ICombatNote} from '@models/interfaces/checkin';\nimport {ActionTypes, CheckinActions} from '@checkin/actions/actions';\nimport {IPerson} from '@models/interfaces/human';\n\nexport interface State {\n    checkin: ICheckin[];\n    checkinByInterval: ICombatNote[];\n    personCheckinByDivision: IPerson[];\n    errors?: any;\n}\n\nexport const initialState: State = {\n    checkin: undefined,\n    checkinByInterval: [],\n    personCheckinByDivision: [],\n};\n\nexport function reducer(state: State = initialState, action: CheckinActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedCheckin:\n            return {...state, checkin: action.payload};\n        case ActionTypes.LoadedDivisionCheckinByInterval:\n            return {...state, checkinByInterval: action.payload};\n        case ActionTypes.LoadedPersonsCheckinByDivision:\n            return {...state, personCheckinByDivision: action.payload};\n        case ActionTypes.CheckinErrors:\n            return {...state, errors: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromCheckin from '@checkin/reducers/reducer';\n\nexport const selectCheckin = createFeatureSelector<fromCheckin.State>('checkin');\n\nexport const selectCheckinData = createSelector(\n    selectCheckin,\n    (state: fromCheckin.State) => state.checkin\n);\n\nexport const selectCheckinByInterval = createSelector(\n    selectCheckin,\n    (state: fromCheckin.State) => state.checkinByInterval\n);\n\nexport const selectPersonCheckinByDivision = createSelector(\n    selectCheckin,\n    (state: fromCheckin.State) => state.personCheckinByDivision\n);\n\nexport const selectCheckinErrors = createSelector(\n    selectCheckin,\n    (state: fromCheckin.State) => state.errors\n);\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '@environments/environment';\nimport {ICheckin, ICheckinParams} from '@models/interfaces/checkin';\nimport {IPerson} from '@models/interfaces/human';\nimport {personMapperFromServer} from '@mappers/person.mapper';\nimport {checkinDetailsMapperFromServer} from '@mappers/checkin.mapper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CheckinService {\n    private checkinBaseUrl: string = environment.BASE_URL + '/api/checkin/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    searchCheckin(params: ICheckinParams): Observable<ICheckin[]> {\n        return this.http.get(this.checkinBaseUrl + `/search/${params.division}/${params.status}/${params.interval}/${params.date}`)\n            .pipe(map((response: ICheckin[]) => response.map((item) => checkinDetailsMapperFromServer(item))));\n    }\n\n    getDivisionCheckinByInterval(params: ICheckinParams): Observable<any> {\n        return this.http.get(this.checkinBaseUrl + `/combatenote/${params.division}/${params.interval}/${params.date}`)\n            .pipe(map((response: any[]) => response));\n    }\n\n    // Don't remove this method.\n    // It needs for mobile\n    getPersonsCheckinByDivision(divisionId: string): Observable<IPerson[]> {\n        return this.http.get(this.checkinBaseUrl + `/check/division/${divisionId}`)\n            .pipe(map((response: IPerson[]) => response.map((item: any) => personMapperFromServer(item))));\n    }\n}\n","import {Action} from '@ngrx/store';\nimport {IPerson} from '@models/interfaces/human';\n\nexport enum ActionTypes {\n    CreateCheckin = '[Combat List Page] Create Checkin',\n    CreateCombatList = '[Combat List Page] Create Combat List',\n    LoadedCurrentCombatList = '[Combat List Page] Loaded Current Combat List',\n    ClearCombatList = '[Combat List Page] Clear Combat List',\n    CombatListErrors = '[Combat List Errors] Combat List Errors'\n}\n\nexport class CreateCheckin implements Action {\n    readonly type = ActionTypes.CreateCheckin;\n\n    constructor(public payload: IPerson[]) {\n    }\n}\n\nexport class CreateCombatList implements Action {\n    readonly type = ActionTypes.CreateCombatList;\n\n    constructor(public payload: { combatId: string, date: string, divisionId: string }) {\n    }\n}\n\nexport class CombatListErrors implements Action {\n    readonly type = ActionTypes.CombatListErrors;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadedCurrentCombatList implements Action {\n    readonly type = ActionTypes.LoadedCurrentCombatList;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class ClearCombatList implements Action {\n    readonly type = ActionTypes.ClearCombatList;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport type CombatListActions = CreateCheckin | CombatListErrors |\n    CreateCombatList | LoadedCurrentCombatList | ClearCombatList;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {CombatListComponent} from './combat-list/combat-list.component';\nimport {CombatListService} from '@combat-list/services/combat-list.service';\nimport {CombatListModalViewComponent} from '@modal/components/combat-list-modal-view/combat-list-modal-view.component';\nimport {ModalRootComponent} from '@shared/components/modal-root/modal-root.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CombatListComponent,\n        children: [\n            {\n                path: 'combat-list-modal-view',\n                component: CombatListModalViewComponent\n            }\n        ]\n    }\n];\n\n@NgModule({\n    declarations: [CombatListComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes)\n    ],\n    providers: [CombatListService],\n    entryComponents: [ModalRootComponent]\n})\nexport class CombatListModule {\n}\n","<p>\n  combat-list works!\n</p>\n","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {IDivision} from '@models/interfaces/division';\nimport {Observable, Subscription} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Location} from '@angular/common';\nimport {tap} from 'rxjs/operators';\n\nimport {selectDivisionNames, selectDivisionsData} from '@divisions/selectors/selectors';\nimport {LoadPersons} from '@persons/actions/actions';\nimport {IDialogActions, IPerson, IStatus, IUser} from '@models/interfaces/human';\nimport {selectPersonData} from '@persons/selectors/selectors';\nimport {LoadDivisionNames, LoadDivisions} from '@divisions/actions/actions';\nimport {PageTypes} from '@models/constants/page-types';\nimport {Actions} from '@models/constants/actions';\nimport {selectStatuses, selectUser} from '@shared/selectors/selectors';\nimport {LoadStatuses, LoadUserById} from '@shared/actions/actions';\nimport {CombatListService} from '@combat-list/services/combat-list.service';\nimport {ClearCombatList, CreateCheckin} from '@combat-list/actions/actions';\nimport {selectCombatListData} from '@combat-list/selectors/selectors';\nimport {SharedService} from '@shared/services/shared.service';\nimport {ICombatNote} from '@models/interfaces/checkin';\nimport {UnsubscribeOndestroyAdapter} from '../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {ModalRootComponent} from '@shared/components/modal-root/modal-root.component';\nimport {ModalService} from '@modal/services/modal.service';\nimport {SubSink} from 'subsink';\n\n@Component({\n    selector: 'app-combat-list',\n    templateUrl: './combat-list.component.html',\n    styleUrls: ['./combat-list.component.scss']\n})\nexport class CombatListComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public persons: IPerson[] = [];\n    public personsByDivision: IPerson[] = [];\n    public pageType = PageTypes;\n    public user: IUser = null;\n    public divisionNames: string[] = [];\n    public mobileActions: string[];\n    public statuses: string[];\n    public translatedStatuses: string[];\n    public selectedItem: string;\n    public selectedStatus: string;\n    public dialogValue: string;\n    public combatList: ICombatNote;\n\n    public user$: Observable<IUser>;\n    public divisions$: Observable<IDivision[]>;\n    public divisionNames$: Observable<string[]>;\n\n    private dialogValueSubscription: Subscription;\n    private modalSubs: SubSink = new SubSink();\n\n    constructor(\n        private store: Store<any>,\n        private translateService: TranslateService,\n        private combatListService: CombatListService,\n        private sharedService: SharedService,\n        private location: Location,\n        private vcRef: ViewContainerRef,\n        private modalService: ModalService\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        this.mobileActions = [Actions.STATUS];\n        this.getUser();\n        this.getDivisions();\n        this.getPersons();\n        this.getStatuses();\n        this.getCombatList();\n    }\n\n    getCombatList() {\n        this.subscriptions.sink = this.store\n            .pipe(select(selectCombatListData))\n            .subscribe(combatList => {\n                if (combatList) {\n                    const options = this.getModalOptions(combatList);\n                    this.initModal(options);\n                }\n            });\n    }\n\n    initModal(options) {\n        this.modalSubs.sink = this.modalService\n            .initModal(ModalRootComponent, options)\n            .subscribe((response) => {\n                if (response) {\n                    this.onCancel();\n                    this.modalSubs.unsubscribe();\n                }\n            });\n    }\n\n    getUser() {\n        this.user$ = this.store.pipe(\n            select(selectUser),\n            tap((user: IUser) => {\n                if (!user) {\n                    return this.fetchUser();\n                }\n                this.user = user;\n            }));\n    }\n\n    fetchUser() {\n        const userId = localStorage.getItem('userId');\n        this.store.dispatch(new LoadUserById(userId));\n    }\n\n    getDivisions() {\n        this.divisions$ = this.store.pipe(\n            select(selectDivisionsData),\n            tap((divisions: IDivision[]) => {\n                if (!divisions) {\n                    return this.fetchDivisions();\n                }\n                this.getDivisionNames(divisions);\n            })\n        );\n    }\n\n    fetchDivisions() {\n        this.store.dispatch(new LoadDivisions());\n    }\n\n    getPersons() {\n        this.store.dispatch(new LoadPersons());\n        this.subscriptions.sink = this.store\n            .pipe(select(selectPersonData))\n            .subscribe((persons: IPerson[]) => (this.persons = persons));\n    }\n\n    getStatuses() {\n        this.store.dispatch(new LoadStatuses());\n        this.subscriptions.sink = this.store\n            .pipe(select(selectStatuses))\n            .subscribe((statuses: IStatus[]) => {\n                this.statuses = this.filterStatusesByName(statuses);\n                this.translatedStatuses = this.translateStatuses(this.statuses);\n            });\n    }\n\n    getDivisionNames(divisions: IDivision[]) {\n        this.divisionNames$ = this.store.pipe(\n            select(selectDivisionNames),\n            tap((divisionNames: string[]) => {\n                if (!divisionNames) {\n                    return this.fetchDivisionNames(divisions);\n                }\n                this.divisionNames = divisionNames;\n            })\n        );\n    }\n\n    fetchDivisionNames(divisions: IDivision[]) {\n        this.store.dispatch(new LoadDivisionNames(divisions));\n    }\n\n    getPersonsByDivision(divisionName: string) {\n        this.personsByDivision = this.findPersonsByDivisions(\n            this.persons,\n            divisionName\n        );\n    }\n\n    findPersonsByDivisions(\n        persons: IPerson[],\n        divisionName: string\n    ): IPerson[] {\n        return persons.filter((person: IPerson) => {\n            if (person.division && person.division.name === divisionName) {\n                return person;\n            }\n        });\n    }\n\n    setPersonStatus(personId: string, status: string) {\n        return this.personsByDivision.map((person: IPerson) => {\n            const index = this.translatedStatuses.findIndex(\n                (item: string) => item === status\n            );\n            if (person.id === personId) {\n                person['translatedStatus'] = status;\n                person['status'] = this.statuses[index];\n            }\n            return person;\n        });\n    }\n\n    filterStatusesByName(statuses: IStatus[]): string[] {\n        return statuses.map((status: IStatus) => status.state);\n    }\n\n    translateStatuses(statuses: string[]): string[] {\n        return this.sharedService.translateArray(statuses);\n    }\n\n    handleAction(event: { action: string; item: any }) {\n        if (event.action === Actions.STATUS) {\n            this.displayActionDialog(\n                this.getDialogOptions('статус', this.translatedStatuses),\n                event.item.id\n            );\n        }\n    }\n\n    displayActionDialog(options: IDialogActions, personId?: string) {\n        this.combatListService.getDialogAction(options);\n        this.dialogValueSubscription = this.combatListService.dialogValue.subscribe(\n            result => {\n                this.dialogValue = result;\n                if (this.dialogValue && this.dialogValue !== 'Отменить') {\n                    if (this.divisionNames.includes(this.dialogValue)) {\n                        this.getDivisionDialogValue(this.dialogValue);\n                        return;\n                    }\n                    this.getPersonDialogValue(personId, this.dialogValue);\n                }\n            }\n        );\n    }\n\n    getDivisionDialogValue(dialogValue: string) {\n        this.selectedItem = dialogValue;\n        this.getPersonsByDivision(this.selectedItem);\n        this.dialogValueSubscription.unsubscribe();\n    }\n\n    getPersonDialogValue(personId: string, dialogValue: string) {\n        this.selectedStatus = dialogValue;\n        this.personsByDivision = this.setPersonStatus(\n            personId,\n            this.selectedStatus\n        );\n        this.dialogValueSubscription.unsubscribe();\n    }\n\n    getDialogOptions(title: string, actions: string[]): IDialogActions {\n        return this.combatListService.getDialogOptions(title, actions);\n    }\n\n    getModalOptions(combatList: ICombatNote) {\n        return this.modalService.getModalDialogOptions({\n            vcRef: this.vcRef,\n            context: {\n                path: 'combat-list-modal-view',\n                combatList,\n                divisionLength: this.personsByDivision.length\n            },\n            fullscreen: false,\n        });\n    }\n\n    // Don't remove this method.\n    // It needs for mobile.\n    saveCheckin() {\n        this.store.dispatch(new CreateCheckin(this.personsByDivision));\n    }\n\n    // Don't remove this method.\n    // It needs for mobile.\n    onCancel() {\n        this.location.back();\n    }\n}\n","import {Injectable, ViewContainerRef} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\nimport {MessageService} from '@services/message.service';\nimport {CombatListService} from '@combat-list/services/combat-list.service';\nimport * as fromCombatList from '@combat-list/actions/actions';\n\n@Injectable()\nexport class CombatListEffects {\n\n    constructor(private actions$: Actions,\n                private messageService: MessageService,\n                private combatListService: CombatListService) {\n    }\n\n    @Effect()\n    createCheckin$ = this.actions$\n        .pipe(\n            ofType(fromCombatList.ActionTypes.CreateCheckin),\n            mergeMap((action: any) => this.combatListService.createCheckinByDivision(action.payload)\n                .pipe(\n                    map((response) => {\n                        const date = new Date().toISOString();\n                        return new fromCombatList.CreateCombatList({\n                            combatId: response[0].officer,\n                            date: date,\n                            divisionId: response[0].divisionId\n                        });\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromCombatList.CombatListErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    createCombatList$ = this.actions$\n        .pipe(\n            ofType(fromCombatList.ActionTypes.CreateCombatList),\n            mergeMap((action: any) => this.combatListService.createCombatListAfterCheckin(action.payload)\n                .pipe(\n                    map((combatList) => new fromCombatList.LoadedCurrentCombatList(combatList)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromCombatList.CombatListErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    clearCombatList$ = this.actions$\n        .pipe(\n            ofType(fromCombatList.ActionTypes.ClearCombatList),\n            map((action: any) => new fromCombatList.LoadedCurrentCombatList(action.payload)),\n            catchError((err) => {\n                this.messageService.showPushNotification(err);\n                this.messageService.showToastrError(err);\n                return of(new fromCombatList.CombatListErrors(err));\n            })\n        );\n}\n","import {ActionTypes, CombatListActions} from '@combat-list/actions/actions';\n\nexport interface State {\n    combatList: any;\n    errors?: any;\n}\n\nexport const initialState: State = {\n    combatList: null,\n    errors: null\n};\n\nexport function reducer(state: State = initialState, action: CombatListActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedCurrentCombatList:\n            return {...state, combatList: action.payload};\n        case ActionTypes.CombatListErrors:\n            return {...state, errors: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromCombatList from '@combat-list/reducers/reducer';\n\nexport const selectCombatList = createFeatureSelector<fromCombatList.State>('combatList');\n\nexport const selectCombatListData = createSelector(\n    selectCombatList,\n    (state: fromCombatList.State) => state.combatList\n);\n\nexport const selectCombatListErrors = createSelector(\n    selectCombatList,\n    (state: fromCombatList.State) => state.errors\n);\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '@environments/environment';\nimport {IDialogActions, IPerson} from '@models/interfaces/human';\nimport {checkinToServer} from '@mappers/person.mapper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CombatListService {\n    public dialogValue: Subject<string> = new Subject<string>();\n    private checkinBaseUrl: string = environment.BASE_URL + '/api/checkin/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getDialogAction(data: any) {\n        return;\n    }\n\n    createCheckinByDivision(data: IPerson[]): Observable<any> {\n        const mappedData = data.map((person: IPerson) => checkinToServer(person));\n        return this.http.post(this.checkinBaseUrl + '/check', mappedData)\n            .pipe(map((response) => response));\n    }\n\n    createCombatListAfterCheckin(data: { combatId: string, date: string, divisionId: string }): Observable<any> {\n        const body = {combatId: data.combatId, date: data.date};\n        return this.http.post(this.checkinBaseUrl + `/check/division/${data.divisionId}/combatnote`, body)\n            .pipe(map((response) => response));\n    }\n\n    getDialogOptions(title: string, actions: string[]): IDialogActions {\n        return {\n            title: `Выберите ${title}`,\n            cancelButtonText: 'Отменить',\n            actions: actions\n        };\n    }\n\n    getDatePickerConfig() {\n        return;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {CompetitorsRatingComponent} from './components/competitors-rating/competitors-rating.component';\nimport {SharedModule} from '@shared/shared.module';\nimport {TableModule} from '@table/table.module';\nimport {FormsModule} from '@forms/forms.module';\nimport {MqttService} from 'ngx-mqtt';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CompetitorsRatingComponent\n    }\n];\n\n@NgModule({\n    declarations: [CompetitorsRatingComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        TableModule,\n        FormsModule,\n        FontAwesomeModule,\n        NgSelectModule,\n        RouterModule.forChild(routes)\n    ],\n    exports: [RouterModule],\n    providers: [MqttService]\n})\nexport class CompetitorsRatingModule {\n}\n","<div class=\"container-fluid\">\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <h1 class=\"text-center\">{{'competitorsRating' | translate}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"rating\">\n        <div class=\"col\">\n            <app-base-table class=\"main__table\"\n                            [objects]=\"rating\"\n                            [pageType]=\"pageTypes.RATING\"\n            ></app-base-table>\n        </div>\n    </div>\n    <div class=\"row mt-4\" *ngIf=\"competitors\">\n        <div class=\"col text-center\" *ngIf=\"!rating.length\">\n            <h3>{{'emptyRating' | translate}}</h3>\n        </div>\n    </div>\n</div>\n","import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {select, Store} from '@ngrx/store';\n\nimport {ICompetitor, IPerson} from '@models/interfaces/human';\nimport {LoadCompetitorsRating, LoadCompetitorsRatingByStage} from '@competitors/actions/actions';\nimport {Icons} from '@models/constants/icons';\nimport {selectTournamentsData} from '@tournaments/selectors/selectors';\nimport {ITournament} from '@models/interfaces/tournament';\nimport {IStage} from '@models/interfaces/stage';\nimport {selectCompetitorsRating} from '@competitors/selectors/selectors';\nimport {LoadPersons} from '@persons/actions/actions';\nimport {selectPersonData} from '@persons/selectors/selectors';\nimport {IExercise} from '@models/interfaces/exercise';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {TournamentsService} from '@tournaments/services/tournaments.service';\nimport {PageTypes} from '@models/constants/page-types';\n\n@Component({\n    selector: 'app-competitors-rating',\n    templateUrl: './competitors-rating.component.html',\n    styleUrls: ['./competitors-rating.component.scss']\n})\nexport class CompetitorsRatingComponent extends UnsubscribeOndestroyAdapter implements OnInit, OnChanges {\n\n    public competitors: ICompetitor[];\n    public tournamentId: string;\n    public stages: IStage[];\n    public actions = [];\n    public icons = Icons;\n    public persons: IPerson[];\n    public rating: any[];\n    public pageTypes = PageTypes;\n\n\n    constructor(private store: Store<any>,\n                private route: ActivatedRoute,\n                private tournamentsService: TournamentsService) {\n        super();\n\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        console.log(changes);\n    }\n\n    ngOnInit() {\n        this.getRouteParams();\n    }\n\n    getRouteParams() {\n        this.subscriptions.sink = this.route.queryParams\n            .subscribe((params) => {\n                this.tournamentId = params['tournament'];\n                this.getTournamentsStages(this.tournamentId);\n                this.getPersons();\n            });\n    }\n\n    getTournamentsStages(tournamentId: string) {\n        this.subscriptions.sink = this.store.pipe(select(selectTournamentsData))\n            .subscribe((tournaments: ITournament[]) => {\n                if (tournaments && tournaments.length) {\n                    const currentTournament: ITournament = this.findTournamentById(tournaments, tournamentId);\n                    this.stages = currentTournament.stages;\n                }\n            });\n    }\n\n    findTournamentById(tournaments: ITournament[], tournamentId: string): ITournament {\n        return this.tournamentsService.findTournamentById(tournaments, tournamentId);\n    }\n\n    getPersons() {\n        this.onItemSelected();\n        this.store.dispatch(new LoadPersons());\n        this.subscriptions.sink = this.store.select(selectPersonData)\n            .subscribe((persons: IPerson[]) => {\n                if (persons) {\n                    this.persons = persons;\n                    this.getCompetitors();\n                }\n            });\n\n    }\n\n    onItemSelected(value?: any) {\n        value ? this.fetchCompetitorsRatingByStage(this.tournamentId, value.id)\n            : this.fetchCompetitorsRating(this.tournamentId);\n    }\n\n    fetchCompetitorsRating(tournamentId: string) {\n        this.store.dispatch(new LoadCompetitorsRating(tournamentId));\n    }\n\n    fetchCompetitorsRatingByStage(tournamentId: string, stageId: string) {\n        this.store.dispatch(new LoadCompetitorsRatingByStage({tournamentId, stageId}));\n    }\n\n    getCompetitors() {\n        this.fetchCompetitorsRating(this.tournamentId);\n        this.subscriptions.sink = this.store.select(selectCompetitorsRating)\n            .subscribe((rating) => {\n                this.rating = rating.map((item: IExercise, i: number) => this.mapRatting(item, i));\n            });\n    }\n\n    mapRatting(rating: IExercise, index: number) {\n        const person = this.getPersonById(rating.personId);\n        return {\n            competitionPlace: index + 1,\n            userName: person.userName,\n            birthDate: person.birthDate,\n            percentage: rating.percentage.toFixed(2),\n            hitFactor: rating.hitFactor.toFixed(2),\n            stages: rating.stages,\n            score: rating.score || 0,\n            timeOfExercise: rating.timeOfExercise || 0,\n            disqualificationReason: rating.disqualification || 'no'\n        };\n    }\n\n    getPersonById(personId: string) {\n        return this.persons.find((person: IPerson) => person.id === personId);\n    }\n}\n","import {Action} from '@ngrx/store';\nimport {ICompetitor} from '@models/interfaces/human';\nimport {ITournament} from '@models/interfaces/tournament';\nimport {IExercise} from '@models/interfaces/exercise';\n\nexport enum ActionTypes {\n    LoadCompetitors = '[Competitors Page] Load Competitors',\n    LoadedCompetitors = '[Competitors Page] Loaded Competitors Success',\n    ErrorsCompetitors = '[Competitors Page] Competitors Errors',\n    CreateListOfCompetitors = '[Competitors Page] Create List Of Competitors',\n    UpdateCompetitorByJudge = '[Competitors Page] Update Competitor by judge',\n    LoadCompetitorsRatingByStage = '[Competitors Rating Page] Load Competitors Rating By Stage',\n    LoadedCompetitorsRatingByStage = '[Competitors Rating Page] Loaded Competitors Rating By Stage',\n    LoadCompetitorsRating = '[Competitors Rating Page] Load Competitors Rating'\n}\n\ninterface IPayload {\n    competitorsIds?: string[];\n    tournament?: ITournament;\n}\n\nexport class LoadCompetitors implements Action {\n    readonly type = ActionTypes.LoadCompetitors;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class LoadedCompetitors implements Action {\n    readonly type = ActionTypes.LoadedCompetitors;\n\n    constructor(public payload: ICompetitor[]) {\n    }\n}\n\nexport class ErrorsCompetitors implements Action {\n    readonly type = ActionTypes.ErrorsCompetitors;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class CreateListOfCompetitors implements Action {\n    readonly type = ActionTypes.CreateListOfCompetitors;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport class UpdateCompetitorByJudge implements Action {\n    readonly type = ActionTypes.UpdateCompetitorByJudge;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadCompetitorsRatingByStage implements Action {\n    readonly type = ActionTypes.LoadCompetitorsRatingByStage;\n\n    constructor(public payload: { tournamentId: string, stageId: string }) {\n    }\n}\n\nexport class LoadedCompetitorsRatingByStage implements Action {\n    readonly type = ActionTypes.LoadedCompetitorsRatingByStage;\n\n    constructor(public payload: IExercise[]) {\n    }\n}\n\nexport class LoadCompetitorsRating implements Action {\n    readonly type = ActionTypes.LoadCompetitorsRating;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport type CompetitorActions = LoadCompetitors &\n    LoadedCompetitors & ErrorsCompetitors & CreateListOfCompetitors &\n    UpdateCompetitorByJudge & LoadCompetitorsRatingByStage &\n    LoadedCompetitorsRatingByStage & LoadCompetitorsRating;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {NgbDropdownModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {SharedModule} from '@shared/shared.module';\nimport {TableModule} from '@table/table.module';\nimport {CompetitorsComponent} from '@competitors/components/competitors/competitors.component';\nimport {NgSelectModule} from '@ng-select/ng-select';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CompetitorsComponent\n    }\n];\n\n@NgModule({\n    declarations: [CompetitorsComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        TableModule,\n        NgbDropdownModule,\n        NgSelectModule,\n        RouterModule.forChild(routes)\n    ],\n    exports: [RouterModule]\n})\nexport class CompetitorsModule {\n}\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <h1>{{'tournamentsCompetitors' | translate}}: {{tournamentName}}</h1>\n        </div>\n    </div>\n    <div class=\"row main mt-3\">\n        <div class=\"mb-3 d-flex align-items-center justify-content-between\">\n            <div class=\"col-6 d-flex align-items-center justify-content-start\">\n                <h2 class=\"main__header__divisions__title mr-2\">{{'division' | translate}}{{': '}}</h2>\n                <ng-select [id]=\"'divisions'\"\n                           [items]=\"divisions\"\n                           [placeholder]=\"'choose' | translate: {value: ('division' | translate).toLowerCase()}\"\n                           (change)=\"onSelectItem($event)\"\n                           [bindLabel]=\"'name'\"\n                           class=\"main__header__divisions__select\"\n                ></ng-select>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"d-flex\">\n                    <h2 class=\"mr-1\">{{'humanAmount' | translate}}</h2>\n                    <h2>{{': ' + competitorLength}}</h2>\n                </div>\n            </div>\n        </div>\n        <div class=\"col main__btns d-flex justify-content-between align-items-center\">\n            <button class=\"btn btn-primary mr-1 \" (click)=\"selectAll()\">{{'selectAll' | translate}}</button>\n            <button class=\"btn btn-secondary ml-1 \" (click)=\"unSelectAll()\">{{'unSelectAll' | translate}}</button>\n            <app-search class=\"ml-auto\"\n                        (valueChanges)=\"getSearchValue($event)\"\n            ></app-search>\n        </div>\n        <div class=\"col mt-3\">\n            <app-base-table class=\"main__table\"\n                            [objects]=\"persons\"\n                            [isCompetitors]=\"true\"\n                            [searchValue]=\"searchValue\"\n                            [divisionValue]=\"divisionValue\"\n                            [defaultPageSize]=\"pageSize\"\n                            [pageType]=\"pageType.COMPETITOR\"\n                            (competitorValue)=\"filterPersonsByMember(persons)\"\n            ></app-base-table>\n        </div>\n        <div class=\"col mt-3 mb-3\">\n            <div class=\"main__btns justify-content-center\">\n                <button class=\"btn btn-primary mr-1 \"\n                        (click)=\"createListOfCompetitors()\"\n                >{{'save' | translate}}</button>\n                <button class=\"btn ml-1 btn-secondary \"\n                        (click)=\"cancel()\"\n                >{{'cancel' | translate}}</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import {Component, OnInit, ViewContainerRef, ViewEncapsulation} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Location} from '@angular/common';\nimport {ActivatedRoute} from '@angular/router';\nimport {SubSink} from 'subsink';\n\nimport {ModalService} from '@modal/services/modal.service';\nimport {PersonService} from '@persons/service/person.service';\nimport {ConnectionService} from '@services/connection.service';\nimport {LocalStorageService} from '@services/local-storage.service';\nimport {MarkService} from '@services/mark.service';\nimport {competitorMapperFromServer} from '@mappers/tournament.mapper';\nimport {CreateListOfCompetitors, UpdateCompetitorByJudge} from '@competitors/actions/actions';\nimport {ForceUpdateTournamentCompetitors, LoadTournaments} from '@tournaments/actions/actions';\nimport {LoadDivisions} from '@divisions/actions/actions';\nimport {LoadPersons} from '@persons/actions/actions';\nimport {selectPersonData} from '@persons/selectors/selectors';\nimport {selectDivisionsData} from '@divisions/selectors/selectors';\nimport {selectTournamentsData} from '@tournaments/selectors/selectors';\nimport {ICompetitor, IPerson} from '@models/interfaces/human';\nimport {IDivision} from '@models/interfaces/division';\nimport {ITournament} from '@models/interfaces/tournament';\nimport {Actions} from '@models/constants/actions';\nimport {PageTypes} from '@models/constants/page-types';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {ModalRootComponent} from '@shared/components/modal-root/modal-root.component';\nimport {TournamentsService} from '@tournaments/services/tournaments.service';\nimport {LoadCompetitorMarks} from '@shared/actions/actions';\n\n@Component({\n    selector: 'app-competitor',\n    templateUrl: './competitors.component.html',\n    styleUrls: ['./competitors.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class CompetitorsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n\n    public mobileActions: string[];\n    public competitors: ICompetitor[];\n    public persons: IPerson[];\n    public divisions: IDivision[] = [];\n    public searchValue = '';\n    public tournamentId: string;\n    public division: IDivision;\n    public divisionValue: string;\n    public pageSize = 10;\n    public competitor: ICompetitor;\n    public pageType = PageTypes;\n    public mark: string;\n    public competitorLength = 0;\n\n    public tournamentName: string;\n\n    private connectionStatus: string;\n    public tournaments: ITournament[];\n    private tournament: ITournament;\n    private dialogSubs: SubSink = new SubSink();\n\n    constructor(private modalService: ModalService,\n                private personService: PersonService,\n                private store: Store<any>,\n                private location: Location,\n                private route: ActivatedRoute,\n                private storageService: LocalStorageService,\n                private connectionService: ConnectionService,\n                private markService: MarkService,\n                private vcRef: ViewContainerRef,\n                private tournamentsService: TournamentsService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getDivisions();\n        this.getRouteParams();\n        this.mobileActions = [Actions.CHANGE];\n        this.fetchMarks();\n        if (this.connectionService.status) {\n            this.getConnectionStatus();\n        }\n    }\n\n    fetchMarks() {\n        this.store.dispatch(new LoadCompetitorMarks());\n    }\n\n    getConnectionStatus() {\n        this.subscriptions.sink = this.connectionService.status\n            .subscribe(status => this.connectionStatus = status);\n    }\n\n    getDivisions() {\n        this.subscriptions.sink = this.store.pipe(select(selectDivisionsData))\n            .subscribe((divisions: IDivision[]) => {\n                if (!divisions) {\n                    return this.store.dispatch(new LoadDivisions());\n                }\n\n                this.divisions = divisions;\n            });\n    }\n\n    getRouteParams() {\n        this.subscriptions.sink = this.route.queryParams.subscribe((params) => {\n            this.tournamentId = params['tournament'];\n            this.tournamentName = params['name'];\n            this.getPersons(this.tournamentId);\n        });\n    }\n\n    getPersons(tournamentId: string) {\n        this.fetchPersons();\n        this.subscriptions.sink = this.store.pipe(select(selectPersonData))\n            .subscribe((persons: IPerson[]) => {\n                if (persons) {\n                    this.persons = persons;\n                    this.getCompetitors(tournamentId);\n                }\n            });\n    }\n\n    fetchPersons() {\n        this.store.dispatch(new LoadPersons());\n    }\n\n    getCompetitors(tournamentId: string) {\n        this.subscriptions.sink = this.store.pipe(select(selectTournamentsData))\n            .subscribe((tournaments: ITournament[]) => {\n                if (!tournaments) {\n                    return this.store.dispatch(new LoadTournaments());\n                }\n                if (tournaments && tournaments.length && tournamentId) {\n                    this.tournaments = tournaments;\n                    this.tournament = this.findTournamentById(tournaments, tournamentId);\n                    this.competitors = this.getCompetitorsFromTournament(tournaments, tournamentId);\n                    this.findCompetitors();\n                }\n            });\n    }\n\n    findCompetitors() {\n        this.competitors.forEach((competitor: ICompetitor) => {\n            this.persons = this.setCompetitors(this.persons, competitor);\n            this.filterPersonsByMember(this.persons);\n        });\n    }\n\n    setCompetitors(persons: IPerson[], competitor: ICompetitor): IPerson[] {\n        return persons.map((person: IPerson) => {\n            if (person.id === competitor.person.id) {\n                person.member = true;\n            }\n            return person;\n        });\n    }\n\n    filterPersonsByMember(persons: IPerson[]) {\n        this.competitorLength = persons.filter((person: IPerson) => person.member).length;\n    }\n\n    createListOfCompetitors() {\n        const competitorsIds = this.personsIds;\n        this.store.dispatch(new CreateListOfCompetitors({competitorsIds, tournament: this.tournament}));\n    }\n\n    get personsIds(): string[] {\n        return this.persons\n            .filter((person: IPerson) => person.member === true)\n            .map((item: IPerson) => item.id);\n    }\n\n    handleAction(event: any) {\n        const options = this.getModalOptions(event.item);\n        this.competitor = event.item;\n        this.initModal(options);\n    }\n\n    initModal(options) {\n        this.dialogSubs.sink = this.modalService.initModal(ModalRootComponent, options)\n            .subscribe((result) => {\n                this.tournamentId = result.tournamentId;\n                this.getCompetitors(this.tournamentId);\n                if (result.value) {\n                    this.updateCompetitor(result.value, this.tournamentId);\n                    this.dialogSubs.unsubscribe();\n                }\n            });\n    }\n\n    getModalOptions(competitor: ICompetitor) {\n        return this.modalService.getModalDialogOptions({\n            vcRef: this.vcRef,\n            context: {\n                path: 'competitors-modal-view',\n                competitor,\n                tournamentId: this.tournamentId\n            },\n            fullscreen: false,\n        });\n    }\n\n    updateCompetitor(competitorUpdates, tournamentId: string) {\n        competitorUpdates.id = this.competitor.id;\n        const tournament = this.findTournamentById(this.tournaments, tournamentId);\n        if (this.connectionStatus && this.connectionStatus !== this.connectionService.NO_CONNECTION) {\n            this.store.dispatch(new UpdateCompetitorByJudge({\n                tournament: tournament,\n                competitorId: this.competitor.id,\n                competitorUpdates,\n                fromStorage: false\n            }));\n            return;\n        }\n        this.store.dispatch(new ForceUpdateTournamentCompetitors({tournament, competitor: competitorUpdates}));\n        this.storageService.addCompetitor(this.tournamentId, competitorUpdates);\n    }\n\n    getCompetitorsFromTournament(tournaments: ITournament[], tournamentId: string): ICompetitor[] {\n        return this.findTournamentById(tournaments, tournamentId).competitors\n            .map((competitor: ICompetitor, index: number) => competitorMapperFromServer(competitor, index));\n    }\n\n    findTournamentById(tournaments: ITournament[], tournamentId: string): ITournament {\n        return this.tournamentsService.findTournamentById(tournaments, tournamentId);\n    }\n\n    selectAll() {\n        this.persons.forEach(competitor => competitor.member = true);\n    }\n\n    unSelectAll() {\n        this.persons.forEach(competitor => competitor.member = false);\n    }\n\n    cancel() {\n        this.location.back();\n    }\n\n    getSearchValue(value) {\n        this.searchValue = value;\n    }\n\n    onSelectItem(value: IDivision) {\n        this.division = value;\n        this.divisionValue = value.name;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {of} from 'rxjs';\nimport {catchError, map, mergeMap} from 'rxjs/operators';\nimport {Location} from '@angular/common';\n\nimport * as fromCompetitors from '@competitors/actions/actions';\nimport * as fromTournaments from '@tournaments/actions/actions';\nimport {CompetitorsService} from '@competitors/services/competitors.service';\nimport {MessageService} from '@services/message.service';\nimport {ICompetitor} from '@models/interfaces/human';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\nimport {LocalStorageService} from '@services/local-storage.service';\nimport {IExercise} from '@models/interfaces/exercise';\nimport {DialogsService} from '@shared/services/dialogs.service';\n\n@Injectable()\nexport class CompetitorsEffects {\n\n    @Effect()\n    loadCompetitors$ = this.actions$\n        .pipe(\n            ofType(fromCompetitors.ActionTypes.LoadCompetitors),\n            mergeMap((action: any) => this.competitorsService.getCompetitors(action.payload)\n                .pipe(\n                    map((competitors: ICompetitor[]) => new fromCompetitors.LoadedCompetitors(competitors)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromCompetitors.ErrorsCompetitors(err));\n                    })\n                ))\n        );\n\n    @Effect()\n    createListOfCompetitors = this.actions$\n        .pipe(\n            ofType(fromCompetitors.ActionTypes.CreateListOfCompetitors),\n            mergeMap((action: any) => {\n                const {competitorsIds, tournament} = action.payload;\n                return this.competitorsService.createListOfCompetitors(competitorsIds, tournament.id)\n                    .pipe(\n                        map((competitors: ICompetitor[]) => {\n                            const message = {user: ToastrUsersType.COMPETITORS, type: ToastrMessageType.CREATE};\n                            if (competitors) {\n                                this.messageService.showToastrSuccess(message);\n                            }\n                            tournament.humanAmount = competitors.length;\n                            tournament.competitors = competitors;\n                            this.location.back();\n                            return new fromTournaments.ForceUpdateTournament(tournament);\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromCompetitors.ErrorsCompetitors(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    updateCompetitorByJudge$ = this.actions$\n        .pipe(\n            ofType(fromCompetitors.ActionTypes.UpdateCompetitorByJudge),\n            mergeMap((action: any) => {\n                const {tournament, competitorId, competitorUpdates, fromStorage} = action.payload;\n                return this.competitorsService[fromStorage ? 'updateCompetitorWithBothFields' : 'updateCompetitorByJudge']\n                (tournament.id, competitorId, competitorUpdates)\n                    .pipe(\n                        map((competitor: ICompetitor) => {\n                            if (fromStorage) {\n                                this.localStorageService.removeCompetitor(tournament.id, competitorId);\n                            }\n                            return new fromTournaments.ForceUpdateTournamentCompetitors({tournament, competitor: competitorUpdates});\n                        }), catchError((err) => {\n                            this.messageService.showToastrError(err);\n                            this.messageService.showPushNotification(err);\n                            return of(new fromCompetitors.ErrorsCompetitors(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    getCompetitorsRatingByStage$ = this.actions$\n        .pipe(\n            ofType(fromCompetitors.ActionTypes.LoadCompetitorsRatingByStage),\n            mergeMap((action: any) => {\n                const {tournamentId, stageId} = action.payload;\n                return this.competitorsService.getCompetitorsRatingByStage(tournamentId, stageId)\n                    .pipe(\n                        map((rating: IExercise[]) => new fromCompetitors.LoadedCompetitorsRatingByStage(rating)),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromCompetitors.ErrorsCompetitors(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    getCompetitorsRating$ = this.actions$\n        .pipe(\n            ofType(fromCompetitors.ActionTypes.LoadCompetitorsRating),\n            mergeMap((action: any) => this.competitorsService.getCompetitorsRating(action.payload)\n                .pipe(\n                    map((rating: IExercise[]) => new fromCompetitors.LoadedCompetitorsRatingByStage(rating)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromCompetitors.ErrorsCompetitors(err));\n                    })\n                )\n            )\n        );\n\n    constructor(private actions$: Actions,\n                private competitorsService: CompetitorsService,\n                private messageService: MessageService,\n                private localStorageService: LocalStorageService,\n                private location: Location) {\n    }\n}\n","import {ICompetitor} from '@models/interfaces/human';\nimport {ActionTypes, CompetitorActions} from '@competitors/actions/actions';\nimport {IExercise} from '@models/interfaces/exercise';\n\nexport interface State {\n    competitors: ICompetitor[];\n    rating: IExercise[];\n    errors?: any;\n}\n\nexport const initialState: State = {\n    competitors: [],\n    rating: []\n};\n\nexport function reducer (state: State = initialState, action: CompetitorActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedCompetitors:\n            return {...state, competitors: action.payload};\n        case ActionTypes.LoadedCompetitorsRatingByStage:\n            return {...state, rating: action.payload};\n        case ActionTypes.ErrorsCompetitors:\n            return {...state, errors: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromCompetitors from '@competitors/reducers/reducer';\n\nexport const selectCompetitors = createFeatureSelector<fromCompetitors.State>('competitors');\n\nexport const selectCompetitorsData = createSelector(\n    selectCompetitors,\n    (state: fromCompetitors.State) => state.competitors\n);\n\nexport const selectCompetitorsRating = createSelector(\n    selectCompetitors,\n    (state: fromCompetitors.State) => state.rating\n);\n\nexport const selectCompetitorsErrors = createSelector(\n    selectCompetitors,\n    (state: fromCompetitors.State) => state.errors\n);\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@environments/environment';\nimport {Observable} from 'rxjs';\nimport {ICompetitor} from '@models/interfaces/human';\nimport {map} from 'rxjs/operators';\nimport {competitorMapperFromServer, competitorMapperToServer, competitorMapperToServerWithBothFields} from '@mappers/tournament.mapper';\nimport {IExercise} from '@models/interfaces/exercise';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CompetitorsService {\n    private baseUrl: string = environment.BASE_URL + '/api/competitions/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getCompetitors(tournamentId: string): Observable<ICompetitor[]> {\n        return this.http.get(this.baseUrl + `/${tournamentId}/competitor/all`)\n            .pipe(map((response: ICompetitor[]) =>\n                response.map((item: ICompetitor, index: number) => competitorMapperFromServer(item, index))));\n    }\n\n    createListOfCompetitors(competitorsIds: string[], tournamentId: string): Observable<ICompetitor[]> {\n        return this.http.post(this.baseUrl + `/${tournamentId}/competitors`, competitorsIds)\n            .pipe(map((response: ICompetitor[]) => response));\n    }\n\n    getCompetitorMarksList(): Observable<string[]> {\n        return this.http.get<string[]>(this.baseUrl + '/enum/mark')\n            .pipe(map((response: string[]) => response));\n    }\n\n    updateCompetitorByJudge(tournamentId: string, competitorId: string, competitorUpdates: any): Observable<ICompetitor> {\n        const mappedData = competitorMapperToServer(competitorUpdates);\n        return this.http.put(this.baseUrl + `/${tournamentId}/competitor/${competitorId}/judge`, mappedData)\n            .pipe(map((response: ICompetitor) => response));\n    }\n\n    updateCompetitorWithBothFields(tournamentId: string, competitorId: string, competitorUpdates: any): Observable<ICompetitor> {\n        const mappedData = competitorMapperToServerWithBothFields(competitorUpdates);\n        return this.http.put(this.baseUrl + `/${tournamentId}/competitor/${competitorId}/judge/both`, mappedData)\n            .pipe(map((response: ICompetitor) => response));\n    }\n\n    getCompetitorsRatingByStage(tournamentId: string, stageId: string): Observable<IExercise[]> {\n        return this.http.get(this.baseUrl + `/competition/${tournamentId}/stage/${stageId}/score/list`)\n            .pipe(map((response: IExercise[]) => response));\n    }\n\n    getCompetitorsRating(tournamentId: string): Observable<IExercise[]> {\n        return this.http.get(this.baseUrl + `/competition/${tournamentId}/rating`)\n            .pipe(map((response: IExercise[]) => response));\n    }\n\n}\n","import {Action} from '@ngrx/store';\nimport {ICourse} from '@models/interfaces/courses';\n\nexport enum ActionTypes {\n    LoadCourses = '[Courses Page] Load Courses',\n    LoadedCourses = '[Courses Page] Loaded Courses',\n    RefreshCourses = '[Courses Page] Refresh Courses',\n    CreateCourse = '[Courses Page] Create Course',\n    UpdateCourse = '[Course Page] Update Course',\n    DeleteCourse = '[Courses Page] Delete Course',\n    CoursesErrors = '[Courses Page] Courses Errors'\n}\n\nexport class LoadCourses implements Action {\n    readonly type = ActionTypes.LoadCourses;\n}\n\nexport class LoadedCourses implements Action {\n    readonly type = ActionTypes.LoadedCourses;\n\n    constructor(public payload: ICourse[]) {}\n}\n\nexport class RefreshCourses implements Action {\n    readonly type = ActionTypes.RefreshCourses;\n\n    constructor(public payload: ICourse[]) {}\n}\n\nexport class CreateCourse implements Action {\n    readonly type = ActionTypes.CreateCourse;\n\n    constructor(public payload: ICourse) {}\n}\n\nexport class UpdateCourse implements Action {\n    readonly type = ActionTypes.UpdateCourse;\n\n    constructor(public payload: ICourse) {}\n}\n\nexport class DeleteCourse implements Action {\n    readonly type = ActionTypes.DeleteCourse;\n\n    constructor(public payload: string) {}\n}\n\nexport class CoursesErrors implements Action {\n    readonly type = ActionTypes.CoursesErrors;\n\n    constructor(public payload: any) {}\n}\n\n\n\nexport type CoursesActions = LoadCourses &\n    LoadedCourses & RefreshCourses &\n    CreateCourse & DeleteCourse &\n    CoursesErrors & UpdateCourse;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {CourseComponent} from './course/course.component';\nimport {ModalModule} from '@modal/modal.module';\nimport {TableModule} from '@table/table.module';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CourseComponent\n    }\n];\n\n@NgModule({\n    declarations: [CourseComponent],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        ModalModule,\n        TableModule,\n        NgSelectModule,\n        RouterModule.forChild(routes)\n    ]\n})\nexport class CourseModule {\n}\n","<div class=\"container\" [@EnterLeave]>\n    <div class=\"row mt-3\">\n        <div class=\"col-6\">\n            <h1>{{'courses' | translate}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3 align-items-center\" *ngIf=\"divisions$ | async as divisions\">\n        <div class=\"col-4\">\n            <ng-select [id]=\"'divisions'\"\n                       [items]=\"divisions\"\n                       [placeholder]=\"'choose' | translate: {value: ('division' | translate).toLowerCase()}\"\n                       (change)=\"onSelectItem($event, 'divisions')\"\n                       [bindLabel]=\"'name'\"\n            ></ng-select>\n        </div>\n        <div class=\"col-4\" *ngIf=\"(personsByDivision$ | async).length\">\n            <ng-select [id]=\"'persons'\"\n                       [items]=\"personsByDivision$ | async\"\n                       [placeholder]=\"'choose' | translate: {value: ('person' | translate: {ending: 'у'}).toLowerCase()}\"\n                       (change)=\"onSelectItem($event, 'persons')\"\n                       [bindLabel]=\"'userName'\"\n            ></ng-select>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"selectedPerson && selectedDivision\">\n        <div class=\"col-4\">\n            <button type=\"button\" class=\"btn btn-primary w-100\"\n                    (click)=\"add()\">{{'add' | translate}} {{('course' | translate).toLowerCase()}}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"courses$ | async as courses\">\n        <div class=\"col\">\n            <app-base-table class=\"main__table\"\n                            [objects]=\"courses\"\n                            [actions]=\"actions\"\n                            (action)=\"handleActions($event)\"\n                            [pageType]=\"pageTypes.COURSE\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/internal/operators/tap';\n\nimport {ICourse} from '@models/interfaces/courses';\nimport {selectCourseData} from '@course/selectors/selectors';\nimport {CreateCourse, DeleteCourse, LoadCourses, UpdateCourse} from '@course/actions/actions';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {ModalService} from '@modal/services/modal.service';\nimport {PageTypes} from '@models/constants/page-types';\nimport {UnsubscribeOndestroyAdapter} from '../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {Actions} from '@models/constants/actions';\nimport {CourseMocks} from '@models/mocks/course.mocks';\nimport {IDivision} from '@models/interfaces/division';\nimport {selectDivisionsData} from '@divisions/selectors/selectors';\nimport {IPerson} from '@models/interfaces/human';\nimport {selectPersonsByDivision} from '@persons/selectors/selectors';\nimport {LoadPersonsByDivision} from '@persons/actions/actions';\nimport {LoadDivisions} from '@divisions/actions/actions';\nimport {Animations} from '@models/constants/animations';\n\n@Component({\n    selector: 'app-course',\n    templateUrl: './course.component.html',\n    styleUrls: ['./course.component.scss'],\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class CourseComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n\n    public pageTypes = PageTypes;\n    public actions: string[];\n    public selectedDivision: IDivision;\n    public selectedPerson: IPerson;\n\n    public courses$: Observable<ICourse[]>;\n    public divisions$: Observable<IDivision[]>;\n    public personsByDivision$: Observable<IPerson[]>;\n\n    constructor(private store: Store<any>,\n                private modalService: ModalService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.CHANGE, Actions.REMOVE];\n        this.getCourses();\n        this.getDivisions();\n        this.getPersonsByDivision();\n    }\n\n    getCourses() {\n        this.courses$ = this.store.select(selectCourseData)\n            .pipe(tap((courses: ICourse[]) => !courses && this.fetchCourses()));\n    }\n\n    fetchCourses() {\n        this.store.dispatch(new LoadCourses());\n    }\n\n    getDivisions() {\n        this.divisions$ = this.store.select(selectDivisionsData)\n            .pipe(tap((divisions: IDivision[]) => !divisions && this.fetchDivisions()));\n    }\n\n    fetchDivisions() {\n        this.store.dispatch(new LoadDivisions());\n    }\n\n    getPersonsByDivision() {\n        this.personsByDivision$ = this.store.select(selectPersonsByDivision);\n    }\n\n    add() {\n        this.openCourseModal(CourseMocks.emptyCourse, false);\n    }\n\n    handleActions(event: { action: string, item: ICourse }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openCourseModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n        }\n    }\n\n    openCourseModal(course: ICourse, edit: boolean) {\n        const objectType = this.pageTypes.COURSE;\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...course}, edit, objectType},\n            (res) => {\n                if (res) {\n                    edit ? this.updateCourse(res, course.id, course.person.id) : this.createCourse(res);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: ICourse) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.name, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.deleteCourse(item.id);\n                }\n            });\n    }\n\n    createCourse(course: ICourse) {\n        course['person'] = this.selectedPerson.id;\n        this.store.dispatch(new CreateCourse(course));\n    }\n\n    updateCourse(updatedCourse: ICourse, courseId: string, personId: string) {\n        updatedCourse['id'] = courseId;\n        updatedCourse['person'] = personId;\n        this.store.dispatch(new UpdateCourse(updatedCourse));\n    }\n\n    deleteCourse(courseId: string) {\n        this.store.dispatch(new DeleteCourse(courseId));\n    }\n\n    onSelectItem(value: any, control: string) {\n        switch (control) {\n            case 'divisions':\n                this.selectedDivision = value;\n                this.store.dispatch(new LoadPersonsByDivision(this.selectedDivision.id));\n                return;\n            case 'persons':\n                this.selectedPerson = value;\n                return;\n        }\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Store} from '@ngrx/store';\nimport {catchError, map, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\nimport * as fromCourses from '@course/actions/actions';\nimport {CoursesService} from '@course/services/courses.service';\nimport {ICourse} from '@models/interfaces/courses';\nimport {selectCourseData} from '@course/selectors/selectors';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\nimport {MessageService} from '@services/message.service';\nimport {CoursesActions} from '@course/actions/actions';\n\n@Injectable()\nexport class CourseEffects {\n\n    constructor(private actions$: Actions,\n                private store: Store<any>,\n                private coursesService: CoursesService,\n                private messageService: MessageService) {\n    }\n\n    @Effect()\n    loadCourses$ = this.actions$\n        .pipe(\n            ofType(fromCourses.ActionTypes.LoadCourses),\n            mergeMap(() => this.coursesService.getCourses()\n                .pipe(\n                    map((courses: ICourse[]) => new fromCourses.LoadedCourses(courses)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromCourses.CoursesErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshCourse$ = this.actions$\n        .pipe(\n            ofType(fromCourses.ActionTypes.RefreshCourses),\n            map((action: CoursesActions) => new fromCourses.LoadedCourses(action.payload)),\n            catchError((err) => {\n                this.messageService.showPushNotification(err);\n                this.messageService.showToastrError(err);\n                return of(new fromCourses.CoursesErrors(err));\n            })\n        );\n\n    @Effect()\n    createCourse$ = this.actions$\n        .pipe(\n            ofType(fromCourses.ActionTypes.CreateCourse),\n            withLatestFrom(this.store.select(selectCourseData)),\n            switchMap(([action, courses]: any[]) => this.coursesService.createCourse(action.payload)\n                .pipe(\n                    map((course: ICourse) => {\n                        const message = {user: ToastrUsersType.COURSE, type: ToastrMessageType.CREATE};\n                        if (course) {\n                            this.messageService.showToastrSuccess(message);\n                            courses.push(course);\n                        }\n\n                        return new fromCourses.RefreshCourses(courses);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromCourses.CoursesErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    updateCourse$ = this.actions$\n        .pipe(\n            ofType(fromCourses.ActionTypes.UpdateCourse),\n            withLatestFrom(this.store.select(selectCourseData)),\n            switchMap(([action, courses]: any[]) => this.coursesService.updateCourse(action.payload)\n                .pipe(\n                    map((course: ICourse) => {\n                        const message = {user: ToastrUsersType.COURSE, type: ToastrMessageType.UPDATE};\n                        if (course) {\n                            this.messageService.showToastrSuccess(message);\n                            courses = courses.map((item: ICourse) =>\n                                item.id === action.payload.id ? action.payload : item);\n                        }\n\n                        return new fromCourses.RefreshCourses(courses);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromCourses.CoursesErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    deleteCourse$ = this.actions$\n        .pipe(\n            ofType(fromCourses.ActionTypes.DeleteCourse),\n            withLatestFrom(this.store.select(selectCourseData)),\n            switchMap(([action, courses]: any[]) => this.coursesService.deleteCourse(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.COURSE, type: ToastrMessageType.REMOVE};\n                        this.messageService.showToastrSuccess(message);\n                        courses = courses.filter((item: ICourse) => item.id !== action.payload);\n\n                        return new fromCourses.RefreshCourses(courses);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromCourses.CoursesErrors(err));\n                    })\n                )\n            )\n        );\n\n}\n","import {ICourse} from '@models/interfaces/courses';\nimport {ActionTypes, CoursesActions} from '../actions/actions';\n\nexport interface State {\n    courses: ICourse[];\n    errors?: any;\n}\n\nexport const initialState: State = {\n    courses: undefined,\n};\n\nexport function reducer(state: State = initialState, action: CoursesActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedCourses:\n            return {...state, courses: action.payload};\n        case ActionTypes.CoursesErrors:\n            return {...state, errors: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromCourse from '@course/reducers/reducer';\n\nexport const selectCourses = createFeatureSelector<fromCourse.State>('courses');\n\nexport const selectCourseData = createSelector(\n    selectCourses,\n    (state: fromCourse.State) => state.courses\n);\n\nexport const selectCourseErrors = createSelector(\n    selectCourses,\n    (state: fromCourse.State) => state.errors\n);\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\nimport {environment} from '@environments/environment';\nimport {ICourse} from '@models/interfaces/courses';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CoursesService {\n    private coursesBaseUrl: string = environment.BASE_URL + '/api/course/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getCourses(): Observable<ICourse[]> {\n        return this.http.get(this.coursesBaseUrl + '/get/all/course')\n            .pipe(map((response: ICourse[]) => response));\n    }\n\n    createCourse(course: ICourse): Observable<ICourse> {\n        return this.http.post(this.coursesBaseUrl + '/post/course/', course)\n            .pipe(map((response: ICourse) => response));\n    }\n\n    updateCourse(course: ICourse): Observable<ICourse> {\n        return this.http.put(this.coursesBaseUrl + `/put/course/${course.id}`, course)\n            .pipe(map((response: ICourse) => response));\n    }\n\n    deleteCourse(courseId: string): Observable<any> {\n        return this.http.delete(this.coursesBaseUrl + `/api/course/delete/${courseId}`)\n            .pipe(map((response) => response));\n    }\n}\n","<div class=\"container-fluid\" [@EnterLeave]>\n    <div class=\"row main__row\" [ngSwitch]=\"role\">\n        <ng-container *ngSwitchCase=\"'ADMIN'\">\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('persons')\">{{'persons' | translate}}</button>\n            </div>\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('divisions')\">{{'divisions' | translate}}</button>\n            </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'USER'\">\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('answers')\">{{'answers' | translate}}</button>\n            </div>\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('checkin')\">{{'divisionList' | translate}}</button>\n            </div>\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('workspace')\">{{'workspace' | translate}}</button>\n            </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'GUEST'\">\n            <div class=\"col-12 text-center\">\n                <img alt=\"logo\" src=\"assets/images/ipsc.svg\">\n            </div>\n        </ng-container>\n    </div>\n    <hr *ngIf=\"role !== 'GUEST' && role !== 'USER' && role !== 'COMMANDER'\">\n    <div class=\"row main__row\" [ngSwitch]=\"role\">\n        <ng-container *ngSwitchCase=\"'ADMIN'\">\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('judges')\">{{'judges' | translate}}</button>\n            </div>\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('tournaments')\">{{'tournaments' | translate}}</button>\n            </div>\n        </ng-container>\n    </div>\n    <hr *ngIf=\"role !== 'GUEST' && role !== 'USER' && role !== 'COMMANDER'\">\n    <div class=\"row main__row\" [ngSwitch]=\"role\">\n        <ng-container *ngSwitchCase=\"'ADMIN'\">\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('users')\">{{'users' | translate}}</button>\n            </div>\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('subjects')\">{{'subjects' | translate}}</button>\n            </div>\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('courses')\">{{'courses' | translate}}</button>\n            </div>\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('specialities')\">{{'specialities' | translate}}</button>\n            </div>\n            <div class=\"col-4 mb-2\">\n                <button class=\"btn btn-primary btn__big \" (click)=\"goTo('weapon-list')\">{{'weaponList' | translate}}</button>\n            </div>\n        </ng-container>\n    </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {DOCUMENT} from '@angular/common';\nimport {IMqttMessage, MqttService} from 'ngx-mqtt';\n\nimport {LoginService} from '@login/services/login.service';\nimport {Animations} from '@models/constants/animations';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n    animations: [Animations.enterLeaveOpacity],\n})\nexport class DashboardComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public role: string;\n    public elem: any;\n    constructor(private router: Router,\n                private loginService: LoginService,\n                private _mqttService: MqttService,\n                @Inject(DOCUMENT) private document: any) {\n        super();\n    }\n\n    ngOnInit() {\n        this.role = localStorage.getItem('role');\n\n    }\n\n    goTo(pageName: string) {\n        if (pageName === 'persons') {\n            this.router.navigate([`/${pageName}`], {queryParams: {page: 1, size: 10}});\n            return;\n        }\n        this.router.navigate([`/${pageName}`]);\n    }\n\n    logOut() {\n        this.loginService.logOut();\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {SharedModule} from '@shared/shared.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DashboardComponent\n    }\n];\n\n@NgModule({\n    declarations: [DashboardComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        RouterModule.forChild(routes)\n    ],\n})\nexport class DashboardModule {\n}\n","import {Action} from '@ngrx/store';\nimport {IDivision} from '@models/interfaces/division';\n\nexport enum ActionTypes {\n    LoadDivisions = '[Divisions Page] Load Divisions',\n    LoadedDivisions = '[Divisions Page] Loaded Divisions Success',\n    ErrorsDivisions = '[Divisions Page] Divisions Errors',\n    ErrorsRootDivisions = '[Divisions Page] Root Divisions Errors',\n    LoadRootDivision = '[Divisions Page] Load Root Division',\n    LoadedRootDivision = '[Divisions Page] Loaded Root Division Success',\n    CreateDivision = '[Division Page] Create Division',\n    RemoveDivision = '[Division Page] Remove Division',\n    UpdateDivision = '[Division Page] Update Division',\n    LoadDivisionNames = '[Division Page] Load Division Names',\n    LoadedDivisionNames = '[Division Page] Loaded Division Names'\n}\n\ninterface IPayload {\n    division: IDivision;\n    id: string | number;\n}\n\nexport class LoadDivisions implements Action {\n    readonly type = ActionTypes.LoadDivisions;\n}\n\nexport class LoadedDivisions implements Action {\n    readonly type = ActionTypes.LoadedDivisions;\n\n    constructor(public payload: IDivision[]) {\n    }\n}\n\nexport class LoadRootDivision implements Action {\n    readonly type = ActionTypes.LoadRootDivision;\n}\n\nexport class LoadedRootDivision implements Action {\n    readonly type = ActionTypes.LoadedRootDivision;\n\n    constructor(public payload: IDivision) {\n    }\n}\n\nexport class ErrorsDivisions implements Action {\n    readonly type = ActionTypes.ErrorsDivisions;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class ErrorsRootDivisions implements Action {\n    readonly type = ActionTypes.ErrorsRootDivisions;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class CreateDivision implements Action {\n    readonly type = ActionTypes.CreateDivision;\n\n    constructor(public payload: IDivision) {\n    }\n}\n\nexport class UpdateDivision implements Action {\n    readonly type = ActionTypes.UpdateDivision;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport class RemoveDivision implements Action {\n    readonly type = ActionTypes.RemoveDivision;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport class LoadDivisionNames implements Action {\n    readonly type = ActionTypes.LoadDivisionNames;\n\n    constructor(public payload: IDivision[]) {\n    }\n}\n\nexport class LoadedDivisionNames implements Action {\n    readonly type = ActionTypes.LoadedDivisionNames;\n\n    constructor(public payload: string[]) {\n    }\n}\n\nexport type DivisionActions = LoadDivisions &\n    LoadedDivisions & ErrorsDivisions & ErrorsRootDivisions & LoadRootDivision &\n    LoadedRootDivision & CreateDivision & UpdateDivision &\n    RemoveDivision & LoadDivisionNames & LoadedDivisionNames;\n","<div class=\"container\" [@EnterLeave]>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <h1>{{'divisions' | translate | titlecase}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <app-table [nodes]=\"nodes\"\n                       (handleRemove)=\"openRemoveModal($event)\"\n                       (handleUpdate)=\"openDivisionModal($event, true)\"\n                       (handleAdd)=\"openDivisionModal($event, false)\"\n            ></app-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {TreeNode} from 'angular-tree-component';\n\nimport {IDivision} from '@models/interfaces/division';\nimport {Actions} from '@models/constants/actions';\nimport {DivisionsService} from '@divisions/services/divisions.service';\nimport {selectRootDvisionData} from '@divisions/selectors/selectors';\nimport {CreateDivision, LoadRootDivision, RemoveDivision, UpdateDivision} from '@divisions/actions/actions';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {ModalService} from '@modal/services/modal.service';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {Animations} from '@models/constants/animations';\n\n@Component({\n    selector: 'app-divisions',\n    templateUrl: './divisions.component.html',\n    styleUrls: ['./divisions.component.scss'],\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class DivisionsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public actions = [Actions.CHANGE, Actions.REMOVE];\n    public nodes: IDivision[];\n\n    constructor(private divisionsService: DivisionsService,\n                private store: Store<any>,\n                private modalService: ModalService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getRootDivision();\n    }\n\n    getRootDivision() {\n        this.subscriptions.sink = this.store.pipe(select(selectRootDvisionData))\n            .subscribe(root => {\n                if (!root) {\n                    this.fetchRootDivisions();\n                }\n                if (root !== null) {\n                    this.nodes = [root];\n                }\n            });\n    }\n\n    fetchRootDivisions() {\n        this.store.dispatch(new LoadRootDivision());\n    }\n\n    openDivisionModal(parentNode: TreeNode, edit: boolean) {\n        const objectType = 'Division';\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: edit ? parentNode.data : this.mapParentNode(parentNode.data), edit, objectType},\n            (division: IDivision) => {\n                if (division) {\n                    division.parent = parentNode.data.id;\n                    if (edit) {\n                        division.parent = parentNode.data.parent;\n                        division.id = parentNode.data.id;\n                        this.updateDivisionAndNode(division, division.id);\n                    } else {\n                        this.createDivisionAndNode(division);\n                        parentNode.expand();\n                    }\n                }\n            });\n    }\n\n    mapParentNode(data) {\n        return {\n            name: '',\n            active: true,\n            parent: data.parent\n        };\n    }\n\n    openRemoveModal(node: TreeNode) {\n        this.openDialogModal('dialogQuestion', node);\n    }\n\n\n    openDialogModal(message: string, node: TreeNode) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: node.data.name, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.removeDivisionAndNode(node);\n                }\n            });\n    }\n\n    createDivisionAndNode(newDivision: IDivision) {\n        this.store.dispatch(new CreateDivision(newDivision));\n    }\n\n    updateDivisionAndNode(division: IDivision, id: string | number) {\n        this.store.dispatch(new UpdateDivision({division, id}));\n    }\n\n    removeDivisionAndNode(removedNode: TreeNode) {\n        this.store.dispatch(new RemoveDivision(removedNode.data.id));\n    }\n}\n","<tree-root #tree [nodes]=\"nodes\" [options]=\"options\" class=\"table table-sm table-borderless\">\n    <ng-template #treeNodeTemplate let-node let-index=\"index\">\n        <tr (click)=\"chooseNode(node.data)\">\n            <td *ngIf=\"!isHidden\">\n                <button type=\"button\" class=\"btn btn-sm node_button \"\n                        (click)=\"addTreeItem(node)\">\n                    <fa-icon [icon]=\"icons.add\"></fa-icon>\n                </button>\n            </td>\n            <td *ngIf=\"!isHidden\">\n                <button type=\"button\" class=\"btn btn-danger btn-sm node_button \" (click)=\"removeTreeItem(node)\">\n                    <fa-icon [icon]=\"icons.delete\"></fa-icon>\n                </button>\n            </td>\n\n            <td *ngIf=\"!isHidden\">\n                <button type=\"button\" class=\"btn btn-sm node_button \" (click)=\"updateTreeItem(node)\">\n                    <fa-icon [icon]=\"icons.edit\"></fa-icon>\n                </button>\n            </td>\n            <td><span>{{node.data.name}}</span></td>\n        </tr>\n    </ng-template>\n</tree-root>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {IActionMapping, TREE_ACTIONS, TreeComponent, TreeNode} from 'angular-tree-component';\n\nimport {IDivision} from '@models/interfaces/division';\nimport {Icons} from '@models/constants/icons';\n\n@Component({\n    selector: 'app-table',\n    templateUrl: './table.component.html',\n    styleUrls: ['./table.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TableComponent implements OnInit {\n\n    public options: {};\n    public icons = Icons;\n\n    @Input() nodes: IDivision[];\n    @Input() isHidden = false;\n\n    @ViewChild('tree', { static: true }) tree: TreeComponent;\n\n    @Output() treeValue: EventEmitter<string> = new EventEmitter();\n    @Output() handleRemove: EventEmitter<TreeNode> = new EventEmitter<TreeNode>();\n    @Output() handleUpdate: EventEmitter<TreeNode> = new EventEmitter<TreeNode>();\n    @Output() handleAdd: EventEmitter<TreeNode> = new EventEmitter<TreeNode>();\n\n    ngOnInit() {\n        const actionMapping: IActionMapping = {\n            mouse: {\n                click: TREE_ACTIONS.TOGGLE_ACTIVE,\n                dblClick: (tree, node, $event) => {\n                    if (node.hasChildren) {\n                        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n                    }\n                }\n            },\n            keys: {}\n        };\n        this.options = {actionMapping};\n    }\n\n    addTreeItem(value: TreeNode) {\n        this.handleAdd.emit(value);\n    }\n\n    removeTreeItem(value: TreeNode) {\n        this.handleRemove.emit(value);\n    }\n\n    updateTreeItem(value: TreeNode) {\n        this.handleUpdate.emit(value);\n    }\n\n    chooseNode(value) {\n        this.treeValue.emit(value);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TreeModule} from 'angular-tree-component';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {TableComponent} from './components/table/table.component';\nimport {TableModule} from '@table/table.module';\nimport {SharedModule} from '@shared/shared.module';\nimport {DivisionsService} from '@divisions/services/divisions.service';\nimport {DivisionsComponent} from '@divisions/components/divisions/divisions.component';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DivisionsComponent\n    }\n];\n\n@NgModule({\n    declarations: [TableComponent, DivisionsComponent],\n    imports: [\n        CommonModule,\n        TreeModule.forRoot(),\n        SharedModule,\n        TableModule,\n        FontAwesomeModule,\n        RouterModule.forChild(routes)\n    ],\n    exports: [TableComponent],\n    providers: [DivisionsService]\n})\nexport class DivisionsModule {\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap, switchMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\nimport * as fromDivisions from '@divisions/actions/actions';\nimport {DivisionsService} from '@divisions/services/divisions.service';\nimport {MessageService} from '@services/message.service';\nimport {IDivision} from '@models/interfaces/division';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\n\n@Injectable()\nexport class DivisionsEffects {\n\n    @Effect()\n    loadListOfDivisions = this.actions$\n        .pipe(\n            ofType(fromDivisions.ActionTypes.LoadDivisions),\n            mergeMap(() => this.divisionsService.getDivisions()\n                .pipe(\n                    switchMap((divisions: IDivision[]) => [\n                        new fromDivisions.LoadedDivisions(divisions),\n                        new fromDivisions.LoadDivisionNames(divisions)\n                    ]),\n                    catchError((err: any) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromDivisions.ErrorsDivisions(err));\n                    })\n                ))\n        );\n\n    @Effect()\n    loadDivisionNames$ = this.actions$\n        .pipe(\n            ofType(fromDivisions.ActionTypes.LoadDivisionNames),\n            map((action: any) => {\n                const divisionNames = action.payload.map((division: IDivision) => division.name);\n                return new fromDivisions.LoadedDivisionNames(divisionNames);\n            })\n        );\n\n    @Effect()\n    loadRootDivision$ = this.actions$\n        .pipe(\n            ofType(fromDivisions.ActionTypes.LoadRootDivision),\n            mergeMap(() => this.divisionsService.getRoot()\n                .pipe(\n                    switchMap((root: IDivision) => [\n                        new fromDivisions.LoadedRootDivision(root),\n                        new fromDivisions.LoadDivisions()\n                    ]),\n                    catchError((err: any) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromDivisions.ErrorsRootDivisions(err));\n                    })\n                ))\n        );\n\n    @Effect()\n    createDivision$ = this.actions$\n        .pipe(\n            ofType(fromDivisions.ActionTypes.CreateDivision),\n            mergeMap((action: any) => this.divisionsService.create(action.payload)\n                .pipe(\n                    map((division: IDivision) => {\n                        const message = {user: ToastrUsersType.DIVISION, type: ToastrMessageType.CREATE};\n                        if (division) {\n                            this.messageService.showToastrSuccess(message);\n                        }\n                        return new fromDivisions.LoadRootDivision();\n                    }),\n                    catchError((err: any) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromDivisions.ErrorsRootDivisions(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    removeDivision$ = this.actions$\n        .pipe(\n            ofType(fromDivisions.ActionTypes.RemoveDivision),\n            mergeMap((action: any) => this.divisionsService.remove(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.DIVISION, type: ToastrMessageType.REMOVE};\n                        this.messageService.showToastrSuccess(message);\n                        return new fromDivisions.LoadRootDivision();\n                    }),\n                    catchError((err: any) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromDivisions.ErrorsRootDivisions(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    updateDivision$ = this.actions$\n        .pipe(\n            ofType(fromDivisions.ActionTypes.UpdateDivision),\n            mergeMap((action: any) => {\n                const {division, id} = action.payload;\n                return this.divisionsService.update(division, id)\n                    .pipe(\n                        map((data: IDivision) => {\n                            const message = {user: ToastrUsersType.DIVISION, type: ToastrMessageType.UPDATE};\n                            if (data) {\n                                this.messageService.showToastrSuccess(message);\n                            }\n                            return new fromDivisions.LoadRootDivision();\n                        }),\n                        catchError((err: any) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromDivisions.ErrorsRootDivisions(err));\n                        })\n                    );\n            })\n        );\n\n    constructor(private actions$: Actions,\n                private divisionsService: DivisionsService,\n                private messageService: MessageService) {\n    }\n}\n\n","import {IDivision} from '@models/interfaces/division';\nimport {ActionTypes, DivisionActions} from '@divisions/actions/actions';\n\nexport interface State {\n    divisions: IDivision[];\n    rootDivision: IDivision;\n    divisionsErrors?: any;\n    rootDivisionsErrors?: any;\n    divisionNames: string[];\n}\n\nexport const initialState: State = {\n    divisions: undefined,\n    rootDivision: null,\n    divisionNames: undefined\n};\n\nexport function reducer (state: State = initialState, action: DivisionActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedDivisions:\n            return {...state, divisions: action.payload};\n        case ActionTypes.LoadedRootDivision:\n            return {...state, rootDivision: action.payload};\n        case ActionTypes.ErrorsDivisions:\n            return {...state, divisionsErrors: action.payload};\n        case ActionTypes.LoadedDivisionNames:\n            return {...state, divisionNames: action.payload};\n        case ActionTypes.ErrorsRootDivisions:\n            return {...state, rootDivisionsErrors: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromDivisions from '@divisions/reducers/reducer';\n\nexport const selectDivisions = createFeatureSelector<fromDivisions.State>('divisions');\n\nexport const selectDivisionsData = createSelector(\n    selectDivisions,\n    (state: fromDivisions.State) => state.divisions\n);\n\nexport const selectRootDvisionData = createSelector(\n    selectDivisions,\n    (state: fromDivisions.State) => state.rootDivision\n);\n\nexport const selectDivisionsErrors = createSelector(\n    selectDivisions,\n    (state: fromDivisions.State) => state.divisionsErrors\n);\n\nexport const selectRootDivisionsErrors = createSelector(\n    selectDivisions,\n    (state: fromDivisions.State) => state.rootDivisionsErrors\n);\n\nexport const selectDivisionNames = createSelector(\n    selectDivisions,\n    (state: fromDivisions.State) => state.divisionNames\n);\n","import {Injectable} from '@angular/core';\nimport {environment} from '@environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {IDivision} from '@models/interfaces/division';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DivisionsService {\n    baseUrl: string = environment.BASE_URL + '/api/divisions/' + environment.version + '/division';\n\n    constructor(private http: HttpClient) {\n    }\n\n    create(data: IDivision): Observable<IDivision> {\n        return this.http.post<IDivision>(this.baseUrl + '/create', data)\n            .pipe(map((response) => response));\n    }\n\n    update(data: IDivision, id: string | number): Observable<IDivision> {\n        return this.http.put<IDivision>(this.baseUrl + `/${id}`, data)\n            .pipe(map((response) => response));\n    }\n\n    remove(id: string): Observable<IDivision> {\n        return this.http.delete<IDivision>(this.baseUrl + `/${id}`);\n    }\n\n    getDivisions(pageNumber?: number, pageSize?: number): Observable<IDivision[]> {\n        return this.http.get<IDivision[]>(this.baseUrl + (pageNumber && pageSize ? `/all/${pageNumber}/${pageSize}` : '/all'))\n            .pipe(map((response) => response));\n    }\n\n    getRoot(): Observable<IDivision> {\n        return this.http.get<IDivision>(this.baseUrl + '/root')\n            .pipe(map((response) => response));\n    }\n\n    findDivisonByName(divisions: IDivision[], divisionName: string): IDivision {\n        return divisions.find((division: IDivision) => division.name === divisionName);\n    }\n}\n","<div class=\"container\">\n    <div class=\"ex__header\">\n        <span class=\"ex__header__title\">Мощные стрельбы 12.05.2019 14:12:06</span>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-8\">\n            <div class=\"ex__item\">{{'exercise' | translate}}</div>\n            <div class=\"ex__item\">{{'armament' | translate}}</div>\n            <div class=\"ex__item\">{{'team' | translate}}</div>\n            <div class=\"ex__item\">{{'member' | translate}}</div>\n        </div>\n        <div class=\"col-4 ex__btn-block\">\n            <app-timer></app-timer>\n            <div>\n                <button type=\"button\" class=\"btn btn__big\">{{'disqualify' | translate}}</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {SubSink} from 'subsink';\n\nimport {selectTournamentsData} from '@tournaments/selectors/selectors';\nimport {selectSharedDisqualificationTypes} from '@shared/selectors/selectors';\nimport {AddScoreList, LoadTournaments, StartTournament, UpdateTournament} from '@tournaments/actions/actions';\nimport {TournamentsService} from '@tournaments/services/tournaments.service';\nimport {ConnectionService} from '@services/connection.service';\nimport {LocalStorageService} from '@services/local-storage.service';\nimport {MarkService} from '@services/mark.service';\nimport {PageTypes} from '@models/constants/page-types';\nimport {ITournament} from '@models/interfaces/tournament';\nimport {ICompetitor, IDialogActions, IDialogPrompt} from '@models/interfaces/human';\nimport {IStage} from '@models/interfaces/stage';\nimport {IScore} from '@models/interfaces/score';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {ExerciseMocks} from '@models/mocks/exercise.mock';\nimport {DialogsService} from '@shared/services/dialogs.service';\nimport {tap} from 'rxjs/internal/operators/tap';\nimport {SharedService} from '@shared/services/shared.service';\nimport emptyScore = ExerciseMocks.emptyScore;\nimport {LoadDisqualificationTypes} from '@shared/actions/actions';\n\nconst DEFAULT_TIME = '00 : 00 : 00';\n\n@Component({\n    selector: 'app-exercise',\n    templateUrl: './exercise.component.html',\n    styleUrls: ['./exercise.component.scss']\n})\n\nexport class ExerciseComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public tournament: ITournament;\n    public competitors: ICompetitor[];\n    public passedCompetitors: ICompetitor[] = [];\n    public currentCompetitor: ICompetitor = null;\n    public stages: IStage[];\n    public filledExercises: any[] = [];\n    public pageType = PageTypes;\n    public currentScore = {...emptyScore};\n    public enterNumber: boolean;\n    public stageNumber: number;\n    public connectionStatus: string;\n    public mark: string;\n    public disqualificationTypes$: Observable<string[]>;\n    public targetScore = 0;\n    public passedTargets: number[] = [];\n    public decrementButtons: number[] = [-5, -3, -1];\n    public incrementButtons: number[] = [1, 3, 5];\n    public seconds = 0;\n    public milliseconds = 0;\n    public submitted = false;\n\n    private tournamentId: string;\n    private stageId: string;\n    private markSubs: SubSink = new SubSink();\n    private promptSubs: SubSink = new SubSink();\n    private dialogSubs: SubSink = new SubSink();\n    private translatedDisqualification: string[];\n    private disqualifications: string[];\n    private alertSubs: SubSink = new SubSink();\n\n    constructor(private route: ActivatedRoute,\n                private tournamentsService: TournamentsService,\n                private connectionService: ConnectionService,\n                private storageService: LocalStorageService,\n                private store: Store<any>,\n                private location: Location,\n                private markService: MarkService,\n                private dialogsService: DialogsService,\n                private sharedService: SharedService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getRouteParams();\n        this.getDisqualificationTypes();\n        this.getConnectionStatus();\n    }\n\n    getConnectionStatus() {\n        if (this.connectionService.status) {\n            this.subscriptions.sink = this.connectionService.status\n                .subscribe(status => this.connectionStatus = status);\n        }\n    }\n\n    getRouteParams() {\n        this.subscriptions.sink = this.route.queryParams.subscribe((params) => {\n            this.tournamentId = params['tournament'];\n            this.stageId = params['stage'];\n            this.getData(this.tournamentId);\n        });\n    }\n\n    getData(tournamentId: string) {\n        this.subscriptions.sink = this.store.pipe(select(selectTournamentsData))\n            .subscribe((tournaments: ITournament[]) => {\n                if (!tournaments) {\n                    return this.store.dispatch(new LoadTournaments());\n                }\n                this.tournament = this.findTournamentById(tournaments, tournamentId);\n                this.competitors = this.filterCompetitorsByValue(this.tournament.competitors);\n                this.stages = this.tournament.stages;\n                this.stageNumber = this.findStageIndex(this.stages, this.stageId) + 1;\n            });\n    }\n\n    findCompetitorByNumber() {\n        const foundCompetitor = this.findCompetitor(this.competitors, this.currentScore);\n        const passedCompetitor = this.findCompetitor(this.passedCompetitors, this.currentScore);\n        const isHasResult = foundCompetitor && this.findCompetitorByStage(foundCompetitor);\n        if (isHasResult) {\n            this.passedCompetitors.push(foundCompetitor);\n            this.initAlert('Данный частник уже проходил этот этап. Выберите другого учасника');\n            return;\n        }\n        if (this.currentScore.mark && foundCompetitor && !passedCompetitor) {\n            this.currentCompetitor = foundCompetitor;\n            this.passedCompetitors.push(this.currentCompetitor);\n            this.filledExercises.push(this.currentScore);\n        } else {\n            this.initAlert('Участник с таким номером не найден');\n        }\n    }\n\n    findCompetitorByStage(competitor: ICompetitor): boolean {\n        return competitor.result.some((res) => res.stageId === this.stages[this.stageNumber - 1].id);\n    }\n\n    nextStage() {\n        this.getTimerValue();\n        this.submitted = true;\n        if (this.saveStatus) {\n            return;\n        }\n        this.submitted = false;\n        this.addScoreList();\n        this.loadNextCompetitor();\n        if (this.stageNumber < this.stages.length) {\n            this.dialogsService.initLoader('Загрузка нового этапа');\n            this.stageId = this.stages[this.stageNumber].id;\n            this.stageNumber = this.findStageIndex(this.stages, this.stageId) + 1;\n            this.store.dispatch(new StartTournament(this.tournamentId));\n            setTimeout(() => this.dialogsService.hideLoader(), 2000);\n        } else {\n            this.loadNextCompetitor();\n            this.dialogsService.initLoader('Завершение соревнования');\n            this.archiveTournament(this.tournament);\n            setTimeout(() => this.dialogsService.hideLoader(), 2000);\n            this.location.back();\n            return;\n        }\n        this.passedCompetitors = [];\n        this.filledExercises = [];\n    }\n\n    archiveTournament(tournament: ITournament) {\n        tournament.active = false;\n        this.store.dispatch(new UpdateTournament({tournament, tournamentId: tournament.id}));\n    }\n\n    addScoreList() {\n        if (this.connectionStatus && this.connectionStatus !== this.connectionService.NO_CONNECTION) {\n            this.addScoreListToServer(this.tournamentId, this.stageId);\n            return;\n        }\n        this.addScoreListToStorage(this.tournamentId, this.stageId);\n    }\n\n    addScoreListToServer(tournamentId: string, stageId: string) {\n        this.store.dispatch(new AddScoreList({\n            tournamentId,\n            stageId,\n            scores: this.filledExercises,\n            fromStorage: false\n        }));\n    }\n\n    addScoreListToStorage(tournamentId: string, stageId: string) {\n        this.storageService.addScoreList(tournamentId, stageId, this.filledExercises);\n    }\n\n    loadNextCompetitor() {\n        this.getTimerValue();\n        this.submitted = true;\n        if (this.saveStatus) {\n            return;\n        }\n        this.submitted = false;\n        this.addScoreList();\n        this.store.dispatch(new StartTournament(this.tournamentId));\n        this.currentCompetitor = null;\n        this.currentScore = {...emptyScore};\n        this.passedTargets = [];\n        this.seconds = 0;\n        this.milliseconds = 0;\n        this.targetScore = 0;\n    }\n\n    loadNextTarget() {\n        if (this.currentScore.score === null) {\n            this.currentScore.score = 0;\n        }\n        this.currentScore.score += this.targetScore;\n        this.passedTargets.push(this.targetScore);\n        this.targetScore = 0;\n    }\n\n    getDisqualificationTypes() {\n        this.store.dispatch(new LoadDisqualificationTypes());\n        this.disqualificationTypes$ = this.store.pipe(\n            select(selectSharedDisqualificationTypes),\n            tap((types: string[]) => {\n                this.disqualifications = types;\n                if (!(this.disqualifications.includes('Other'))) {\n                    this.disqualifications.push('Other');\n                }\n                this.translatedDisqualification = this.sharedService.translateArray(this.disqualifications);\n            })\n        );\n    }\n\n    getTimerValue() {\n        this.currentScore.timeOfExercise = Number(+this.seconds + this.milliseconds / 1000);\n    }\n\n    findTournamentById(tournaments: ITournament[], tournamentId: string): ITournament {\n        return this.tournamentsService.findTournamentById(tournaments, tournamentId);\n    }\n\n    filterCompetitorsByValue(competitors: ICompetitor[]): ICompetitor[] {\n        return competitors.filter((competitor: ICompetitor) => competitor.active || competitor.safetyTechnique);\n    }\n\n    findStageIndex(stages: IStage[], stageId: string): number {\n        return stages.findIndex((stage: IStage) => stage.id === stageId);\n    }\n\n    findCompetitor(competitors: ICompetitor[], score: IScore) {\n        return competitors.find((competitor: ICompetitor) =>\n            competitor.number === score.mark || competitor.rfidCode === score.mark);\n    }\n\n    initAlert(message: string) {\n        this.alertSubs.sink = this.dialogsService.getDialogAlert(message)\n            .subscribe((result) => this.alertSubs.unsubscribe());\n    }\n\n    initPrompt() {\n        const options: IDialogPrompt = this.getPromptOptions({\n            title: 'Введите номер',\n            cancelButtonText: 'Отменить',\n            okButtonText: 'Сохранить',\n            inputType: 'number'\n        });\n        this.promptSubs.sink = this.dialogsService.getDialogPrompt(options)\n            .subscribe((result) => {\n                this.currentScore.mark = result.text;\n                this.currentScore.type = 'NUMBER';\n                this.findCompetitorByNumber();\n                this.promptSubs.unsubscribe();\n            });\n    }\n\n    getPromptOptions(options): IDialogPrompt {\n        return this.dialogsService.getPromptOptions(options);\n    }\n\n    initDialog() {\n        const options = this.getDialogActionsOptions(this.translatedDisqualification);\n        this.dialogSubs.sink = this.dialogsService.getDialogAction(options)\n            .subscribe((result) => {\n                this.actionDialogResult(result);\n                this.dialogSubs.unsubscribe();\n            });\n    }\n\n    getDialogActionsOptions(actions: string[]): IDialogActions {\n        return this.dialogsService.getDialogOptions('вид дисквалификации', actions);\n    }\n\n    actionDialogResult(result: string) {\n        switch (result) {\n            case 'Отменить':\n                return;\n            case 'Другое':\n                return this.initDisqualificationPrompt();\n            default:\n                const index = this.findDisqualificationIndex(result);\n                return this.currentScore.disqualificationReason = this.disqualifications[index];\n\n        }\n    }\n\n    initDisqualificationPrompt() {\n        const options = this.getPromptOptions({\n            title: 'Введите причину дисквалификации',\n            cancelButtonText: 'Отменить',\n            okButtonText: 'Сохранить'\n        });\n        this.promptSubs.sink = this.dialogsService.getDialogPrompt(options)\n            .subscribe((result) => {\n                this.currentScore.disqualificationReason = result.text;\n                this.promptSubs.unsubscribe();\n            });\n    }\n\n    findDisqualificationIndex(disqualification: string) {\n        return this.translatedDisqualification.findIndex((item) => item === disqualification);\n    }\n\n    enableNextCmpButton() {\n        return this.currentCompetitor !== null && this.passedCompetitors.length !== 0 &&\n            (this.competitors.length - this.passedCompetitors.length !== 0)\n            && this.passedTargets.length === this.stages[this.stageNumber - 1].allTargets\n            || this.currentScore.disqualificationReason !== '';\n    }\n\n    enableNextTargetBtn() {\n        return this.passedTargets.length < this.stages[this.stageNumber - 1].allTargets &&\n            this.currentCompetitor !== null && !this.currentScore.disqualificationReason;\n    }\n\n    enableNextStageBtn() {\n        if (this.connectionStatusCondition) {\n            return this.passedCompetitors.length === this.competitors.length\n                && this.passedTargets.length === this.stages[this.stageNumber - 1].allTargets ||\n                this.passedCompetitors.length === this.competitors.length;\n        } else {\n            return !this.storageService.hasScoreList(this.tournamentId, this.stageId) && this.passedCompetitors.length !== 0;\n        }\n    }\n\n    get connectionStatusCondition() {\n        return this.connectionStatus && this.connectionStatus !== this.connectionService.NO_CONNECTION;\n    }\n\n    enableDisqualificationBtn() {\n        return this.currentCompetitor !== null;\n    }\n\n    get saveStatus() {\n        return this.currentScore.timeOfExercise === 0\n            && !this.currentScore.disqualificationReason.length\n            && this.currentCompetitor !== null;\n    }\n\n\n    goBack() {\n        this.location.back();\n    }\n\n    onReadMark() {\n        this.markService.readMark();\n        this.markSubs.sink = this.markService.mark$\n            .subscribe((mark: string) => {\n                if (mark) {\n                    this.currentScore.mark = mark;\n                    this.currentScore.type = 'RFID';\n                    this.markSubs.unsubscribe();\n                    this.findCompetitorByNumber();\n                }\n            });\n    }\n\n    onSetTargetScore(item: number) {\n        if ((this.targetScore + item) < 0) {\n            this.targetScore = 0;\n            return;\n        }\n        this.targetScore = this.targetScore + item;\n    }\n}\n","<div class=\"label\">{{displayTime}}</div>\n<button type=\"button\" class=\"btn btn__big\" (click)=\"clickTimer()\">{{timerLabel | translate}}</button>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subscription, timer} from 'rxjs';\nimport {TimerService} from '@exercises/timer.service';\n\n@Component({\n    selector: 'app-timer',\n    templateUrl: './timer.component.html',\n    styleUrls: ['./timer.component.scss']\n})\nexport class TimerComponent implements OnInit {\n    public ticks = 0;\n    public timerLabel = 'Start';\n    private timerSubscription: Subscription;\n    private started: boolean;\n    public defaultDisplayTime = '00 : 00 : 00';\n    public displayTime: string;\n\n    @Output() timerValue: EventEmitter<{ value: number; label: string }> = new EventEmitter();\n\n    constructor(private timerService: TimerService) {\n    }\n\n    ngOnInit() {\n        this.displayTime = this.defaultDisplayTime;\n    }\n\n    startTimer() {\n        const $timer = timer(0, 1000);\n        this.timerSubscription = $timer.subscribe(ticks => {\n            this.ticks = ticks;\n            this.displayTime = this.generateTimeString(ticks);\n            this.getTimerValue();\n        });\n    }\n\n    stopTimer() {\n        this.timerSubscription.unsubscribe();\n    }\n\n    public generateTimeString(time: number) {\n        return this.timerService.generateTimeString(time);\n    }\n\n    public clickTimer() {\n        this.started ? this.stopTimer() : this.startTimer();\n        this.started = !this.started;\n        this.timerLabel = this.started ? 'stop' : 'start';\n    }\n\n\n    getTimerValue() {\n        this.timerValue.emit({value: this.ticks, label: this.displayTime});\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ExerciseComponent} from './components/exercise/exercise.component';\nimport {SharedModule} from '@shared/shared.module';\nimport {TimerComponent} from './components/timer/timer.component';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ExerciseComponent\n    }\n];\n\n@NgModule({\n    declarations: [ExerciseComponent, TimerComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        TranslateModule,\n        RouterModule.forChild(routes)\n    ],\n    exports: [RouterModule]\n})\nexport class ExerciseModule {\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n  constructor() { }\n\n  generateTimeString(time: number) {\n    return `${this.getHours(time)} : ${this.getMinutes(time)} : ${this.getSeconds(time)}`;\n  }\n\n  private getSeconds(ticks: number) {\n    return this.pad(ticks % 60);\n  }\n\n  private getMinutes(ticks: number) {\n    return this.pad((Math.floor(ticks / 60)) % 60);\n  }\n\n  private getHours(ticks: number) {\n    return this.pad(Math.floor((ticks / 60) / 60));\n  }\n\n  private pad(digit: any) {\n    return digit <= 9 ? '0' + digit : digit;\n  }\n}\n","import {EventEmitter, Input, Output} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {FormsService} from '@forms/services/forms.service';\nimport {FormFieldName} from '@models/constants/fields';\nimport {PageTypes} from '@models/constants/page-types';\nimport {IJudge, IPerson, IUser} from '@models/interfaces/human';\nimport {ITournament} from '@models/interfaces/tournament';\nimport {IStage} from '@models/interfaces/stage';\nimport {IDivision} from '@models/interfaces/division';\nimport {IRank} from '@models/interfaces/ranks';\nimport {IConditionUnits, IStandard} from '@models/interfaces/standard';\nimport {IWeaponTypes} from '@models/interfaces/weapons';\nimport {FieldsForMobile, FieldsMocks} from '@models/mocks/fields.mocks';\nimport {UnsubscribeOndestroyAdapter} from '../../adstracts/unsubscribe-ondestroy-adapter';\n\nconst OBJECT_TYPE = 'object';\n\nexport abstract class AbstractForm extends UnsubscribeOndestroyAdapter {\n\n    public form: FormGroup;\n    public fields = FormFieldName;\n    public controls: string[] = [];\n    public submitted = false;\n    public divisions: IDivision[] = [];\n    public judges: IJudge[];\n    public classifier: IStage[];\n    public ranks: IRank[] = [];\n    public units: IConditionUnits[] = [];\n    public personsByDivision: IPerson[] = [];\n    public weaponTypes = [];\n    public weaponTypesWeaponList: IWeaponTypes[] = [];\n    public selectedItem: string;\n    public gridRows: string[] = [];\n    public gridValue = '80';\n    public levelNames: string[];\n    public validations: any;\n    public currentLanguage: string;\n    public translatedWeaponTypes: string[];\n    public competitorMark: any;\n\n    @Input() object: any;\n    @Input() objectType: string;\n    @Input() isMobile: boolean;\n    @Input() mobileSelectArray: string[];\n\n    @Input() set mark(value: any) {\n        if (this.form && value) {\n            this.form.controls['mark'].setValue(value);\n        } else {\n            this.competitorMark = value;\n        }\n    }\n\n    @Output() save = new EventEmitter<IUser | IPerson | ITournament | IStandard>();\n    @Output() cancel = new EventEmitter();\n\n    protected constructor(protected formsService: FormsService,\n                          protected translateService: TranslateService) {\n        super();\n    }\n\n\n    createForm() {\n        this.form = new FormGroup({});\n        if (this.object) {\n            this.addControls(this.form, this.object);\n            if (this.object.address) {\n                const addressForm = new FormGroup({});\n                this.form.addControl('address', addressForm);\n                this.addControls(addressForm, this.object.address);\n            }\n            this.controls = this.createArrayOfControls(this.form);\n        }\n        if (this.competitorMark) {\n            this.form.controls['mark'].setValue(this.competitorMark);\n        }\n    }\n\n    addControls(form: FormGroup, formObject: any) {\n        for (const key in formObject) {\n            if (formObject.hasOwnProperty(key)) {\n                if (typeof formObject[key] !== OBJECT_TYPE) {\n                    if (!(this.getNotDisplayedFields(key))) {\n                        form.addControl(key, new FormControl(formObject[key], this.getValidation(key)));\n                    }\n                }\n\n                if (typeof formObject[key] === OBJECT_TYPE) {\n                    this.addControlsForObjectCase(form, formObject, key);\n                }\n            }\n        }\n    }\n\n    addControlsForObjectCase(form: FormGroup, formObject: any, key: string) {\n        switch (key) {\n            case this.fields.DIVISION:\n                form.addControl(key, new FormControl(formObject[key]['name'], this.getValidation(key)));\n                break;\n            case this.fields.MAIN_JUDGE:\n            case this.fields.STATISTICS_JUDGE:\n            case this.fields.DIRECTOR:\n                form.addControl(key, new FormControl(formObject[key]['userName'], this.getValidation(key)));\n                break;\n            case this.fields.RANK:\n                const lang = localStorage.getItem('lang') === 'ru' ? 'rus' : 'kz';\n                form.addControl(key, new FormControl(formObject[key][lang], this.getValidation(key)));\n                break;\n            case this.fields.UNITS:\n                form.addControl(key, new FormControl(formObject[key]['units'], this.getValidation(key)));\n                break;\n            case this.fields.HANDGUN_IPSC_CODE:\n            case this.fields.SHOTGUN_IPSC_CODE:\n            case this.fields.RIFLE_IPSC_CODE:\n                form.addControl(key, new FormControl(formObject[key]['code'], this.getValidation(key)));\n        }\n    }\n\n    getValidation(control: string | any): Validators {\n        switch (this.objectType) {\n            case PageTypes.TOURNAMENT:\n                return this.formsService.generateValidationListByBean(this.validations.CompetitionBean, control);\n            case PageTypes.STAGE:\n                return this.formsService.generateValidationListByBean(this.validations.Stage, control);\n            case PageTypes.PERSON:\n                return this.formsService.generateValidationListByBean(this.validations.PersonBean, control);\n            case PageTypes.JUDGE:\n                return this.formsService.generateValidationListByBean(this.validations.UserSignupBean, control);\n            case PageTypes.DIVISION:\n                return this.formsService.generateValidationListByBean(this.validations.DivisionBean, control);\n            case PageTypes.SPECIALITIES:\n                return this.formsService.generateValidationListByBean(this.validations.Speciality, control);\n            case PageTypes.WEAPON:\n                return this.formsService.generateValidationListByBean(this.validations.Weapon, control);\n            case PageTypes.USER:\n                return this.formsService.generateValidationListByBean(this.validations.UserUpdateBean, control);\n            case PageTypes.COMPETITOR:\n                control = control === 'safetyTechnique' ? 'active' : control;\n                return this.formsService.generateValidationListByBean(this.validations.CompetitorMark, control);\n            case PageTypes.UNIT:\n                return this.formsService.generateValidationListByBean(this.validations.UnitBean, control);\n            case PageTypes.TESTS:\n                return this.formsService.generateValidationListByBean(this.validations.QuizBean, control);\n            case PageTypes.CATEGORY:\n                return this.formsService.generateValidationListByBean(this.validations.Categories, control);\n            case PageTypes.WEAPON_TYPES:\n                return this.formsService.generateValidationListByBean(this.validations.WeaponType, control);\n            case PageTypes.COURSE:\n                return this.formsService.generateValidationListByBean(this.validations.CourseBean, control);\n            case PageTypes.CONDITION:\n                return [Validators.required];\n            default:\n                return null;\n        }\n    }\n\n    createArrayOfControls(group: FormGroup): string[] {\n        return this.formsService.createArrayOfControls(group);\n    }\n\n    detectFormValueChanges() {\n        return this.form.valueChanges.subscribe(value => {\n            this.object = value;\n            for (const key in this.object) {\n                if (this.object.hasOwnProperty(key) && this.object[key]) {\n                    this.formDetectionCase(key);\n                }\n            }\n        });\n    }\n\n    formDetectionCase(key) {\n        switch (key) {\n            case this.fields.MAIN_JUDGE:\n            case this.fields.STATISTICS_JUDGE:\n            case this.fields.DIRECTOR:\n                this.object[key] = this.findObject(this.judges, this.object, key);\n                return;\n            case this.fields.DIVISION:\n                this.object[key] = this.findObject(this.divisions, this.object, key);\n                return;\n            case this.fields.RANK:\n                this.object[key] = this.findObject(this.ranks, this.object, key);\n                return;\n            case this.fields.ISC_CLASSIFIER:\n                this.object[key] = this.findObject(this.classifier, this.object, key);\n                return;\n        }\n    }\n\n    findObject(array: any[], object: any, key: any) {\n        if (typeof object[key] === 'string') {\n            return this.findObjectByName(array, object, key);\n        }\n\n        return this.findObjectById(array, object, key);\n    }\n\n    findObjectById(array: any[], object: any, key: any) {\n        return array.find((item: any) =>\n            item.id === object[key] || item.id === object[key].id);\n\n    }\n\n    findObjectByName(array: any[], object: any, key: any) {\n        if (key === this.fields.RANK) {\n            const lang = localStorage.getItem('lang') === 'ru' ? 'rus' : 'kz';\n            return array.find((item: IRank) =>\n                item[lang] === object[key] || item[lang] === object[key][lang]);\n        }\n        return array.find((item: any) => {\n            if (item.hasOwnProperty('userName')) {\n                return item.userName === object[key] || item.userName === object[key].userName;\n            }\n            return item.name === object[key] || item.name === object[key].name;\n        });\n    }\n\n    onSwitcherValueChange(control: string, value?: any) {\n        if (value && this.formControls[control].value === value.value) {\n            return;\n        }\n        const controlValue = this.formControls[control].value;\n        this.formControls[control].setValue(!controlValue);\n    }\n\n    onItemSelected(control: any, array: string[], value: any) {\n        if (!(FieldsMocks.notSelectableFields.includes(control))) {\n            const selectedItem = array.find((item: any) => item === value);\n            this.formControls[control].setValue(selectedItem);\n            switch (control) {\n                case this.fields.ISC_CLASSIFIER:\n                    return this.form.patchValue(this.setDefaultValuesByClassifier(value));\n                default:\n                    return;\n            }\n        }\n    }\n\n    onDateSelected(control: string, value: string) {\n        this.formControls[control].setValue(value);\n    }\n\n    selectItems(control: string): any {\n        switch (control) {\n            case this.fields.RANK:\n                return this.ranks;\n            case this.fields.WEAPON_TYPE:\n            case this.fields.SHOOTING_TYPE:\n                return this.translatedWeaponTypes;\n            case this.fields.LEVEL:\n                return this.levelNames;\n            case this.fields.MAIN_JUDGE:\n            case this.fields.STATISTICS_JUDGE:\n            case this.fields.DIRECTOR:\n                return this.judges;\n            case this.fields.ISC_CLASSIFIER:\n                return this.classifier;\n            case this.fields.DIVISION:\n                return this.divisions;\n            case this.fields.UNITS:\n                return this.units;\n            case this.fields.OWNER:\n                return this.personsByDivision;\n            case this.fields.WEAPON_NAME:\n                return this.weaponTypesWeaponList;\n            default:\n                return;\n        }\n    }\n\n    getBindLabel(control) {\n        switch (control) {\n            case this.fields.RANK:\n                this.translateService.onLangChange\n                    .subscribe((lang) => this.currentLanguage = lang);\n                return this.currentLanguage === 'ru' ? 'rus' : 'kz';\n            case this.fields.MAIN_JUDGE:\n            case this.fields.STATISTICS_JUDGE:\n            case this.fields.DIRECTOR:\n            case this.fields.OWNER:\n                return 'userName';\n            case this.fields.DIVISION:\n            case this.fields.WEAPON_TYPE:\n            case this.fields.UNITS:\n            case this.fields.ISC_CLASSIFIER:\n            case this.fields.SHOOTING_TYPE:\n            case this.fields.WEAPON_NAME:\n                return 'name';\n            default:\n                return null;\n        }\n    }\n\n    setDefaultValuesByClassifier(value: IStage): IStage {\n        return {\n            targets: value.targets,\n            popper: value.popper,\n            noShoots: value.noShoots,\n            notCounted: value.notCounted,\n            minShoots: value.minShoots,\n            maxPoints: value.maxPoints,\n        };\n    }\n\n    textareaCase(control): boolean {\n        return FieldsMocks.textareaFields.includes(control);\n    }\n\n    ngSelectCase(control): boolean {\n        return FieldsMocks.selectFields.includes(control);\n    }\n\n    datePickerCase(control): boolean {\n        return FieldsMocks.datePickerFields.includes(control);\n    }\n\n    numberTypeFieldCase(control): boolean {\n        return FieldsMocks.numberFields.includes(control);\n    }\n\n    getDivisionNames(divisions: IDivision[]): string[] {\n        return divisions.map((division: IDivision) => division.name);\n    }\n\n    getLevelNames(levels: any[]): string[] {\n        return levels.map((level: any) => level.classificationBreaks);\n    }\n\n    getNotDisplayedFields(key): boolean {\n        if (this.isMobile && this.objectType === 'Competitor') {\n            return FieldsForMobile.notDisplayedCompetitorsFields.includes(key);\n        }\n\n        if (this.objectType === 'Course') {\n            const fields = [this.fields.DIVISION];\n            return fields.concat(FieldsMocks.notDisplayedFields).includes(key);\n        }\n        return FieldsMocks.notDisplayedFields.includes(key);\n    }\n\n    getGridRowsByControls() {\n        this.controls.forEach(() => this.gridRows.push(this.gridValue));\n    }\n\n\n    get formControls() {\n        return this.form.controls;\n    }\n\n    onCancel() {\n        this.cancel.next();\n    }\n\n    onSave() {\n        this.submitted = true;\n        if (this.form.invalid) {\n            return;\n        }\n        this.save.next(this.object);\n    }\n}\n","<div [formGroup]=\"form\" class=\"wrap\" *ngIf=\"addressParent?.address\">\n    <ng-container *ngFor=\"let control of controls\">\n        <div class=\"form-group row\" *ngIf=\"addressParent?.address\">\n            <label for=\"phone\" class=\"col-4 col-form-label\">{{control | translate}}</label>\n            <div class=\"col-8\">\n                <input type=\"text\"\n                       class=\"form-control\"\n                       id=\"phone\"\n                       [formControlName]=\"control\"\n                       [placeholder]=\"control | translate\"\n                       [ngClass]=\"{'is-invalid': submitted && formControls[control].errors}\"\n                >\n                <app-error [form]=\"form\"\n                           [controlName]=\"control\"\n                           [submitted]=\"submitted\"\n                ></app-error>\n            </div>\n        </div>\n    </ng-container>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\nimport {IUser} from '@models/interfaces/human';\nimport {FormsService} from '@forms/services/forms.service';\n\n@Component({\n    selector: 'app-address-form-part',\n    templateUrl: './address-form-part.component.html',\n    styleUrls: ['./address-form-part.component.scss']\n})\nexport class AddressFormPartComponent implements OnInit {\n    public controls: string[] = [];\n    @Input() submitted: boolean;\n    @Input() form: FormGroup;\n    @Input() addressParent: IUser;\n\n    constructor(private formsService: FormsService) {\n    }\n\n    ngOnInit() {\n        this.controls = this.createArrayOfControls(this.form);\n    }\n\n    createArrayOfControls(group: FormGroup): string[] {\n        return this.formsService.createArrayOfControls(group);\n    }\n\n    get formControls() {\n        return this.form.controls;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <ng-container *ngFor=\"let control of controls\">\n        <div class=\"form-group row d-flex align-items-center\" [class.center]=\"control === 'active'\">\n            <label [attr.for]=\"control === fields\"\n                   class=\"col-4 col-form-label w-100\"\n            >{{control | translate}}</label>\n            <div class=\"col-8 align-items-center\" [ngSwitch]=\"true\">\n                <ng-container *ngSwitchCase=\"datePickerCase(control)\">\n                    <app-datepicker [controlName]=\"control\"\n                                    [form]=\"form\"\n                                    [submitted]=\"submitted\"\n                                    (setControlValue)=\"onDateSelected(control, $event)\"\n                                    [className]=\"'w-100'\"\n                    ></app-datepicker>\n                </ng-container>\n\n                <ui-switch *ngSwitchCase=\"control === fields.ACTIVE\" size=\"small\" color=\"#668c6e\"\n                           [formControlName]=\"control\"\n                           (change)=\"onSwitcherValueChange(control)\"\n                ></ui-switch>\n\n                <ng-container *ngSwitchCase=\"ngSelectCase(control)\">\n                    <ng-select [id]=\"control | translate\"\n                               [items]=\"selectItems(control)\"\n                               [placeholder]=\"control | translate\"\n                               [formControlName]=\"control\"\n                               [searchable]=\"false\"\n                               [bindLabel]=\"getBindLabel(control)\"\n                               (change)=\"onItemSelected(control, selectItems(control), $event)\"\n                               [loading]=\"!selectItems(control)\"\n                               [loadingText]=\"'Loading...'\"\n                               [ngClass]=\"{'is-invalid': submitted && formControls[control].errors, 'w-100': true}\"\n                    ></ng-select>\n                </ng-container>\n\n                <input type=\"number\"\n                       *ngSwitchCase=\"numberTypeFieldCase(control)\"\n                       [id]=\"control\"\n                       [formControlName]=\"control\"\n                       [placeholder]=\"control | translate\"\n                       class=\"form-control\"\n                       [ngClass]=\"{'is-invalid': submitted && formControls[control].errors}\"\n                >\n\n                <div class=\"form__custom-checkbox\"\n                     *ngSwitchCase=\"control === fields.NOT_COUNTED\"\n                     (click)=\"onSwitcherValueChange(control)\"\n                >\n                    <input type=\"checkbox\"\n                           [checked]=\"formControls[control].value\"\n                           class=\"d-none\"\n                           [formControlName]=\"control\"\n                           [ngClass]=\"{'is-invalid': submitted && formControls[control].errors}\"\n                    >\n                    <div class=\"form__custom-checkbox__block\"></div>\n                </div>\n\n                <textarea [name]=\"control\"\n                          [id]=\"control\"\n                          [formControlName]=\"control\"\n                          *ngSwitchCase=\"textareaCase(control)\"\n                          [ngClass]=\"{'is-invalid': submitted && formControls[control].errors}\"\n                          cols=\"30\"\n                          rows=\"5\"\n                          class=\"w-100 form-control\"\n                ></textarea>\n\n                <input [type]=\"control === 'password' || control ==='repassword' ? 'password' : 'text'\"\n                       ngbAutofocus\n                       *ngSwitchDefault\n                       class=\"form-control\"\n                       [id]=\"control\"\n                       [formControlName]=\"control\"\n                       [value]=\"formControls[control].value\"\n                       [placeholder]=\"control | translate\"\n                       [ngClass]=\"{'is-invalid': submitted && formControls[control].errors}\"\n                />\n                <ng-container *ngSwitchCase=\"control === fields.IMAGE_PATH\">\n                    <app-image-loader [imagePath]=\"formControls[control].value\"\n                                      (loadImage)=\"onLoadImage($event)\"\n                                      (deleteImage)=\"onDeleteImage()\"\n                    ></app-image-loader>\n                </ng-container>\n\n                <app-error [form]=\"form\"\n                           [controlName]=\"control\"\n                           [submitted]=\"submitted\"\n                ></app-error>\n            </div>\n        </div>\n    </ng-container>\n    <app-address-form-part *ngIf=\"form && object.address && object.address.hasOwnProperty('city')\"\n                           [form]=\"formControls['address']\"\n                           [addressParent]=\"object\"\n                           [submitted]=\"submitted\"\n    ></app-address-form-part>\n    <div class=\"form-group row mt-4\">\n        <div class=\"col-6\">\n            <button type=\"button\"\n                    class=\"btn btn-primary w-100 \"\n                    (click)=\"onSave()\"\n            >{{'save' | translate}}</button>\n        </div>\n        <div class=\"col-6\">\n            <button type=\"button\"\n                    class=\"btn btn-secondary w-100 \"\n                    (click)=\"onCancel()\"\n            >{{'cancel' | translate}}</button>\n        </div>\n    </div>\n</form>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AbstractForm} from '@forms/abstract-form';\nimport {FormsService} from '@forms/services/forms.service';\nimport {IJudge, IPerson} from '@models/interfaces/human';\nimport {IStage} from '@models/interfaces/stage';\nimport {IDivision} from '@models/interfaces/division';\nimport {selectClassifiers, selectLevels, selectRanks, selectValidations, selectWeaponTypes} from '@shared/selectors/selectors';\nimport {selectDivisionsData} from '@divisions/selectors/selectors';\nimport {selectJudgesData} from '@judges/selectors/judjes.selector';\nimport {IRank} from '@models/interfaces/ranks';\nimport {IConditionUnits} from '@models/interfaces/standard';\nimport {selectUnits} from '@quiz/selectors/selectors';\nimport {selectPersonsByDivision} from '@persons/selectors/selectors';\nimport {UploadImage} from '@shared/actions/actions';\nimport {selectWeaponTypesData} from '@weapon/selectors/selectors';\nimport {IWeaponTypes} from '@models/interfaces/weapons';\nimport {DialogsService} from '@shared/services/dialogs.service';\nimport {SubSink} from 'subsink';\nimport {PageTypes} from '@models/constants/page-types';\nimport {SharedService} from '@shared/services/shared.service';\n\n\n@Component({\n    selector: 'app-base-form',\n    templateUrl: './base-form.component.html',\n    styleUrls: ['./base-form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class BaseFormComponent extends AbstractForm implements OnInit {\n\n    public weaponTypes = [];\n    public divisions: IDivision[] = [];\n    public judges: IJudge[];\n    public classifier: IStage[];\n    public levels: any;\n    public levelNames: string[];\n    public ranks: IRank[] = [];\n    public units: IConditionUnits[] = [];\n    public pageTypes = PageTypes;\n\n    private dialogSubs: SubSink = new SubSink();\n\n    constructor(protected formsService: FormsService,\n                protected translateService: TranslateService,\n                private store: Store<any>,\n                private dialogsService: DialogsService,\n                private sharedService: SharedService\n    ) {\n        super(formsService, translateService);\n    }\n\n    ngOnInit() {\n        this.getValidations();\n        this.createForm();\n        this.createArrayOfSubscriptions();\n        this.loadJudgesData();\n        this.loadClassifiers();\n        this.loadWeaponTypes();\n        this.getDivisionsList();\n        this.loadLevels();\n        this.getGridRowsByControls();\n        this.getRanks();\n        this.getUnits();\n        this.getPersonsByDivision();\n        this.getWeaponTypesForList();\n    }\n\n    loadJudgesData() {\n        const fields: string[] = [this.fields.MAIN_JUDGE, this.fields.STATISTICS_JUDGE, this.fields.DIRECTOR];\n        this.controls.forEach((control) => {\n            if (fields.includes(control)) {\n                this.subscriptions.sink = this.store.pipe(select(selectJudgesData))\n                    .subscribe((judges: IJudge[]) => {\n                        this.judges = judges;\n                    });\n            }\n        });\n    }\n\n    loadClassifiers() {\n        const field = this.fields.ISC_CLASSIFIER;\n        this.controls.forEach((control: string) => {\n            if (control === field) {\n                this.subscriptions.sink = this.store.pipe(select(selectClassifiers))\n                    .subscribe((data: IStage[]) => this.classifier = data);\n            }\n        });\n    }\n\n    loadLevels() {\n        this.controls.forEach((control: string) => {\n            if (control === this.fields.LEVEL) {\n                this.subscriptions.sink = this.store.pipe(select(selectLevels))\n                    .subscribe((levels: any) => {\n                        this.levels = levels;\n                        this.levelNames = this.getLevelNames(this.levels);\n                    });\n            }\n        });\n    }\n\n    loadWeaponTypes() {\n        this.controls.forEach((control: string) => {\n            if (control === this.fields.WEAPON_TYPE) {\n                this.subscriptions.sink = this.store.pipe(select(selectWeaponTypes))\n                    .subscribe((types: any) => {\n                        this.weaponTypes = types;\n                        this.translatedWeaponTypes = this.sharedService.translateArray(types);\n                    });\n            }\n        });\n    }\n\n    getDivisionsList() {\n        this.controls.forEach((control: string) => {\n            if (control === this.fields.DIVISION) {\n                this.subscriptions.sink = this.store.pipe(select(selectDivisionsData))\n                    .subscribe((divisions: IDivision[]) => this.divisions = divisions);\n            }\n        });\n    }\n\n    getRanks() {\n        this.controls.forEach((control: string) => {\n            if (control === this.fields.RANK) {\n                this.subscriptions.sink = this.store.pipe(select(selectRanks))\n                    .subscribe((ranks: IRank[]) => this.ranks = ranks);\n            }\n        });\n    }\n\n    getUnits() {\n        this.subscriptions.sink = this.store.select(selectUnits)\n            .subscribe((units: IConditionUnits[]) => this.units = units);\n    }\n\n    getValidations() {\n        this.subscriptions.sink = this.store.pipe(select(selectValidations))\n            .subscribe((validations: any) => this.validations = validations);\n    }\n\n    getWeaponTypesForList() {\n        this.subscriptions.sink = this.store.select(selectWeaponTypesData)\n            .subscribe((weaponTypes: IWeaponTypes[]) => this.weaponTypesWeaponList = weaponTypes);\n    }\n\n    getPersonsByDivision() {\n        this.subscriptions.sink = this.store.select(selectPersonsByDivision)\n            .subscribe((persons: IPerson[]) => this.personsByDivision = persons);\n    }\n\n    createArrayOfSubscriptions() {\n        this.subscriptions.sink = this.detectFormValueChanges();\n    }\n\n    initDialog(control) {\n        const options = this.getDialogOptions();\n        this.dialogSubs.sink = this.dialogsService.getDialogAction(options).subscribe((result) => {\n            if (result !== 'Отменить') {\n                this.selectedItem = result;\n                this.formControls[control].setValue(this.selectedItem);\n                this.dialogSubs.unsubscribe();\n            }\n        });\n    }\n\n    getDialogOptions() {\n        return this.dialogsService.getDialogOptions('Выберите тип регистрации', this.mobileSelectArray);\n    }\n\n    onLoadImage(file: File) {\n        const n = file.name.indexOf('.');\n        const imagePath = file.name.substring(0, n !== -1 ? n : file.name.length);\n        this.formControls['imagePath'].setValue(imagePath);\n        this.store.dispatch(new UploadImage(file));\n    }\n\n    onDeleteImage() {\n        this.formControls['imagePath'].setValue('');\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"form-group row\">\n        <label for=\"password\" class=\"col-4 col-form-label\">{{'password' | translate}}</label>\n        <div class=\"col-8\">\n            <input type=\"password\" ngbAutofocus [formControlName]=\"'password'\"\n                   [ngClass]=\"{'is-invalid': submitted && form.controls['password'].errors}\"\n                   class=\"form-control\" id=\"password\"\n                   [placeholder]=\"'password' | translate\">\n            <app-error [form]=\"form\"\n                       [controlName]=\"'password'\"\n                       [submitted]=\"submitted\"\n            ></app-error>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label for=\"repassword\" class=\"col-4 col-form-label\">{{'repassword' | translate}}</label>\n        <div class=\"col-8\">\n            <input type=\"password\" [formControlName]=\"'repassword'\" class=\"form-control\"\n                   [ngClass]=\"{'is-invalid': submitted && (form.controls['repassword'].errors || form.hasError('notEquals'))}\"\n                   id=\"repassword\"\n                   [placeholder]=\"'repassword' | translate\">\n            <app-error [form]=\"form\"\n                       [controlName]=\"'repassword'\"\n                       [submitted]=\"submitted\"\n            ></app-error>\n            <div *ngIf=\"submitted && form.hasError('notEquals')\" class=\"invalid-feedback login__form__error\">\n                {{'validationPasswords' | translate }}\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group row mt-4\">\n        <div class=\"col-6\">\n            <button type=\"button\"\n                    class=\"btn btn-primary w-100 \"\n                    (click)=\"onSave(form.value.password)\"\n            >{{'save' | translate}}</button>\n        </div>\n        <div class=\"col-6\">\n            <button type=\"button\"\n                    class=\"btn btn-secondary w-100 \"\n                    (click)=\"onCancel()\"\n            >{{'cancel' | translate}}</button>\n        </div>\n    </div>\n</form>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {select, Store} from '@ngrx/store';\n\nimport {IUser} from '@models/interfaces/human';\nimport {FormsService} from '@forms/services/forms.service';\nimport {selectValidations} from '@shared/selectors/selectors';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {LoadValidations} from '@shared/actions/actions';\n\n@Component({\n    selector: 'app-change-password-form',\n    templateUrl: './change-password-form.component.html',\n    styleUrls: ['./change-password-form.component.scss']\n})\nexport class ChangePasswordFormComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public form: FormGroup;\n\n    public password: string;\n    @Output() save = new EventEmitter<IUser>();\n    @Output() cancel = new EventEmitter();\n    public submitted: boolean;\n\n    constructor(private fb: FormBuilder,\n                private formsService: FormsService,\n                private store: Store<any>) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getValidations();\n        this.detectValueChanges();\n    }\n\n    getValidations() {\n        this.subscriptions.sink = this.store.pipe(select(selectValidations))\n            .subscribe((validations: any) => {\n                if (!validations) {\n                    this.store.dispatch(new LoadValidations());\n                }\n                this.createForm(validations);\n            });\n    }\n\n    createForm(validations: any) {\n        this.form = this.fb.group(\n            {\n                'password': ['', this.getValidatorType(validations, 'newPassword')],\n                'repassword': ['', this.getValidatorType(validations, 'newPassword')],\n            }, {validator: this.checkPasswords});\n    }\n\n    getValidatorType(validations: any, control: string) {\n        return this.formsService.generateValidationListByBean(validations.ChangePasswordBean, control);\n    }\n\n    detectValueChanges() {\n        this.subscriptions.sink = this.form.valueChanges.subscribe(value => this.password = value.password);\n    }\n\n    checkPasswords(group: FormGroup) {\n        const password = group.controls.password.value;\n        const repassword = group.controls.repassword.value;\n\n        return (!password || !repassword || password === repassword) ? null : {notEquals: true};\n    }\n\n    onSave(password) {\n        this.submitted = true;\n        if (this.form.invalid) {\n            return;\n        }\n        this.save.next(password);\n    }\n\n    onCancel() {\n        this.cancel.next();\n    }\n}\n","<form *ngIf=\"form && object\" [formGroup]=\"form\">\n    <div class=\"row\">\n        <div class=\"col-2\"></div>\n        <div class=\"col-4 d-flex justify-content-center\">\n            {{'inRussian' | translate}}\n        </div>\n        <div class=\"col-4 d-flex justify-content-center\">\n            {{'inKazakh' | translate}}\n        </div>\n    </div>\n    <label class=\"row form-group mt-2\" [formGroupName]=\"'question'\">\n        <span class=\"col-2\">{{'question' | translate | titlecase}}</span>\n        <span class=\"col-4\">\n            <textarea class=\"form-control\"\n                      rows=\"3\"\n                      [formControlName]=\"'ru'\"\n                      [ngClass]=\"{'is-invalid': submitted && formControls['question'].controls['ru'].errors}\"\n            ></textarea>\n            <app-error [form]=\"form.controls['question']\" [submitted]=\"submitted\" [controlName]=\"'ru'\"></app-error>\n        </span>\n        <span class=\"col-4\">\n            <textarea class=\"form-control\"\n                      rows=\"3\"\n                      [formControlName]=\"'kk'\"\n                      [ngClass]=\"{'is-invalid': submitted && formControls['question'].controls['ru'].errors}\"\n            ></textarea>\n            <app-error [form]=\"form.controls['question']\" [submitted]=\"submitted\" [controlName]=\"'kk'\"></app-error>\n        </span>\n        <span class=\"col-2\">\n            <app-image-loader [imagePath]=\"formControls['question']['controls']['imagePath']?.value\"\n                              (loadImage)=\"uploadImage($event, 'question')\"\n                              (deleteImage)=\"deleteImage($event, 'question')\"\n            ></app-image-loader>\n        </span>\n    </label>\n    <label class=\"row mt-2\">\n        <span class=\"col-4\">{{'right' | translate}}</span>\n        <div class=\"col-7 offset-1 btn-group btn-group-toggle\" ngbRadioGroup>\n            <label ngbButtonLabel\n                   class=\"btn btn-primary btn-radio mr-2\"\n                   *ngFor=\"let radio of questionRadio; trackBy: trackByFn(radio); let i = index; let last = last\"\n                   [ngClass]=\"{'checked': formControls['right'].value === i + 1, 'mr-0': last}\"\n            >\n                <input [formControlName]=\"'right'\"\n                       ngbButton type=\"radio\"\n                       [value]=\"radio.value\"\n                >{{radio.value}}\n            </label>\n            <app-error [form]=\"form\" [submitted]=\"submitted\" [controlName]=\"'right'\"></app-error>\n        </div>\n    </label>\n    <label class=\"row mt-3 align-items-center\">\n        <span class=\"col-2\">{{'random' | translate}}</span>\n        <span class=\"col-1\">\n            <ui-switch size=\"medium\" color=\"#668c6e\"\n                       [formControlName]=\"'random'\"\n                       (change)=\"onSwitcherValueChange('random')\"\n            ></ui-switch>\n        </span>\n\n        <span class=\"col-1\">{{'active' | translate}}</span>\n        <span class=\"col-1\">\n            <ui-switch size=\"medium\" color=\"#668c6e\"\n                       [formControlName]=\"'active'\"\n                       (change)=\"onSwitcherValueChange('active')\"\n            ></ui-switch>\n        </span>\n    </label>\n    <div class=\"row mt-3 mb-3\">\n        <div class=\"col-6\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"addAnswerField(form.get('answers').controls.length + 1)\"\n                    [disabled]=\"form.get('answers').controls.length === 4\"\n            >{{'addAnswer' | translate}}</button>\n        </div>\n        <div class=\"col-6\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"removeAnswerField(form.get('answers').controls.length - 1)\"\n                    [disabled]=\"form.get('answers').controls.length === 2\"\n            >{{'removeAnswer' | translate}}</button>\n        </div>\n    </div>\n    <label class=\"row mt-3\"\n           [formArrayName]=\"'answers'\"\n           *ngFor=\"let answer of form.get('answers').controls; let i = index; trackBy: trackByFn(i)\">\n        <span class=\"col-2\">{{getFieldLabel(i) | translate}}</span>\n        <span class=\"col-8\" [formGroupName]=\"i\">\n            <span class=\"row\">\n                <span class=\"col-6\">\n                    <textarea class=\"form-control\"\n                              rows=\"3\"\n                              [formControlName]=\"'ru'\"\n                              [ngClass]=\"{'is-invalid': submitted && answer.controls['ru'].errors}\"\n                    ></textarea>\n                    <app-error [form]=\"answer\" [submitted]=\"submitted\" [controlName]=\"'ru'\"></app-error>\n                </span>\n                <span class=\"col-6\">\n                    <textarea class=\"form-control\"\n                              rows=\"3\"\n                              [formControlName]=\"'kk'\"\n                              [ngClass]=\"{'is-invalid': submitted && answer.controls['ru'].errors}\"\n                    ></textarea>\n                    <app-error [form]=\"answer\" [submitted]=\"submitted\" [controlName]=\"'kk'\"></app-error>\n                </span>\n            </span>\n        </span>\n        <span class=\"col-2\">\n            <app-image-loader [imagePath]=\"answer.controls['imagePath']?.value\"\n                              (loadImage)=\"uploadImage($event, 'answers', i)\"\n                              (deleteImage)=\"deleteImage($event, 'answers', i)\"\n            ></app-image-loader>\n        </span>\n    </label>\n    <div class=\"form-group row mt-4\">\n        <div class=\"col-6\">\n            <button type=\"button\"\n                    class=\"btn btn-primary w-100\"\n                    (click)=\"send(form.value)\"\n            >{{'save' | translate}}</button>\n        </div>\n        <div class=\"col-6\">\n            <button type=\"button\"\n                    class=\"btn btn-secondary w-100\"\n                    (click)=\"onCancel()\"\n            >{{'cancel' | translate}}</button>\n        </div>\n    </div>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {AbstractForm} from '@forms/abstract-form';\nimport {FormsService} from '@forms/services/forms.service';\nimport {FormArray, FormBuilder, Validators} from '@angular/forms';\nimport {QuizMocks} from '@models/mocks/quiz.mocks';\nimport {Icons} from '@models/constants/icons';\nimport {Store} from '@ngrx/store';\nimport {UploadImage} from '@shared/actions/actions';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-questions-form',\n    templateUrl: './questions-form.component.html',\n    styleUrls: ['./questions-form.component.scss']\n})\nexport class QuestionsFormComponent extends AbstractForm implements OnInit {\n    public questionRadio: any[] = [];\n    public answers: FormArray;\n    public icons = Icons;\n\n    constructor(protected formsService: FormsService,\n                private fb: FormBuilder,\n                private store: Store<any>,\n                protected translateService: TranslateService) {\n        super(formsService, translateService);\n    }\n\n    ngOnInit() {\n        this.createQuestionsForm();\n        this.getRadioButtons();\n    }\n\n    createQuestionsForm() {\n        if (this.object) {\n            this.form = this.fb.group({\n                question: this.fb.group({\n                    kk: [this.object.kk, [Validators.required]],\n                    ru: [this.object.ru, [Validators.required]],\n                    imagePath: [this.object.questionImagePath || '']\n                }),\n                right: [this.object.right, [Validators.required]],\n                random: [this.object.random || false],\n                active: [this.object.active || false],\n                answers: this.fb.array(this.getAnswersArray()),\n            });\n            this.answers = this.form.get('answers') as FormArray;\n        }\n    }\n\n    addAnswerField(index: number) {\n        this.questionRadio.push({value: index});\n        this.answers.push(this.createAnswers());\n    }\n\n    removeAnswerField(index: number) {\n        this.questionRadio.splice(-1, 1);\n        this.answers.removeAt(index);\n    }\n\n    getAnswersArray() {\n        if (this.object.hasOwnProperty('answers') && this.object.answers.length) {\n            return this.object.answers.map((answer) => {\n                return this.fb.group({\n                    kk: [answer.kk, [Validators.required]],\n                    ru: [answer.ru, [Validators.required]],\n                    imagePath: [answer.imagePath || '']\n                });\n            });\n        }\n\n        return [this.createAnswers(), this.createAnswers()];\n    }\n\n    createAnswers() {\n        return this.fb.group({\n            kk: ['', [Validators.required]],\n            ru: ['', [Validators.required]],\n            imagePath: ['']\n        });\n    }\n\n    uploadImage(file: File, group: string, id?: number) {\n        const n = file.name.indexOf('.');\n        const imagePath = file.name.substring(0, n !== -1 ? n : file.name.length);\n        if (group === 'question') {\n            this.formControls.question['controls'].imagePath.setValue(imagePath);\n        } else {\n            const control = this.answers.at(id);\n            control['controls'].imagePath.setValue(imagePath);\n        }\n        this.store.dispatch(new UploadImage(file));\n    }\n\n    deleteImage(imagePath: string, group: string, id?: number) {\n        if (group === 'question') {\n            this.formControls.question['controls'].imagePath.setValue('');\n        } else {\n            const control = this.answers.at(id);\n            control['controls'].imagePath.setValue('');\n        }\n    }\n\n\n    getRadioButtons() {\n        if (this.object.right > 2) {\n            for (let i = 1; i <= this.object.right; i++) {\n                this.questionRadio.push({value: i});\n            }\n            return;\n        }\n        this.questionRadio = QuizMocks.questionRadio.slice(0);\n    }\n\n    getFieldLabel(index: number): string {\n        switch (index) {\n            case 1:\n                return 'secondAnswer';\n            case 2:\n                return 'thirdAnswer';\n            case 3:\n                return 'fourthAnswer';\n            default:\n                return 'firstAnswer';\n        }\n    }\n\n    trackByFn(index: any) {\n        return index;\n    }\n\n    send(object) {\n        this.submitted = true;\n        if (this.form.invalid) {\n            return;\n        }\n        this.save.next(object);\n    }\n\n}\n","<form *ngIf=\"form && object\" [formGroup]=\"form\">\n\n    <div class=\"row\">\n        <div class=\"col-2\"></div>\n        <div class=\"col-5 d-flex justify-content-center\">\n            {{'inRussian' | translate}}\n        </div>\n        <div class=\"col-5 d-flex justify-content-center\">\n            {{'inKazakh' | translate}}\n        </div>\n    </div>\n\n    <label class=\"row form-group mt-2\" [formGroupName]=\"'info'\">\n        <span class=\"col-2 mb-2\">{{'name' | translate | titlecase}}</span>\n        <span class=\"col-5 mb-2\">\n            <input class=\"form-control\"\n                   [formControlName]=\"'namedRus'\"\n                   [ngClass]=\"{'is-invalid': submitted && formControls['info'].controls['namedRus'].errors}\"\n            >\n            <app-error [form]=\"form.controls['info']\" [submitted]=\"submitted\" [controlName]=\"'namedRus'\"></app-error>\n        </span>\n        <span class=\"col-5 mb-2\">\n            <input class=\"form-control\"\n                   [formControlName]=\"'namedKz'\"\n                   [ngClass]=\"{'is-invalid': submitted && formControls['info'].controls['namedKz'].errors}\"\n            >\n            <app-error [form]=\"form.controls['info']\" [submitted]=\"submitted\" [controlName]=\"'namedKz'\"></app-error>\n        </span>\n\n        <span class=\"col-2 mb-2\">{{'description' | translate | titlecase}}</span>\n        <span class=\"col-5 mb-2\">\n            <textarea class=\"form-control\"\n                      rows=\"3\"\n                      [formControlName]=\"'descriptionRus'\"\n                      [ngClass]=\"{'is-invalid': submitted && formControls['info'].controls['descriptionRus'].errors}\"\n            ></textarea>\n            <app-error [form]=\"form.controls['info']\" [submitted]=\"submitted\"\n                       [controlName]=\"'descriptionRus'\"></app-error>\n        </span>\n        <span class=\"col-5 mb-2\">\n            <textarea class=\"form-control\"\n                      rows=\"3\"\n                      [formControlName]=\"'descriptionKz'\"\n                      [ngClass]=\"{'is-invalid': submitted && formControls['info'].controls['descriptionKz'].errors}\"\n            ></textarea>\n            <app-error [form]=\"form.controls['info']\" [submitted]=\"submitted\"\n                       [controlName]=\"'descriptionKz'\"></app-error>\n        </span>\n    </label>\n\n    <label class=\"row mt-3 align-items-center\">\n        <span class=\"col-2\">{{'groups' | translate}}</span>\n        <span class=\"col-1\">\n            <ui-switch size=\"medium\" color=\"#668c6e\"\n                       [formControlName]=\"'groups'\"\n                       (change)=\"onSwitcherValueChange('groups')\"\n            ></ui-switch>\n        </span>\n\n        <span class=\"col-1\">{{'active' | translate}}</span>\n        <span class=\"col-1\">\n            <ui-switch size=\"medium\" color=\"#668c6e\"\n                       [formControlName]=\"'active'\"\n                       (change)=\"onSwitcherValueChange('active')\"\n            ></ui-switch>\n        </span>\n    </label>\n\n    <div class=\"row mt-3 align-items-center\">\n        <div class=\"col-12\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"onShowForm('category')\"\n                    [ngClass]=\"{'btn-danger': !categoriesWithTime.length && isInvalid}\"\n            >\n                <span *ngIf=\"!showCategoryForm\">{{'add' | translate}} {{('category' | translate: {ending: 'ю'}).toLowerCase()}}</span>\n                <span *ngIf=\"showCategoryForm\">{{'hideForm' | translate}}</span>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"row flex-wrap mt-4\"\n         *ngIf=\"showCategoryForm && categoryForm\"\n         [formGroup]=\"categoryForm\"\n         [@showHide]\n    >\n        <div class=\"col-5 d-flex justify-content-start mb-2 align-items-center\"\n             *ngIf=\"categories$ | async as categories\"\n        >\n            <label for=\"categories\" class=\"mr-3\">{{'categories' | translate}}</label>\n            <div class=\"d-flex flex-column w-75\">\n                <ng-select class=\"w-100\"\n                           id=\"categories\"\n                           [items]=\"categories\"\n                           [placeholder]=\"'choose' | translate: {value: ('category' | translate: {ending: 'ю'}).toLowerCase()}\"\n                           [bindLabel]=\"'nameCategoryRus'\"\n                           [bindValue]=\"categoryForm.controls['category'].value\"\n                           (change)=\"onSelectedItem($event, 'category', categoryForm)\"\n                           [dropdownPosition]=\"'bottom'\"\n                           [formControlName]=\"'category'\"\n                           [ngClass]=\"{'is-invalid': isCategoryCreated && categoryForm.controls['category'].errors}\"\n                ></ng-select>\n                <app-error [form]=\"categoryForm\" [submitted]=\"isCategoryCreated\" [controlName]=\"'category'\"></app-error>\n            </div>\n        </div>\n\n        <div class=\"col-5 d-flex justify-content-start mb-2 align-items-center\"\n             *ngIf=\"categories$ | async as categories\"\n        >\n            <label for=\"time\" class=\"mr-3\">{{'time' | translate}}</label>\n            <div class=\"d-flex flex-column w-75\">\n                <input class=\"form-control w-100\"\n                       id=\"time\"\n                       type=\"time\"\n                       step=\"1\"\n                       [placeholder]=\"'enter' | translate: {name: ('time' | translate).toLowerCase()}\"\n                       [formControlName]=\"'time'\"\n                       [ngClass]=\"{'is-invalid': isCategoryCreated && categoryForm.controls['time'].errors}\"\n                />\n                <app-error [form]=\"categoryForm\" [submitted]=\"isCategoryCreated\" [controlName]=\"'time'\"></app-error>\n            </div>\n        </div>\n        <div class=\"col-2\">\n            <button class=\"btn btn-primary w-100\" (click)=\"setFormArrays('category')\">\n                <fa-icon [icon]=\"icons.add\" [size]=\"'lg'\"></fa-icon>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\" *ngIf=\"isUniqueCategory\">\n        <div class=\"col-12\">\n            <ngb-alert [type]=\"'warning'\" (close)=\"resetAlert('category')\">{{alertMessage('category') | translate}}</ngb-alert>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\" *ngIf=\"categoriesWithTime.length\">\n        <div class=\"col-12\">\n            <app-base-table [objects]=\"categoriesWithTime\"\n                            [actions]=\"actions\"\n                            (action)=\"handleAction($event, 'category')\"></app-base-table>\n        </div>\n    </div>\n\n    <div class=\"row mt-3 align-items-center\">\n        <div class=\"col-12\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"onShowForm('conditions')\"\n            >\n                <span *ngIf=\"!showConditionsForm\">{{'add' | translate}} {{('conditions' | translate).toLowerCase()}}</span>\n                <span *ngIf=\"showConditionsForm\">{{'hideForm' | translate}}</span>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"row flex-wrap mt-4\"\n         *ngIf=\"showConditionsForm && conditionsForm\"\n         [formGroup]=\"conditionsForm\"\n         [@showHide]\n    >\n        <div class=\"col-10 d-flex justify-content-start mb-2 align-items-center\"\n             *ngIf=\"conditions$ | async as conditions\"\n        >\n            <label for=\"categories\" class=\"mr-3\">{{'conditions' | translate}}</label>\n            <div class=\"d-flex flex-column w-100\">\n                <ng-select class=\"w-100\"\n                           id=\"conditions\"\n                           [items]=\"conditions\"\n                           [placeholder]=\"'choose' | translate: {value: ('conditions' | translate).toLowerCase()}\"\n                           [bindLabel]=\"'conditionsRus'\"\n                           [bindValue]=\"conditionsForm.controls['conditions'].value\"\n                           (change)=\"onSelectedItem($event, 'conditions', conditionsForm)\"\n                           [dropdownPosition]=\"'bottom'\"\n                           [formControlName]=\"'conditions'\"\n                           [ngClass]=\"{'is-invalid': conditionsCreated && conditionsForm.controls['conditions'].errors}\"\n                ></ng-select>\n                <app-error [form]=\"conditionsForm\" [submitted]=\"conditionsCreated\" [controlName]=\"'conditions'\"></app-error>\n            </div>\n        </div>\n\n        <div class=\"col-2\">\n            <button class=\"btn btn-primary w-100\" (click)=\"setFormArrays('conditions')\">\n                <fa-icon [icon]=\"icons.add\" [size]=\"'lg'\"></fa-icon>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\" *ngIf=\"isUniqueCondition\">\n        <div class=\"col-12\">\n            <ngb-alert [type]=\"'warning'\" (close)=\"resetAlert('conditions')\">{{alertMessage('conditions') | translate}}</ngb-alert>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\" *ngIf=\"selectedConditions.length\">\n        <div class=\"col-12\">\n            <app-base-table [objects]=\"selectedConditions\"\n                            [actions]=\"actions\"\n                            [pageType]=\"pageTypes.CONDITION\"\n                            (action)=\"handleAction($event, 'conditions')\"\n            ></app-base-table>\n        </div>\n    </div>\n\n    <div class=\"row mt-3 align-items-center\">\n        <div class=\"col-12\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"onShowForm('fails')\"\n            >\n                <span *ngIf=\"!showFailsForm\">{{'add' | translate}} {{('fails' | translate).toLowerCase()}}</span>\n                <span *ngIf=\"showFailsForm\">{{'hideForm' | translate}}</span>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"row flex-wrap mt-4\"\n         *ngIf=\"showFailsForm && failsForm\"\n         [formGroup]=\"failsForm\"\n         [@showHide]\n    >\n        <div class=\"col-10 d-flex justify-content-start mb-2 align-items-center\">\n            <div class=\"col-4 d-flex justify-content-start mb-2 align-items-center\">\n                <label for=\"nameFailsRus\" class=\"mr-3\">{{'nameFailsRus' | translate}}</label>\n                <div class=\"d-flex flex-column w-75\">\n                    <input class=\"form-control w-100\" id=\"nameFailsRus\"\n                           [placeholder]=\"'enter' | translate: {name: ('name' | translate).toLowerCase()}\"\n                           [formControlName]=\"'nameFailsRus'\"\n                           [ngClass]=\"{'is-invalid': isFailsCreated && failsForm.controls['nameFailsRus'].errors}\"\n                    />\n                    <app-error [form]=\"failsForm\" [submitted]=\"isFailsCreated\" [controlName]=\"'nameFailsRus'\"></app-error>\n                </div>\n            </div>\n            <div class=\"col-4 d-flex justify-content-start mb-2 align-items-center\">\n                <label for=\"nameFailsKz\" class=\"mr-3\">{{'nameFailsKz' | translate}}</label>\n                <div class=\"d-flex flex-column w-75\">\n                    <input class=\"form-control w-100\" id=\"nameFailsKz\"\n                           [placeholder]=\"'enter' | translate: {name: ('name' | translate).toLowerCase()}\"\n                           [formControlName]=\"'nameFailsKz'\"\n                           [ngClass]=\"{'is-invalid': isFailsCreated && failsForm.controls['nameFailsKz'].errors}\"\n                    />\n                    <app-error [form]=\"failsForm\" [submitted]=\"isFailsCreated\" [controlName]=\"'nameFailsKz'\"></app-error>\n                </div>\n            </div>\n            <div class=\"col-4 d-flex justify-content-start mb-2 align-items-center\">\n                <label for=\"minusPoint\" class=\"mr-3\">{{'minusPoint' | translate}}</label>\n                <div class=\"d-flex flex-column w-75\">\n                    <input class=\"form-control w-100\" type=\"number\" id=\"minusPoint\"\n                           [placeholder]=\"'enter' | translate: {name: ('minusPoint' | translate).toLowerCase()}\"\n                           [formControlName]=\"'minusPoint'\"\n                           [ngClass]=\"{'is-invalid': isFailsCreated && failsForm.controls['minusPoint'].errors}\"\n                    />\n                    <app-error [form]=\"failsForm\" [submitted]=\"isFailsCreated\" [controlName]=\"'minusPoint'\"></app-error>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-2\">\n            <button class=\"btn btn-primary w-100\" (click)=\"setFormArrays('fails')\">\n                <fa-icon [icon]=\"icons.add\" [size]=\"'lg'\"></fa-icon>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\" *ngIf=\"isUniqueFails\">\n        <div class=\"col-12\">\n            <ngb-alert [type]=\"'warning'\" (close)=\"resetAlert('fails')\">{{alertMessage('fails') | translate}}</ngb-alert>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\" *ngIf=\"failsList.length\">\n        <div class=\"col-12\">\n            <app-base-table [objects]=\"failsList\"\n                            [actions]=\"actions\"\n                            [pageType]=\"pageTypes.CONDITION\"\n                            (action)=\"handleAction($event, 'fails')\"\n            ></app-base-table>\n        </div>\n    </div>\n\n    <div class=\"form-group row mt-4\">\n        <div class=\"col-6\">\n            <button type=\"button\"\n                    class=\"btn btn-primary w-100\"\n                    (click)=\"send()\"\n            >{{'save' | translate}}</button>\n        </div>\n        <div class=\"col-6\">\n            <button type=\"button\"\n                    class=\"btn btn-secondary w-100\"\n                    (click)=\"onCancel()\"\n            >{{'cancel' | translate}}</button>\n        </div>\n    </div>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Store} from '@ngrx/store';\nimport {ActivatedRoute} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport * as moment from 'moment';\n\nimport {AbstractForm} from '@forms/abstract-form';\nimport {FormsService} from '@forms/services/forms.service';\nimport {ICondition, IStandardCategory, IStandardCategoryWithTime, IStandardFails} from '@models/interfaces/standard';\nimport {selectCategories, selectConditions} from '@quiz/selectors/selectors';\nimport {Icons} from '@models/constants/icons';\nimport {Animations} from '@models/constants/animations';\nimport {Actions} from '@models/constants/actions';\nimport {PageTypes} from '@models/constants/page-types';\nimport {FormTypes} from '@models/constants/form-types';\nimport {ISubject} from '@models/interfaces/quiz';\n\n@Component({\n    selector: 'app-standards-form',\n    templateUrl: './standards-form.component.html',\n    styleUrls: ['./standards-form.component.scss'],\n    animations: [Animations.showHide]\n})\nexport class StandardsFormComponent extends AbstractForm implements OnInit {\n\n    public categoriesWithTime: IStandardCategoryWithTime[] = [];\n    public selectedConditions: ICondition[] = [];\n    public failsList: IStandardFails[] = [];\n    public subject: ISubject;\n    public showCategoryForm = false;\n    public showConditionsForm = false;\n    public showFailsForm = false;\n    public isCategoryCreated = false;\n    public conditionsCreated = false;\n    public isFailsCreated = false;\n    public isUniqueCategory = false;\n    public isUniqueCondition = false;\n    public isUniqueFails = false;\n    public isInvalid: boolean;\n    public icons = Icons;\n    public categoryForm: FormGroup;\n    public conditionsForm: FormGroup;\n    public failsForm: FormGroup;\n    public actions: string[];\n    public pageTypes = PageTypes;\n\n    private categories$: Observable<IStandardCategory[]>;\n    private conditions$: Observable<ICondition[]>;\n    private subjectId: string;\n\n    constructor(protected formsService: FormsService,\n                protected translateService: TranslateService,\n                private fb: FormBuilder,\n                private store: Store<any>,\n                private route: ActivatedRoute) {\n        super(formsService, translateService);\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.REMOVE];\n        this.getRouteParams();\n        this.getCategories();\n        this.getConditions();\n        this.createForm();\n        this.categoriesWithTime = this.object.categoriesList || [];\n        this.selectedConditions = this.object.conditionsList || [];\n        this.failsList = this.object.failsList || [];\n\n    }\n\n    getRouteParams() {\n        this.subscriptions.sink = this.route.queryParams\n            .subscribe((params) => this.subjectId = params['subject']);\n    }\n\n    getCategories() {\n        this.categories$ = this.store.select(selectCategories);\n    }\n\n    getConditions() {\n        this.conditions$ = this.store.select(selectConditions);\n    }\n\n    createForm() {\n        if (this.object) {\n            this.form = this.fb.group({\n                info: this.fb.group({\n                    namedKz: [this.object.namedKz, [Validators.required]],\n                    namedRus: [this.object.namedKz, [Validators.required]],\n                    descriptionKz: [this.object.descriptionKz, [Validators.required]],\n                    descriptionRus: [this.object.descriptionRus, [Validators.required]],\n                }),\n                groups: [this.object.groups, [Validators.required]],\n                active: [this.object.active, [Validators.required]],\n            });\n        }\n    }\n\n    createCategoryForm() {\n        this.categoryForm = this.fb.group({\n            category: [null, [Validators.required]],\n            time: ['00:00:00', [Validators.required]]\n        });\n    }\n\n    createConditionsForm() {\n        this.conditionsForm = this.fb.group({\n            conditions: [null, [Validators.required]]\n        });\n    }\n\n    createFailsForm() {\n        this.failsForm = this.fb.group({\n            nameFailsRus: ['', [Validators.required]],\n            nameFailsKz: ['', [Validators.required]],\n            minusPoint: [0, [Validators.required]],\n        });\n    }\n\n    setFormArrays(formType: string) {\n        let formValue;\n        switch (formType) {\n            case FormTypes.CATEGORY:\n                this.isCategoryCreated = true;\n                if (this.categoryForm.invalid) {\n                    return;\n                }\n\n                formValue = this.categoryForm.value;\n                this.isUniqueCategory = this.checkUniqueState(this.categoriesWithTime, formValue.category, FormTypes.CATEGORY);\n                if (this.isUniqueCategory) {\n                    this.resetForm(this.categoryForm, FormTypes.CATEGORY);\n                    return;\n                }\n\n                this.categoriesWithTime.push(formValue);\n                this.resetForm(this.categoryForm, FormTypes.CATEGORY);\n                return;\n            case FormTypes.CONDITIONS:\n                this.conditionsCreated = true;\n                if (this.conditionsForm.invalid) {\n                    return;\n                }\n                formValue = this.conditionsForm.value;\n                this.isUniqueCondition = this.checkUniqueState(this.selectedConditions, formValue.conditions, FormTypes.CONDITIONS);\n                if (this.isUniqueCondition) {\n                    this.resetForm(this.conditionsForm, FormTypes.CONDITIONS);\n                    return;\n                }\n\n                this.selectedConditions.push(formValue.conditions);\n                this.resetForm(this.conditionsForm, FormTypes.CONDITIONS);\n                return;\n            case FormTypes.FAILS:\n                this.isFailsCreated = true;\n                if (this.failsForm.invalid) {\n                    return;\n                }\n                formValue = this.failsForm.value;\n                this.isUniqueFails = this.checkUniqueState(this.failsList, formValue, FormTypes.FAILS);\n                if (this.isUniqueFails) {\n                    this.resetForm(this.failsForm, FormTypes.FAILS);\n                    return;\n                }\n                this.failsList.push(formValue);\n                this.resetForm(this.failsForm, FormTypes.FAILS);\n                return;\n        }\n    }\n\n    checkUniqueState(array: any[], value: any, formType: string) {\n        return array.some((item: any) => {\n            switch (formType) {\n                case FormTypes.CATEGORY:\n                    return item.category.id === value.id;\n                case FormTypes.CONDITIONS:\n                    return item.id === value.id;\n                default:\n                    return item.nameFailsRus === value.nameFailsRus;\n            }\n        });\n    }\n\n    resetForm(form: FormGroup, formType: string) {\n        form.reset();\n        switch (formType) {\n            case FormTypes.CATEGORY:\n                this.isCategoryCreated = !this.isCategoryCreated;\n                return;\n            case FormTypes.CONDITIONS:\n                this.conditionsCreated = !this.conditionsCreated;\n                return;\n            case FormTypes.FAILS:\n                this.isFailsCreated = !this.isFailsCreated;\n                return;\n        }\n    }\n\n    resetAlert(formType: string) {\n        switch (formType) {\n            case FormTypes.CATEGORY:\n                this.isUniqueCategory = !this.isUniqueCategory;\n                return;\n            case FormTypes.CONDITIONS:\n                this.isUniqueCondition = !this.isUniqueCondition;\n                return;\n            default:\n                this.isUniqueFails = !this.isUniqueFails;\n                return;\n        }\n    }\n\n    onSelectedItem(value: any, control: string, form: FormGroup) {\n        form.controls[control].setValue(value);\n    }\n\n    alertMessage(formType: string) {\n        switch (formType) {\n            case FormTypes.CATEGORY:\n                return 'categoryAlreadyAdded';\n            case FormTypes.CONDITIONS:\n                return 'conditionAlreadyAdded';\n            default:\n                return 'failAlreadyAdded';\n        }\n    }\n\n    onShowForm(formType: string) {\n        switch (formType) {\n            case FormTypes.CATEGORY:\n                this.showCategoryForm = !this.showCategoryForm;\n                if (this.showCategoryForm) {\n                    this.createCategoryForm();\n                }\n                return;\n            case FormTypes.CONDITIONS:\n                this.showConditionsForm = !this.showConditionsForm;\n                if (this.showConditionsForm) {\n                    this.createConditionsForm();\n                }\n                return;\n            case FormTypes.FAILS:\n                this.showFailsForm = !this.showFailsForm;\n                if (this.showFailsForm) {\n                    this.createFailsForm();\n                }\n                return;\n        }\n    }\n\n    mapStandardsForm() {\n        return {\n            active: this.form.controls['active'].value,\n            groups: this.form.controls['groups'].value,\n            namedRus: this.form.controls['info']['controls'].namedRus.value,\n            namedKz: this.form.controls['info']['controls'].namedKz.value,\n            descriptionRus: this.form.controls['info']['controls'].descriptionRus.value,\n            descriptionKz: this.form.controls['info']['controls'].descriptionKz.value,\n            categoriesList: this.mapCategories(),\n            conditionsList: this.mapConditions(),\n            failsList: this.failsList,\n            subject: this.subjectId\n        };\n    }\n\n    mapCategories() {\n        return this.categoriesWithTime.map((item: IStandardCategoryWithTime) => this.getCategoryId(item));\n    }\n\n    getCategoryId(category: IStandardCategoryWithTime) {\n        return {\n            category: category.category.id,\n            time: moment(category.time, 'HH:mm:ss: A').diff(moment().startOf('day'), 'seconds')\n        };\n    }\n\n    mapConditions() {\n        return this.selectedConditions.map((condition: ICondition) => {\n            return {\n                conditionsRus: condition.conditionsRus,\n                conditionsKz: condition.conditionsKz,\n                coefficient: condition.coefficient,\n                units: condition.units.id\n            };\n        });\n    }\n\n    handleAction(event: { action: string, item: any }, formType: string) {\n        switch (formType) {\n            case FormTypes.CATEGORY:\n                if (event.action === Actions.REMOVE) {\n                    this.categoriesWithTime = this.filterSettings(this.categoriesWithTime, event.item);\n                }\n                return;\n            case FormTypes.CONDITIONS:\n                if (event.action === Actions.REMOVE) {\n                    this.selectedConditions = this.filterSettings(this.selectedConditions, event.item);\n                }\n                return;\n\n            case FormTypes.FAILS:\n                if (event.action === Actions.REMOVE) {\n                    this.failsList = this.filterSettings(this.failsList, event.item);\n                }\n                return;\n        }\n    }\n\n    filterSettings(array: any, item: any) {\n        return array.filter((el) => el !== item);\n    }\n\n    send() {\n        this.submitted = true;\n        if (this.form.invalid || !this.categoriesWithTime.length) {\n            this.isInvalid = true;\n            return;\n        }\n        this.isInvalid = false;\n        const standard = this.mapStandardsForm();\n        this.save.next(standard);\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {UiSwitchModule} from 'ngx-toggle-switch';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {NgbAlertModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {ChangePasswordFormComponent} from './components/change-password-form/change-password-form.component';\nimport {AddressFormPartComponent} from './components/address-form-part/address-form-part.component';\nimport {SharedModule} from '@shared/shared.module';\nimport {BaseFormComponent} from './components/base-form/base-form.component';\nimport {DisableControlDirective} from '@forms/directives/disable-control.directive';\nimport {DisqualificationComponent} from './components/disqualification/disqualification.component';\nimport {QuestionsFormComponent} from './components/questions-form/questions-form.component';\nimport {StandardsFormComponent} from './components/standards-form/standards-form.component';\nimport {TableModule} from '@table/table.module';\n\n@NgModule({\n    declarations: [\n        ChangePasswordFormComponent,\n        AddressFormPartComponent,\n        BaseFormComponent,\n        DisableControlDirective,\n        DisqualificationComponent,\n        QuestionsFormComponent,\n        StandardsFormComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedModule,\n        ReactiveFormsModule,\n        UiSwitchModule,\n        NgSelectModule,\n        FontAwesomeModule,\n        SharedModule,\n        TableModule,\n        NgbAlertModule,\n    ], exports: [\n        ChangePasswordFormComponent,\n        AddressFormPartComponent,\n        BaseFormComponent,\n        QuestionsFormComponent,\n        StandardsFormComponent\n    ],\n})\nexport class FormsModule {\n}\n","import {Injectable} from '@angular/core';\nimport {FormGroup, Validators} from '@angular/forms';\n\nconst BOOLEAN_TYPE = 'boolean';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormsService {\n\n    constructor() {\n    }\n\n    createArrayOfControls(group: FormGroup): string[] {\n        if (group) {\n            return Object.keys(group.controls).filter((key: string) => {\n                const abstractControls = group.get(key);\n                if (!(abstractControls instanceof FormGroup)) {\n                    return key;\n                }\n            });\n        }\n    }\n\n    generateValidationListByBean(validationBean, control) {\n        const validatorsArray: any[] = [];\n        for (const controlName in validationBean) {\n            if (validationBean.hasOwnProperty(controlName) && control === controlName) {\n                for (const key in validationBean[control]) {\n                    if (validationBean[control].hasOwnProperty(key)) {\n                        if (typeof validationBean[control][key] === BOOLEAN_TYPE) {\n                            validatorsArray.push(Validators[key]);\n                        } else {\n                            validatorsArray.push(Validators[key](validationBean[control][key]));\n                        }\n                    }\n                }\n            }\n        }\n        return validatorsArray.length ? Validators.compose([...validatorsArray]) : null;\n    }\n}\n","import {Action} from '@ngrx/store';\nimport {IJudge, IUserRegistration} from '@models/interfaces/human';\n\nexport enum ActionTypes {\n    LoadJudges = '[Judges Page] Load Judges',\n    LoadedJudges = '[Judges Page] Loaded Judges',\n    ErrorLoadedJudges = '[Judges Page] Error Loaded Judges',\n    CreateJudge = '[Judges Page] Create Judges',\n    DeleteJudge = '[Judges Page] Delete Judges',\n    UpdateJudge = '[Judges Page] Update Judges',\n    ChangePassword = '[Judges Page] Change Password',\n    RefreshJudges = '[Judges Page] Refresh Judges'\n}\n\nexport class LoadJudges implements Action {\n    readonly type = ActionTypes.LoadJudges;\n\n    constructor() {\n    }\n}\n\nexport class LoadedJudges implements Action {\n    readonly type = ActionTypes.LoadedJudges;\n\n    constructor(public payload: IJudge[]) {\n    }\n}\n\nexport class RefreshJudges implements Action {\n    readonly type = ActionTypes.RefreshJudges;\n\n    constructor(public payload: IJudge[]) {\n    }\n}\n\nexport class ErrorLoadedJudges implements Action {\n    readonly type = ActionTypes.ErrorLoadedJudges;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class ErrorChangedPassword implements Action {\n    readonly type = ActionTypes.ErrorLoadedJudges;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class CreateJudge implements Action {\n    readonly type = ActionTypes.CreateJudge;\n\n    constructor(public payload: IUserRegistration) {\n    }\n}\n\nexport class DeleteJudge implements Action {\n    readonly type = ActionTypes.DeleteJudge;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class UpdateJudge implements Action {\n    readonly type = ActionTypes.UpdateJudge;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class ChangePassword implements Action {\n    readonly type = ActionTypes.ChangePassword;\n\n    constructor(public payload: { data: any, newPassword: string }) {\n    }\n}\n\nexport type JudgesAction = LoadJudges | LoadedJudges | ErrorLoadedJudges |\n    CreateJudge | DeleteJudge | UpdateJudge | ChangePassword | ErrorChangedPassword |\n    RefreshJudges;\n","<div class=\"container\" [@EnterLeave]>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <h1>{{'judges' | translate | titlecase}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <button type=\"button\" class=\"btn btn-primary w-100\" (click)=\"add()\">{{'addJudge' | translate}}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <app-base-table class=\"main__table\" [objects]=\"judges$ | async\" [actions]=\"actions\"\n                            (action)=\"handleAction($event)\"></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ToastrService} from 'ngx-toastr';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {tap} from 'rxjs/internal/operators/tap';\n\nimport {IJudge, IUserRegistration} from '@models/interfaces/human';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {ModalService} from '@modal/services/modal.service';\nimport {ChangePasswordModalComponent} from '@modal/components/change-password-modal/change-password-modal.component';\nimport {Actions} from '@models/constants/actions';\nimport {Mocks} from '@models/mocks/persons.mock';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {selectJudgesData} from '@judges/selectors/judjes.selector';\nimport {ChangePassword, CreateJudge, DeleteJudge, LoadJudges, UpdateJudge} from '@judges/actions/judges.action';\nimport {JudgesService} from '@judges/service/judges.service';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {Animations} from '@models/constants/animations';\n\n@Component({\n    selector: 'app-judge',\n    templateUrl: './judges.component.html',\n    styleUrls: ['./judges.component.scss'],\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class JudgesComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n\n    public actions: string[];\n    public judges$: Observable<IJudge[]>;\n\n    constructor(private modalService: ModalService,\n                private toastrService: ToastrService,\n                private judgeService: JudgesService,\n                private store: Store<any>\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getJudges();\n        this.actions = [Actions.CHANGE, Actions.CHANGE_PASSWORD, Actions.REMOVE];\n    }\n\n    getJudges() {\n        this.judges$ = this.store.select(selectJudgesData)\n            .pipe(tap((judges: IJudge[]) => !judges && this.fetchJudges()));\n    }\n\n    fetchJudges() {\n        this.store.dispatch(new LoadJudges());\n    }\n\n    handleAction(event: { action: string, item: any }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openJudgeModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            default:\n                return this.openChangePasswordModal(event.item);\n        }\n    }\n\n    openJudgeModal(judge: IJudge, edit: boolean) {\n        const objectType = 'Judge';\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...judge}, edit, objectType},\n            (res) => {\n                if (res) {\n                    edit ? this.updateJudge(judge.id, res) : this.createJudge(res);\n                }\n            });\n    }\n\n    openChangePasswordModal(judge: IJudge) {\n        this.modalService.openModal(ChangePasswordModalComponent,\n            {centered: true},\n            null,\n            (res) => {\n                if (res) {\n                    const data = {data: judge, newPassword: res};\n                    this.changeJudgePassword(data);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: IJudge) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.userName, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.removeJudge(item);\n                }\n            });\n    }\n\n    add() {\n        this.openJudgeModal(Mocks.emptyJudge, false);\n    }\n\n    createJudge(credentials: IUserRegistration) {\n        this.store.dispatch(new CreateJudge(credentials));\n    }\n\n    removeJudge(judge: IJudge) {\n        this.store.dispatch(new DeleteJudge(judge.id));\n    }\n\n    updateJudge(judgeId: string, judge: IJudge) {\n        judge.id = judgeId;\n        this.store.dispatch(new UpdateJudge({judge, id: judgeId}));\n    }\n\n    changeJudgePassword(item: { data: IJudge, newPassword: string }) {\n        this.store.dispatch(new ChangePassword(item));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport * as fromJudge from '@judges/actions/judges.action';\nimport {catchError, map, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {IJudge} from '@models/interfaces/human';\nimport {of} from 'rxjs';\nimport {JudgesService} from '@judges/service/judges.service';\nimport {ToastrMessageType, ToastrTitle, ToastrUsersType} from '@models/constants/toastr';\nimport {MessageService} from '@services/message.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {Store} from '@ngrx/store';\nimport {judgeMapperFromServer} from '@mappers/judge.mapper';\nimport {selectJudgesData} from '@judges/selectors/judjes.selector';\n\n@Injectable()\nexport class JudgesEffects {\n\n\n    constructor(private actions$: Actions,\n                private judgeService: JudgesService,\n                private messageService: MessageService,\n                private toastrService: ToastrService,\n                private store: Store<any>) {\n    }\n\n    @Effect()\n    loadJudges$ = this.actions$\n        .pipe(\n            ofType(fromJudge.ActionTypes.LoadJudges),\n            mergeMap(() => this.judgeService.getJudges()\n                .pipe(\n                    map((judges: IJudge[]) => new fromJudge.LoadedJudges(judges)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromJudge.ErrorLoadedJudges(err));\n                    })\n                ))\n        );\n\n    @Effect()\n    refreshJudges$ = this.actions$\n        .pipe(\n            ofType(fromJudge.ActionTypes.RefreshJudges),\n            map((action: any) => new fromJudge.LoadedJudges(action.payload)),\n            catchError((err) => {\n                this.messageService.showPushNotification(err);\n                this.messageService.showToastrError(err);\n                return of(new fromJudge.ErrorLoadedJudges(err));\n            })\n        );\n\n    @Effect()\n    createJudge$ = this.actions$\n        .pipe(\n            ofType(fromJudge.ActionTypes.CreateJudge),\n            withLatestFrom(this.store.select(selectJudgesData)),\n            switchMap(([action, judges]: any[]) => this.judgeService.createJudge(action.payload)\n                .pipe(\n                    map((judge: IJudge) => {\n                        const message = {user: ToastrUsersType.JUDGE, type: ToastrMessageType.CREATE};\n                        if (judge) {\n                            const mappedJudge = judgeMapperFromServer(judge);\n                            judges.push(mappedJudge);\n                            this.messageService.showToastrSuccess(message);\n                        }\n                        return new fromJudge.RefreshJudges(judges);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromJudge.ErrorLoadedJudges(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    updateJudge$ = this.actions$\n        .pipe(\n            ofType(fromJudge.ActionTypes.UpdateJudge),\n            withLatestFrom(this.store.select(selectJudgesData)),\n            switchMap(([action, judges]: Array<any>) => {\n                    const {judge, id} = action.payload;\n                    return this.judgeService.updateJudge(judge, id)\n                        .pipe(\n                            map((updatedJudge: IJudge) => {\n                                const message = {user: ToastrUsersType.JUDGE, type: ToastrMessageType.UPDATE};\n                                if (updatedJudge) {\n                                    const mappedJudge = judgeMapperFromServer(updatedJudge);\n                                    judges = judges.map((item: IJudge) => item.id === mappedJudge.id ? mappedJudge : item);\n                                    this.messageService.showToastrSuccess(message);\n                                }\n                                return new fromJudge.RefreshJudges(judges);\n                            }),\n                            catchError((err) => {\n                                this.messageService.showPushNotification(err);\n                                this.messageService.showToastrError(err);\n                                return of(new fromJudge.ErrorLoadedJudges(err));\n                            })\n                        );\n                }\n            ),\n        );\n\n    @Effect()\n    deleteJudge$ = this.actions$\n        .pipe(\n            ofType(fromJudge.ActionTypes.DeleteJudge),\n            withLatestFrom(this.store.select(selectJudgesData)),\n            switchMap(([action, judges]: Array<any>) => {\n                return this.judgeService.deleteJudge(action.payload)\n                    .pipe(\n                        map(() => {\n                            const message = {user: ToastrUsersType.JUDGE, type: ToastrMessageType.REMOVE};\n                            judges = judges.filter((judge: IJudge) => judge.id !== action.payload);\n                            this.messageService.showToastrSuccess(message);\n                            return new fromJudge.RefreshJudges(judges);\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromJudge.ErrorLoadedJudges(err));\n                        }));\n            })\n        );\n\n\n    @Effect()\n    changePassword$ = this.actions$\n        .pipe(\n            ofType(fromJudge.ActionTypes.ChangePassword),\n            mergeMap((action: any) => this.judgeService.changeUserPassword(action.payload)\n                .pipe(\n                    map(() => {\n                        const successMessage = 'Congratulation. Password was changed successfully';\n                        this.toastrService.success(successMessage, ToastrTitle.SUCCESS);\n                        return new fromJudge.LoadJudges();\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromJudge.ErrorLoadedJudges(err));\n                    })\n                ))\n        );\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {SharedModule} from '@shared/shared.module';\nimport {TableModule} from '@table/table.module';\nimport {JudgesComponent} from './components/judges/judges.component';\nimport {MessageService} from '@services/message.service';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: JudgesComponent\n    }\n];\n\n@NgModule({\n    declarations: [JudgesComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        TableModule,\n        RouterModule.forChild(routes)\n    ],\n    providers: [MessageService],\n    exports: [RouterModule]\n})\nexport class JudgesModule {\n}\n","import {IJudge} from '@models/interfaces/human';\nimport {ActionTypes, JudgesAction} from '@judges/actions/judges.action';\n\nexport interface State {\n    judges: IJudge[];\n    errors?: any;\n}\n\nexport const initialState: State = {\n    judges: undefined,\n};\n\nexport function reducer(state: State = initialState, action: JudgesAction) {\n    switch (action.type) {\n        case ActionTypes.LoadedJudges:\n            return {...state, judges: action.payload};\n        case ActionTypes.ErrorLoadedJudges:\n            return {...state, errors: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromJudge from '@judges/reducers/judges.reducer';\n\nexport const selectJudges = createFeatureSelector<fromJudge.State>('judges');\n\nexport const selectJudgesData = createSelector(\n    selectJudges,\n    (state: fromJudge.State) => state.judges\n);\n\nexport const selectJudgesErrors = createSelector(\n    selectJudges,\n    (state: fromJudge.State) => state.errors\n);\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {IJudge, IUser, IUserRegistration} from '@models/interfaces/human';\nimport {environment} from '@environments/environment';\nimport {judgeMapperFromServer, judgeMapperToServer, judgeRegistrationMapperToServer} from '@mappers/judge.mapper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JudgesService {\n  judgeBaseUrl: string = environment.BASE_URL + '/api/users/' + environment.version;\n  constructor(private http: HttpClient) { }\n\n  getJudges(): Observable<IJudge[]> {\n    return this.http.get<IJudge[]>(this.judgeBaseUrl + '/all/judge')\n        .pipe(map((response) => response.map((item) => judgeMapperFromServer(item))));\n  }\n\n  createJudge(data: IUserRegistration): Observable<IJudge> {\n    const mappedData = judgeRegistrationMapperToServer(data);\n    return this.http.post<IJudge>(this.judgeBaseUrl + '/create', mappedData)\n        .pipe(map((response) => judgeMapperFromServer(response)));\n  }\n\n  deleteJudge(id: string): Observable<IJudge | IUser> {\n    return this.http.delete<IJudge | IUser>(this.judgeBaseUrl + `/${id}`)\n        .pipe((map((response) => response)));\n  }\n\n  updateJudge(judge: IJudge, id: string): Observable<IJudge> {\n    const mappedData = judgeMapperToServer(judge);\n    return this.http.put<IJudge>(this.judgeBaseUrl + `/${id}`, mappedData)\n        .pipe((map((response) => judgeMapperFromServer(response))));\n  }\n\n  changeUserPassword(data: {data: IJudge | IUser, newPassword: string}): Observable<IJudge | IUser> {\n    const body = {id: data.data.id, newPassword: data.newPassword};\n    return this.http.put(this.judgeBaseUrl + `/changepassword/${data.data.id}`, body)\n        .pipe(map((response) => judgeMapperFromServer(response)));\n  }\n}\n","<div class=\"container\" [@EnterLeave] *ngIf=\"form\">\n    <div class=\"row\">\n        <div class=\"col-12 d-flex justify-content-center\">\n            <div class=\"card p-4 d-flex align-items-center justify-content-center\">\n                <form [formGroup]=\"form\" class=\"login\">\n                    <div *ngIf=\"message\" class=\"alert alert-danger\">\n                        {{message}}\n                    </div>\n                    <ng-container *ngFor=\"let control of controls\">\n                        <div class=\"form-group login__form\">\n                            <label [attr.for]=\"control\" class=\"login__form__label\">{{control | translate}}</label>\n                            <input [type]=\"control\"\n                                   class=\"form-control login__form__field\"\n                                   [id]=\"control\"\n                                   [formControlName]=\"control\"\n                                   [placeholder]=\"('enter' | translate: {name: (control | translate).toLowerCase()})\"\n                                   [ngClass]=\"{'is-invalid': submitted && formControls[control].errors}\"\n                            >\n                            <app-error [submitted]=\"submitted\"\n                                       [controlName]=\"control\"\n                                       [form]=\"form\"\n                            ></app-error>\n                        </div>\n                    </ng-container>\n                    <button type=\"submit\"\n                            class=\"btn btn-primary login__btn\"\n                            (click)=\"login()\"\n                    >\n                        Login\n                    </button>\n                    <div class=\"guest\" (click)=\"loginAsGuest()\">\n                        <span>{{'loginAsGuest' | translate}}</span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {LoginService} from '../../services/login.service';\nimport {Router} from '@angular/router';\nimport {TokenService} from '@services/token.service';\nimport {ICreadentials} from '@models/interfaces/credentials';\nimport {FormsService} from '@forms/services/forms.service';\nimport {MessageService} from '@services/message.service';\nimport {Animations} from '@models/constants/animations';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {Store} from '@ngrx/store';\nimport {selectValidations} from '@shared/selectors/selectors';\nimport {LoadValidations} from '@shared/actions/actions';\nimport {DialogsService} from '@shared/services/dialogs.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class LoginComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public credentials: ICreadentials = {};\n    public submitted = false;\n    public message: string;\n    public controls: string[] = [];\n    public form: FormGroup;\n    public validations: any;\n    public log: any;\n\n    constructor(private loginService: LoginService,\n                private tokenService: TokenService,\n                private router: Router,\n                private formsService: FormsService,\n                private messageService: MessageService,\n                private store: Store<any>,\n                private fb: FormBuilder,\n                private dialogService: DialogsService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getValidation();\n    }\n\n    getValidation() {\n        this.subscriptions.sink = this.store.select(selectValidations)\n            .subscribe((validations) => {\n                if (validations) {\n                    this.validations = validations;\n                    this.createForm();\n                    this.detectFormChanges();\n                } else {\n                    this.fetchValidations();\n                }\n            });\n    }\n\n    fetchValidations() {\n        this.store.dispatch(new LoadValidations());\n    }\n\n    createForm() {\n        this.form = this.fb.group({\n            login: ['', this.setValidation('login')],\n            password: ['', this.setValidation('password')]\n        });\n        this.controls = this.createArrayOfControls(this.form);\n    }\n\n    setValidation(control: string) {\n        return this.formsService.generateValidationListByBean(this.validations.UserLoginBean, control);\n    }\n\n    detectFormChanges() {\n        this.subscriptions.sink = this.form.valueChanges.subscribe(object => this.credentials = object);\n    }\n\n    createArrayOfControls(group: FormGroup): string[] {\n        return this.formsService.createArrayOfControls(group);\n    }\n\n    login() {\n        this.submitted = true;\n        if (this.form.invalid) {\n            return;\n        }\n        this.loginService.login(this.credentials).subscribe(res => {\n            this.tokenService.setToken(res.token);\n            this.goToDashboard();\n        }, err => {\n            this.goToDashboard();\n            this.messageService.showToastrError(err);\n            this.messageService.showPushNotification(err);\n        });\n    }\n\n    loginAsGuest() {\n        this.loginService.login({login: 'guest', password: 'guest'}).subscribe(res => {\n            this.dialogService.hideLoader();\n            this.tokenService.setToken(res.token);\n            this.goToDashboard();\n        }, err => {\n            this.dialogService.hideLoader();\n            this.goToDashboard();\n            this.messageService.showToastrError(err);\n            this.messageService.showPushNotification(err);\n        });\n    }\n\n    get formControls() {\n        return this.form.controls;\n    }\n\n    goToDashboard() {\n        this.router.navigate(['/dashboard']);\n    }\n\n    clearMessage() {\n        setTimeout(() => this.message = '', 5000);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {LoginComponent} from './components/login/login.component';\nimport {LoginService} from './services/login.service';\nimport {SharedModule} from '@shared/shared.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginComponent\n    }\n];\n\n@NgModule({\n    declarations: [LoginComponent],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        SharedModule,\n        RouterModule.forChild(routes)\n    ],\n    providers: [\n        LoginService\n    ],\n    exports: [LoginComponent]\n})\nexport class LoginModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {TokenService} from '@services/token.service';\nimport {ICreadentials} from '@models/interfaces/credentials';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n\n    private options: object = {withCredentials: true};\n\n    constructor(private http: HttpClient,\n                private tokenService: TokenService,\n                private router: Router) {\n    }\n\n    public login(credentials: ICreadentials): Observable<any> {\n        return this.http.post(`${environment.BASE_URL}/api/auth/${environment.version}/login`, credentials)\n            .pipe(map((data) => data));\n    }\n\n    public logOut() {\n        return this.http.post(`${environment.BASE_URL}/api/auth/${environment.version}/logout`, null)\n            .subscribe(() => {\n                this.tokenService.removeToken();\n                localStorage.removeItem('role');\n                this.router.navigate(['/login']);\n            }, err => {\n                console.log(err);\n            });\n    }\n}\n","<div [ngStyle]=\"{'width': maxWidth}\" [@EnterLeave]>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">{{title | translate}}</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.close()\">\n            <fa-icon [icon]=\"icons.closeIcon\"></fa-icon>\n        </button>\n    </div>\n    <div class=\"modal-body\" *ngIf=\"objectType !== page.QUESTIONS && objectType !== page.STANDARDS\">\n        <app-base-form (cancel)=\"activeModal.close()\"\n                       (save)=\"activeModal.close($event)\"\n                       [object]=\"object\"\n                       [objectType]=\"objectType\"\n                       *ngIf=\"object\"\n        ></app-base-form>\n    </div>\n\n    <div class=\"modal-body\" *ngIf=\"objectType === page.QUESTIONS\">\n        <app-questions-form [object]=\"object\"\n                            [objectType]=\"objectType\"\n                            (cancel)=\"activeModal.close()\"\n                            (save)=\"activeModal.close($event)\"\n        ></app-questions-form>\n    </div>\n\n    <div class=\"modal-body\" *ngIf=\"objectType === page.STANDARDS\">\n        <app-standards-form [object]=\"object\"\n                            [objectType]=\"objectType\"\n                            (cancel)=\"activeModal.close()\"\n                            (save)=\"activeModal.close($event)\"\n        ></app-standards-form>\n    </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\n\nimport {Icons} from '@models/constants/icons';\nimport {selectCompetitorsMarks} from '@shared/selectors/selectors';\nimport {PageTypes} from '@models/constants/page-types';\nimport {Animations} from '@models/constants/animations';\n\n@Component({\n    selector: 'app-base-modal',\n    templateUrl: './base-modal.component.html',\n    styleUrls: ['./base-modal.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class BaseModalComponent implements OnInit {\n\n    public icons = Icons;\n    public object: any;\n    public edit: boolean;\n    public objectType: string;\n    public page = PageTypes;\n    public maxWidth: string;\n    public rows: string[] = [];\n    public selectedDate: any = new Date();\n\n    @Input() mobileTitle: string;\n    @Input() isOpened: boolean;\n    @Input() pageType: string;\n    @Input() disqualificationTypes: string[];\n    @Input() divisionLength: number;\n    @Input() isDatePicker: boolean;\n\n    @Input() set mobileObject(data: any) {\n        this.object = data;\n        this.getRows();\n    }\n\n    @Output() closeMobile: EventEmitter<boolean> = new EventEmitter();\n    @Output() submitMobile: EventEmitter<any> = new EventEmitter();\n    @Output() disqualificationReason: EventEmitter<string> = new EventEmitter();\n\n    constructor(public activeModal: NgbActiveModal) {\n    }\n\n    get title() {\n        return this.edit ? `edit${this.objectType}` : `add${this.objectType}`;\n    }\n\n    ngOnInit() {\n    }\n\n    getRows() {\n        if (this.object.statList) {\n            for (let i = 0; i < this.object.statList.length; i++) {\n                this.rows.push('30');\n            }\n        }\n    }\n\n    // Don't remove this method.\n    // It needs for mobile.\n    onDateChanged(value) {\n        this.selectedDate = value;\n    }\n\n    // Don't remove this method.\n    // It needs for mobile version.\n    onClose(value?: string) {\n        this.closeMobile.emit(this.isOpened);\n    }\n\n    // Don't remove this method.\n    // It needs for mobile version.\n    getDisqualificationReason(value) {\n        this.disqualificationReason.emit(value);\n    }\n\n    // Don't remove this method.\n    // It needs for mobile version.\n    onSubmit(object: any) {\n        this.submitMobile.emit(object);\n    }\n\n}\n","<div class=\"modal-header\" [@EnterLeave]>\n    <h4 class=\"modal-title\">{{'changePassword' | translate}}</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.close()\">\n        <fa-icon [icon]=\"icons.closeIcon\"></fa-icon>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <app-change-password-form (cancel)=\"activeModal.close()\"\n                              (save)=\"activeModal.close($event)\"></app-change-password-form>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport {Icons} from '@models/constants/icons';\nimport {Animations} from '@models/constants/animations';\n\n@Component({\n    selector: 'app-change-password-modal',\n    templateUrl: './change-password-modal.component.html',\n    styleUrls: ['./change-password-modal.component.scss'],\n    animations: [Animations.enterLeaveOpacity],\n})\nexport class ChangePasswordModalComponent implements OnInit {\n    public icons = Icons;\n    constructor(public activeModal: NgbActiveModal) {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","<p>\n  combat-list-modal-view works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-combat-list-modal-view',\n  templateUrl: './combat-list-modal-view.component.html',\n  styleUrls: ['./combat-list-modal-view.component.scss']\n})\nexport class CombatListModalViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"modal-header\" [@EnterLeave]>\n    <h4 class=\"modal-title\">{{message | translate: {value: itemName} }}</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.close()\">\n        <fa-icon [icon]=\"icons.closeIcon\"></fa-icon>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <button type=\"button\" class=\"btn btn-danger w-100\" (click)=\"activeModal.close('Yes')\">{{'yes' | translate}}</button>\n        </div>\n        <div class=\"col-6\">\n            <button type=\"button\" class=\"btn btn-primary w-100\" ngbAutofocus\n                    (click)=\"activeModal.close('no')\">{{'no' | translate}}</button>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport {Icons} from '@models/constants/icons';\nimport {Animations} from '@models/constants/animations';\n\n@Component({\n    selector: 'app-dialog-modal',\n    templateUrl: './dialog-modal.component.html',\n    styleUrls: ['./dialog-modal.component.scss'],\n    animations: [Animations.enterLeaveOpacity],\n})\nexport class DialogModalComponent implements OnInit {\n\n    public message: string;\n    public itemName: string;\n    public icons = Icons;\n\n    constructor(public activeModal: NgbActiveModal) {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<p>standard-conditions-modal works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-standard-conditions-modal',\n  templateUrl: './standard-conditions-modal.component.html',\n  styleUrls: ['./standard-conditions-modal.component.scss']\n})\nexport class StandardConditionsModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>standard-errors-modal works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-standard-errors-modal',\n  templateUrl: './standard-errors-modal.component.html',\n  styleUrls: ['./standard-errors-modal.component.scss']\n})\nexport class StandardErrorsModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  test-result-modal works!\n</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Animations} from '@models/constants/animations';\n\n@Component({\n    selector: 'app-test-result-modal',\n    templateUrl: './test-result-modal.component.html',\n    styleUrls: ['./test-result-modal.component.scss'],\n    animations: [Animations.enterLeaveOpacity],\n})\nexport class TestResultModalComponent implements OnInit {\n\n    public subjectName: string;\n    public testName: string;\n    public personName: string;\n    public rightAnswers: number;\n    public answersAmount: number;\n    public mark: number;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgbModalModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\n\nimport {SharedModule} from '@shared/shared.module';\nimport {DialogModalComponent} from './components/dialog-modal/dialog-modal.component';\nimport {ChangePasswordModalComponent} from './components/change-password-modal/change-password-modal.component';\nimport {FormsModule} from '@forms/forms.module';\nimport {BaseModalComponent} from './components/base-modal/base-modal.component';\nimport {TestResultModalComponent} from './components/test-result-modal/test-result-modal.component';\nimport {CombatListService} from '@combat-list/services/combat-list.service';\nimport {CombatListModalViewComponent} from './components/combat-list-modal-view/combat-list-modal-view.component';\nimport {CompetitorsModalViewComponent} from './components/competitors-modal-view/competitors-modal-view.component';\nimport {StandardErrorsModalComponent} from './components/standard-errors-modal/standard-errors-modal.component';\nimport {StandardConditionsModalComponent} from './components/standard-conditions-modal/standard-conditions-modal.component';\n\n@NgModule({\n    declarations: [\n        DialogModalComponent,\n        ChangePasswordModalComponent,\n        BaseModalComponent,\n        TestResultModalComponent,\n        CombatListModalViewComponent,\n        CompetitorsModalViewComponent,\n        StandardErrorsModalComponent,\n        StandardConditionsModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedModule,\n        NgbModalModule,\n        FormsModule,\n        FontAwesomeModule,\n    ],\n    entryComponents: [\n        DialogModalComponent,\n        ChangePasswordModalComponent,\n        BaseModalComponent,\n        TestResultModalComponent\n    ],\n    providers: [CombatListService]\n})\nexport class ModalModule {\n}\n","import {Injectable, ViewContainerRef} from '@angular/core';\nimport {NgbModal, NgbModalOptions, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {from, Observable} from 'rxjs';\nimport {IDatePickerOptions} from '@models/interfaces/shared';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ModalService {\n\n    private modal: NgbModalRef;\n\n    constructor(private ngbModal: NgbModal) {\n    }\n\n    public openModal(content: any, options?: NgbModalOptions, componentInstance?: object, callback?: (any) => void) {\n        this.modal = this.ngbModal.open(content, options);\n        if (componentInstance) {\n            for (const prop of Object.keys(componentInstance)) {\n                this.modal.componentInstance[prop] = componentInstance[prop];\n            }\n        }\n        if (callback) {\n            this.modal.result.then(callback, () => null);\n        }\n    }\n\n    public closeModal() {\n        if (this.modal) {\n            this.modal.close();\n        }\n    }\n\n    initModal(component: any, options: any): Observable<any> {\n        return from([]);\n    }\n\n    getModalDialogOptions(options: { vcRef: ViewContainerRef, context, fullscreen }): any {\n        return {\n            viewContainerRef: options.vcRef,\n            context: options.context,\n            fullscreen: options.fullscreen,\n            animated: true\n        };\n    }\n\n    getModalParams() {\n        return;\n    }\n\n    onCloseModal(value: any) {\n        return value;\n    }\n\n    initDateModal(options): Observable<any> {\n        return from([]);\n    }\n\n    getDateModalOptions(options: IDatePickerOptions, event) {\n        return {\n            date: options.date,\n            dateFormat: options.dateFormat,\n            okButtonText: options.okButtonText,\n            cancelButtonText: options.cancelButtonText,\n            title: options.title,\n            locale: options.locale\n        };\n    }\n}\n","import {Action} from '@ngrx/store';\n\nimport {IPerson} from '@models/interfaces/human';\n\nexport interface IPayload {\n    person: IPerson;\n    page: IPage;\n}\n\nexport interface IPage {\n    pageSize: number;\n    pageNumber: number;\n}\n\nexport enum ActionTypes {\n    LoadPersons = '[Persons Page] Load Persons',\n    LoadedPersons = '[Persons Page] Persons Loaded Success',\n    LoadPersonsPerPage = '[Persons Page] Load Persons Per Page',\n    LoadedPersonsPerPage = '[Persons Page] Persons Per Page Loaded Success',\n    ErrorLoadedPersons = '[Persons Page] Persons Loaded Error',\n    CreatePerson = '[Persons Page] Create Person',\n    DeletePerson = '[Persons Page] Delete Person',\n    UpdatePerson = '[Persons Page] Update Person',\n    LoadPersonsCount = '[Persons Page] Loaded Persons Count',\n    LoadedPersonsCount = '[Persons Page] Persons Count Loaded Success',\n    LoadPersonsByDivision = '[Persons Page] Load Persons By Division',\n    LoadedPersonsByDivision = '[Persons Page] Loaded Persons By Division',\n    LoadPersonsByDivisionPerPage = '[Persons Page] Load Persons By Division Per Page'\n}\n\nexport class LoadPersons implements Action {\n    readonly type = ActionTypes.LoadPersons;\n}\n\nexport class LoadedPersons implements Action {\n    readonly type = ActionTypes.LoadedPersons;\n\n    constructor(public payload: IPerson[]) {\n    }\n}\n\nexport class LoadPersonsPerPage implements Action {\n    readonly type = ActionTypes.LoadPersonsPerPage;\n\n    constructor(public payload: IPage) {\n    }\n}\n\nexport class LoadedPersonsPerPage implements Action {\n    readonly type = ActionTypes.LoadedPersonsPerPage;\n\n    constructor(public payload: IPerson[]) {\n    }\n}\n\nexport class ErrorLoadedPersons implements Action {\n    readonly type = ActionTypes.ErrorLoadedPersons;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class CreatePerson implements Action {\n    readonly type = ActionTypes.CreatePerson;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport class DeletePerson implements Action {\n    readonly type = ActionTypes.DeletePerson;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport class UpdatePerson implements Action {\n    readonly type = ActionTypes.UpdatePerson;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport class LoadPersonsCount implements Action {\n    readonly type = ActionTypes.LoadPersonsCount;\n\n    constructor() {\n    }\n}\n\nexport class LoadedPersonsCount implements Action {\n    readonly type = ActionTypes.LoadedPersonsCount;\n\n    constructor(public payload: number) {\n    }\n}\n\nexport class LoadPersonsByDivision implements Action {\n    readonly type = ActionTypes.LoadPersonsByDivision;\n\n    constructor(public payload: string | number) {\n    }\n}\n\nexport class LoadedPersonsByDivision implements Action {\n    readonly type = ActionTypes.LoadedPersonsByDivision;\n\n    constructor(public payload: IPerson[]) {\n    }\n}\n\nexport class LoadPersonsByDivisionPerPage implements Action {\n    readonly type = ActionTypes.LoadPersonsByDivisionPerPage;\n\n    constructor(public payload: {page: IPage, divisionId: string}) {\n    }\n}\n\nexport type PersonActions =\n    LoadPersonsPerPage &\n    LoadedPersonsPerPage &\n    ErrorLoadedPersons &\n    CreatePerson &\n    DeletePerson &\n    UpdatePerson &\n    LoadPersonsCount &\n    LoadedPersonsCount &\n    LoadPersons &\n    LoadedPersons &\n    LoadPersonsByDivision &\n    LoadedPersonsByDivision &\n    LoadPersonsByDivisionPerPage;\n","<div class=\"container pb-4\" *ngIf=\"divisions$ | async\">\n    <div class=\"row mt-3\">\n        <div class=\"col-5\">\n            <h1>{{'persons' | translate | titlecase}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3 align-items-center\">\n        <div class=\"col-4\">\n            <button class=\"btn btn-primary w-100 \" (click)=\"add()\">{{'addPerson' | translate}}</button>\n        </div>\n        <div class=\"col-4\">\n            <ng-select [id]=\"'divisions'\"\n                       [items]=\"divisions\"\n                       [placeholder]=\"'choose' | translate: {value: ('division' | translate).toLowerCase()}\"\n                       (change)=\"onSelectItem($event)\"\n                       [bindLabel]=\"'name'\"\n                       #ngSelect\n            ></ng-select>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"persons$ | async as persons\">\n        <div class=\"col\" *ngIf=\"personsCount$ | async as personsCount\">\n            <app-base-table class=\"main__table\"\n                            [objects]=\"persons\"\n                            [actions]=\"actions\"\n                            (action)=\"handleAction($event)\"\n                            (pages)=\"getPersonsPerPage($event)\"\n                            [paginationLength]=\"!selectedItem || selectedItem === divisions[0] ? personsCount : persons.length\"\n                            [page]=\"page\"\n                            [defaultPageSize]=\"size\"\n                            [pageType]=\"pageTypes.PERSON\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\nimport {select, Store} from '@ngrx/store';\nimport {tap} from 'rxjs/internal/operators/tap';\n\nimport {IPerson} from '@models/interfaces/human';\nimport {Actions} from '@models/constants/actions';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {ModalService} from '@modal/services/modal.service';\nimport {Mocks} from '@models/mocks/persons.mock';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {PersonService} from '@persons/service/person.service';\nimport {\n    CreatePerson,\n    DeletePerson,\n    LoadPersonsByDivisionPerPage,\n    LoadPersonsCount,\n    LoadPersonsPerPage,\n    UpdatePerson\n} from '@persons/actions/actions';\nimport {selectPersonDataPerPage, selectPersonsCount} from '@persons/selectors/selectors';\nimport {PageTypes} from '@models/constants/page-types';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {LoadDivisions} from '@divisions/actions/actions';\nimport {IDivision} from '@models/interfaces/division';\nimport {selectDivisionsData} from '@divisions/selectors/selectors';\nimport {NgSelectComponent} from '@ng-select/ng-select';\n\n@Component({\n    selector: 'app-persons',\n    templateUrl: './persons.component.html',\n    styleUrls: ['./persons.component.scss']\n})\nexport class PersonsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public actions: string[] = [];\n    public page: number;\n    public size: number;\n    public personsCount$: Observable<number>;\n    public persons$: Observable<IPerson[]>;\n    public pageTypes = PageTypes;\n    public divisions$: Observable<IDivision[]>;\n    public divisions: IDivision[];\n    public selectedItem: IDivision;\n\n    @ViewChild(NgSelectComponent, {static: false}) ngSelect: NgSelectComponent;\n\n    constructor(private modalService: ModalService,\n                private personService: PersonService,\n                private router: Router,\n                private route: ActivatedRoute,\n                private store: Store<any>\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getRouteParams();\n        this.getPersonsCount();\n        this.getDivisions();\n        this.actions = [Actions.CHANGE, Actions.REMOVE];\n    }\n\n    handleAction(event: { action: string, item: any }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openPersonModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            default:\n                return;\n        }\n    }\n\n    add() {\n        this.openPersonModal(Mocks.emptyPerson(this.divisions[0]), false);\n    }\n\n    openPersonModal(person: IPerson, edit: boolean) {\n        const objectType = 'Person';\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...person}, edit, objectType},\n            (res) => {\n                if (res) {\n                    if (edit) {\n                        this.updateList(person, res);\n                    } else {\n                        this.addPerson(res);\n                    }\n                    const item = this.ngSelect.itemsList.findByLabel(res.division.name);\n                    this.ngSelect.select(item);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: IPerson) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.userName, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.removeFromList(item);\n                }\n            });\n    }\n\n    getRouteParams() {\n        this.subscriptions.sink = this.route.queryParamMap\n            .pipe(map((params) => {\n                this.page = Number(params.get('page'));\n                this.size = Number(params.get('size'));\n            })).subscribe(() =>\n                this.getPersonsPerPage({pageNumber: this.page || 1, pageSize: this.size || 10}));\n    }\n\n    getPersonsPerPage(data: any) {\n        this.fetchPersonsPerPage(data);\n        this.persons$ = this.store.pipe(select(selectPersonDataPerPage));\n    }\n\n    fetchPersonsPerPage(data) {\n        this.store.dispatch(new LoadPersonsPerPage(data));\n    }\n\n    getPersonsCount() {\n        this.personsCount$ = this.store.select(selectPersonsCount)\n            .pipe(tap((count: number) => !count && this.fetchPersonsCount()));\n    }\n\n    fetchPersonsCount() {\n        this.store.dispatch(new LoadPersonsCount());\n    }\n\n    getDivisions() {\n        this.divisions$ = this.store.pipe(\n            select(selectDivisionsData),\n            tap((divisions: IDivision[]) => {\n                if (!divisions) {\n                    return  this.fetchDivisions();\n                }\n                this.divisions = divisions;\n            })\n        );\n    }\n\n    fetchDivisions() {\n        this.store.dispatch(new LoadDivisions());\n    }\n\n    addPerson(person: IPerson) {\n        const page = {pageNumber: this.page, pageSize: this.size};\n        this.store.dispatch(new CreatePerson({person, page}));\n\n    }\n\n    removeFromList(person: IPerson) {\n        const page = {pageNumber: this.page, pageSize: this.size};\n        this.store.dispatch(new DeletePerson({person, page}));\n    }\n\n    updateList(item: IPerson, updatedData: IPerson) {\n        const page = {pageNumber: this.page, pageSize: this.size};\n        updatedData.id = item.id;\n        this.store.dispatch(new UpdatePerson({person: updatedData, page}));\n    }\n\n    onSelectItem(value) {\n        const page = {pageNumber: this.page, pageSize: this.size};\n        this.selectedItem = value;\n        if (!value) {\n           return this.store.dispatch(new LoadPersonsPerPage(page));\n        }\n        this.store.dispatch(new LoadPersonsByDivisionPerPage({page, divisionId: value.id}));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {Store} from '@ngrx/store';\n\nimport * as fromPerson from '@persons/actions/actions';\nimport {LoadedPersonsCount} from '@persons/actions/actions';\nimport {PersonService} from '@persons/service/person.service';\nimport {IPerson} from '@models/interfaces/human';\nimport {MessageService} from '@services/message.service';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\nimport {selectPersonData} from '@persons/selectors/selectors';\n\n@Injectable()\nexport class PersonEffects {\n\n    constructor(\n        private actions$: Actions,\n        private personService: PersonService,\n        private messageService: MessageService,\n        private store: Store<any>\n    ) {\n    }\n\n    @Effect()\n    loadPersons$ = this.actions$\n        .pipe(\n            ofType(fromPerson.ActionTypes.LoadPersons),\n            mergeMap(() => this.personService.getPersons()\n                .pipe(\n                    map((persons: IPerson[]) => new fromPerson.LoadedPersons(persons)),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromPerson.ErrorLoadedPersons(err));\n                    })\n                ))\n        );\n\n    @Effect()\n    loadPersonsPerPage$ = this.actions$\n        .pipe(\n            ofType(fromPerson.ActionTypes.LoadPersonsPerPage),\n            mergeMap((action: any) => {\n                const {pageNumber, pageSize} = action.payload;\n                this.personService.personNavigate({pageNumber, pageSize});\n                return this.personService.getPersonsPerPage(pageNumber, pageSize)\n                    .pipe(\n                        switchMap((persons: IPerson[]) => [\n                            new fromPerson.LoadedPersonsPerPage(persons),\n                        ]),\n                        catchError((err) => {\n                            this.messageService.showToastrError(err);\n                            this.messageService.showPushNotification(err);\n                            return of(new fromPerson.ErrorLoadedPersons(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    loadPersonsPerPageByDivision$ = this.actions$\n        .pipe(\n            ofType(fromPerson.ActionTypes.LoadPersonsByDivisionPerPage),\n            mergeMap((action: any) => {\n                const {pageNumber, pageSize} = action.payload.page;\n                const {divisionId} = action.payload;\n                this.personService.personNavigate({pageNumber, pageSize});\n                return this.personService.getPersonsPerPageByDivision(pageNumber, pageSize, divisionId)\n                    .pipe(\n                        switchMap((persons: IPerson[]) => [\n                            new fromPerson.LoadedPersonsPerPage(persons),\n                        ]),\n                        catchError((err) => {\n                            this.messageService.showToastrError(err);\n                            this.messageService.showPushNotification(err);\n                            return of(new fromPerson.ErrorLoadedPersons(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    createPerson$ = this.actions$\n        .pipe(\n            ofType(fromPerson.ActionTypes.CreatePerson),\n            mergeMap((action: any) => {\n                const {person} = action.payload;\n                return this.personService.createPerson(person)\n                    .pipe(\n                        switchMap((createdPerson: IPerson) => {\n                            const message = {user: ToastrUsersType.PERSON, type: ToastrMessageType.CREATE};\n                            if (createdPerson) {\n                                this.messageService.showToastrSuccess(message);\n                            }\n                            return [new fromPerson.LoadPersonsCount()];\n                        }),\n                        catchError((err) => {\n                            this.messageService.showToastrError(err);\n                            this.messageService.showPushNotification(err);\n                            return of(new fromPerson.ErrorLoadedPersons(err));\n                        }));\n            })\n        );\n\n    @Effect()\n    deletePerson$ = this.actions$\n        .pipe(\n            ofType(fromPerson.ActionTypes.DeletePerson),\n            mergeMap((action: any) => {\n                const {page, person} = action.payload;\n                return this.personService.deletePerson(person.id)\n                    .pipe(\n                        switchMap((data: IPerson) => {\n                            const message = {user: ToastrUsersType.PERSON, type: ToastrMessageType.REMOVE};\n                            if (data) {\n                                this.messageService.showToastrSuccess(message);\n                            }\n                            return [new fromPerson.LoadPersonsPerPage(page), new fromPerson.LoadPersonsCount()];\n                        }),\n                        catchError((err) => {\n                            this.messageService.showToastrError(err);\n                            this.messageService.showPushNotification(err);\n                            return of(new fromPerson.ErrorLoadedPersons(err));\n                        }));\n            })\n        );\n\n    @Effect()\n    updatePerson$ = this.actions$\n        .pipe(\n            ofType(fromPerson.ActionTypes.UpdatePerson),\n            mergeMap((action: any) => {\n                const {person} = action.payload;\n                return this.personService.updatePerson(person, person.id)\n                    .pipe(\n                        switchMap((data: IPerson) => {\n                            const message = {user: ToastrUsersType.PERSON, type: ToastrMessageType.UPDATE};\n                            if (data) {\n                                this.messageService.showToastrSuccess(message);\n                            }\n                            return [new fromPerson.LoadPersonsCount()];\n                        }),\n                        catchError((err) => {\n                            this.messageService.showToastrError(err);\n                            this.messageService.showPushNotification(err);\n                            return of(new fromPerson.ErrorLoadedPersons(err));\n                        }));\n            }),\n        );\n\n    @Effect()\n    getPersonsCount$ = this.actions$\n        .pipe(\n            ofType(fromPerson.ActionTypes.LoadPersonsCount),\n            mergeMap(() => this.personService.getPersonsCount()\n                .pipe(\n                    map((personsCount: number) => new LoadedPersonsCount(Number(personsCount))),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromPerson.ErrorLoadedPersons(err));\n                    })\n                ))\n        );\n\n    @Effect()\n    loadPersonsByDivision$ = this.actions$\n        .pipe(\n            ofType(fromPerson.ActionTypes.LoadPersonsByDivision),\n            withLatestFrom(this.store.select(selectPersonData)),\n            map(([action, persons]: any[]) => {\n                const personsByDivision = persons.filter((person: IPerson) => {\n                    if (person.division && person.division.id === action.payload) {\n                        return person;\n                    }\n                });\n                return new fromPerson.LoadedPersonsByDivision(personsByDivision);\n            }),\n            catchError((err) => {\n                this.messageService.showToastrError(err);\n                this.messageService.showPushNotification(err);\n                return of(new fromPerson.ErrorLoadedPersons(err));\n            })\n        );\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {PersonsComponent} from './components/persons/persons.component';\nimport {SharedModule} from '@shared/shared.module';\nimport {TableModule} from '@table/table.module';\nimport {PersonService} from '@persons/service/person.service';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {FormsModule} from '@angular/forms';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PersonsComponent\n    }\n];\n\n@NgModule({\n    declarations: [PersonsComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        TableModule,\n        RouterModule.forChild(routes),\n        NgSelectModule,\n        FormsModule\n    ],\n    providers: [PersonService],\n    exports: [RouterModule]\n})\nexport class PersonsModule {\n}\n","import {IPerson} from '@models/interfaces/human';\nimport {ActionTypes, PersonActions} from '@persons/actions/actions';\n\nexport interface State {\n    persons: IPerson[];\n    personsPerPage: IPerson[];\n    personsCount: number;\n    personsByDivision: IPerson[];\n    errors?: any;\n}\n\nexport const initialState: State = {\n    persons: undefined,\n    personsPerPage: undefined,\n    personsByDivision: [],\n    personsCount: null\n};\n\nexport function reducer (state: State = initialState, action: PersonActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedPersons:\n            return {...state, persons: action.payload};\n        case ActionTypes.LoadedPersonsPerPage:\n            return {...state, personsPerPage: action.payload};\n        case ActionTypes.LoadedPersonsByDivision:\n            return {...state, personsByDivision: action.payload};\n        case ActionTypes.ErrorLoadedPersons:\n            return {...state, errors: action.payload};\n        case ActionTypes.LoadedPersonsCount:\n            return {...state, personsCount: action.payload};\n        default:\n            return state;\n    }\n}\n\n\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromPerson from '@persons/reducers/reducer';\n\n\nexport const selectPerson = createFeatureSelector<fromPerson.State>('persons');\n\nexport const selectPersonData = createSelector(\n    selectPerson,\n    (state: fromPerson.State) => state.persons\n);\n\nexport const selectPersonDataPerPage = createSelector(\n    selectPerson,\n    (state: fromPerson.State) => state.personsPerPage\n);\n\nexport const selectPersonErrors = createSelector(\n    selectPerson,\n    (state: fromPerson.State) => state.errors\n);\n\nexport const selectPersonsCount = createSelector(\n    selectPerson,\n    (state: fromPerson.State) => state.personsCount\n);\n\nexport const selectPersonsByDivision = createSelector(\n    selectPerson,\n    (state: fromPerson.State) => state.personsByDivision\n);\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {IPerson} from '@models/interfaces/human';\nimport {environment} from '@environments/environment';\nimport {personMapperFromServer, personMapperToServer} from '@mappers/person.mapper';\nimport {IPage} from '@persons/actions/actions';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PersonService {\n    basePersonUrl: string = environment.BASE_URL + '/api/persons/' + environment.version;\n\n    constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute) {\n    }\n\n    getPersons(): Observable<IPerson[]> {\n        return this.http.get<IPerson[]>(this.basePersonUrl + '/all')\n            .pipe(map((response) => response.map((item) => personMapperFromServer(item))));\n    }\n\n    getPersonsPerPage(pageNumber: number, pageSize: number): Observable<IPerson[]> {\n        return this.http.get<IPerson[]>(this.basePersonUrl + `/all/${pageNumber}/${pageSize}`)\n            .pipe(map((response) => response.map((item) => personMapperFromServer(item))));\n    }\n\n    getPersonsPerPageByDivision(pageNumber: number, pageSize: number, divisionId: string): Observable<IPerson[]> {\n        return this.http.get<IPerson[]>(this.basePersonUrl + `/all/${divisionId}/${pageNumber}/${pageSize}`)\n            .pipe(map((response) => response.map((item) => personMapperFromServer(item))));\n    }\n\n    getPersonsCount(): Observable<Object> {\n        return this.http.get(this.basePersonUrl + '/count')\n            .pipe(map((response) => response));\n    }\n\n    createPerson(data: IPerson): Observable<IPerson> {\n        const mappedData = personMapperToServer(data);\n        return this.http.post<IPerson>(this.basePersonUrl + '/create', mappedData)\n            .pipe(map((response) => personMapperFromServer(response)));\n    }\n\n    updatePerson(data: IPerson, id: string): Observable<IPerson> {\n        const mappedData = personMapperToServer(data);\n        return this.http.put<IPerson>(this.basePersonUrl + `/${id}`, mappedData)\n            .pipe((map((response) => personMapperFromServer(response))));\n    }\n\n    deletePerson(id: string): Observable<IPerson> {\n        return this.http.delete<IPerson>(this.basePersonUrl + `/${id}`)\n            .pipe(map((response) => response));\n    }\n\n    personNavigate(data: IPage) {\n        this.router.navigate([], {\n            queryParams: {\n                page: data.pageNumber,\n                size: data.pageSize,\n            },\n            queryParamsHandling: 'merge',\n            relativeTo: this.route\n        });\n    }\n}\n","import {Action} from '@ngrx/store';\nimport {IQuestion, ISubject, ITest} from '@models/interfaces/quiz';\nimport {ICondition, IConditionUnits, IStandard, IStandardCategory} from '@models/interfaces/standard';\nimport {IPerson} from '@models/interfaces/human';\n\nexport enum ActionTypes {\n    LoadSubjects = '[Subject Page] Load Subjects',\n    LoadAll = '[Subject Page] Load All',\n    LoadedSubjects = '[Subject Page] Loaded Subjects',\n    LoadTestsBySubject = '[Tests Page] Load Tests By Subject',\n    LoadedTestsBySubject = '[Tests Page] Loaded Tests By Subject',\n    CreateTestForSubject = '[Tests Page] Create Test For Subject',\n    UpdateTest = '[Tests Page] Update Test',\n    DeleteTestFromSubject = '[Tests Page] Delete Test From Subject',\n    GetQuestionsByTest = '[Questions Page] Get Questions By Test',\n    SetQuestionsByTest = '[Questions Page] Set Questions By Test',\n    CreateQuestionForTest = '[Questions Page] Create Question For Test',\n    DeleteQuestionFromTest = '[Questions Page] Delete Question From Test',\n    UpdateQuestion = '[Questions Page] Update Question',\n    LoadQuestionById = '[Questions Page] Load Question By Id',\n    LoadedQuestionById = '[Questions Page] Loaded Question By Id',\n    RefreshTests = '[Tests Page] Refresh Tests',\n    RefreshQuestions = '[Questions Page] Refresh Questions',\n    CreateCategory = '[Categories Page] Create Category',\n    UpdateCategory = '[Categories Page] Update Category',\n    DeleteCategory = '[Categories Page] Delete Category',\n    LoadCategories = '[Categories Page] Load Categories',\n    LoadedCategories = '[Categories Page] Loaded Categories',\n    RefreshCategories = '[Categories Page] Refresh Categories',\n    LoadConditions = '[Conditions Page] Load Conditions',\n    LoadedConditions = '[Conditions Page] Loaded Conditions',\n    CreateCondition = '[Conditions Page] Create Condition',\n    UpdateCondition = '[Conditions Page] Update Condition',\n    DeleteCondition = '[Conditions Page] Delete Condition',\n    RefreshConditions = '[Conditions Page] Refresh Conditions',\n    LoadUnits = '[Units Page] Load Units',\n    LoadedUnits = '[Units Page] Loaded Units',\n    RefreshUnits = '[Units Page] Refresh Units',\n    CreateUnit = '[Units Page] Create Unit',\n    DeleteUnit = '[Units Page] Delete Unit',\n    LoadStandards = '[Standards Page] Load Standards',\n    LoadedStandards = '[Standards Page] Loaded Standards',\n    CreateStandards = '[Standards Page] Create Standards',\n    UpdateStandards = '[Standards Page] Update Standards',\n    DeleteStandards = '[Standards Page] Delete Standards',\n    RefreshStandards = '[Standards Page] Refresh Standards',\n    LoadCurrentStandard = '[Standards Page] Load Current Standard',\n    LoadedCurrentStandard = '[Standards Page] Loaded Current Standard',\n    QuizErrors = '[Quiz] Quiz Errors'\n}\n\nexport interface ICurrentStandard {\n    standard: IStandard;\n    standardMembers: IPerson[];\n    percentOfMembers: number;\n}\n\nexport class LoadSubjects implements Action {\n    readonly type = ActionTypes.LoadSubjects;\n}\n\nexport class LoadAll implements Action {\n    readonly type = ActionTypes.LoadAll;\n}\n\nexport class LoadedSubjects implements Action {\n    readonly type = ActionTypes.LoadedSubjects;\n\n    constructor(public payload: ISubject[]) {\n    }\n}\n\nexport class LoadTestsBySubject implements Action {\n    readonly type = ActionTypes.LoadTestsBySubject;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class RefreshTests implements Action {\n    readonly type = ActionTypes.RefreshTests;\n\n    constructor(public payload: ITest[]) {\n    }\n}\n\nexport class LoadedTestsBySubject implements Action {\n    readonly type = ActionTypes.LoadedTestsBySubject;\n\n    constructor(public payload: ITest[]) {\n    }\n}\n\nexport class QuizErrors implements Action {\n    readonly type = ActionTypes.QuizErrors;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class CreateTestForSubject implements Action {\n    readonly type = ActionTypes.CreateTestForSubject;\n\n    constructor(public payload: ITest) {\n    }\n}\n\nexport class UpdateTest implements Action {\n    readonly type = ActionTypes.UpdateTest;\n\n    constructor(public payload: { testId: string, test: ITest }) {\n    }\n}\n\nexport class DeleteTestFromSubject implements Action {\n    readonly type = ActionTypes.DeleteTestFromSubject;\n\n    constructor(public payload: { testId: string, subjectId: string }) {\n    }\n}\n\nexport class GetQuestionsByTest implements Action {\n    readonly type = ActionTypes.GetQuestionsByTest;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class SetQuestionsByTest implements Action {\n    readonly type = ActionTypes.SetQuestionsByTest;\n\n    constructor(public payload: IQuestion[]) {\n    }\n}\n\nexport class RefreshQuestions implements Action {\n    readonly type = ActionTypes.RefreshQuestions;\n\n    constructor(public payload: IQuestion[]) {\n    }\n}\n\nexport class CreateQuestionForTest implements Action {\n    readonly type = ActionTypes.CreateQuestionForTest;\n\n    constructor(public payload: { question: IQuestion, testId: string }) {\n    }\n}\n\nexport class DeleteQuestionFromTest implements Action {\n    readonly type = ActionTypes.DeleteQuestionFromTest;\n\n    constructor(public payload: { testId: string, questionId: string }) {\n    }\n}\n\nexport class UpdateQuestion implements Action {\n    readonly type = ActionTypes.UpdateQuestion;\n\n    constructor(public payload: { testId: string, questionId: string, question: any }) {\n    }\n}\n\nexport class LoadQuestionById implements Action {\n    readonly type = ActionTypes.LoadQuestionById;\n\n    constructor(public payload: { testId: string, questionId }) {\n    }\n}\n\nexport class LoadedQuestionById implements Action {\n    readonly type = ActionTypes.LoadedQuestionById;\n\n    constructor(public payload: object) {\n    }\n}\n\nexport class LoadCategories implements Action {\n    readonly type = ActionTypes.LoadCategories;\n}\n\nexport class LoadedCategories implements Action {\n    readonly type = ActionTypes.LoadedCategories;\n\n    constructor(public payload: IStandardCategory[]) {\n    }\n}\n\nexport class RefreshCategories implements Action {\n    readonly type = ActionTypes.RefreshCategories;\n\n    constructor(public payload: IStandardCategory[]) {\n    }\n}\n\nexport class CreateCategory implements Action {\n    readonly type = ActionTypes.CreateCategory;\n\n    constructor(public payload: IStandardCategory) {\n    }\n}\n\nexport class UpdateCategory implements Action {\n    readonly type = ActionTypes.UpdateCategory;\n\n    constructor(public payload: IStandardCategory) {\n    }\n}\n\nexport class DeleteCategory implements Action {\n    readonly type = ActionTypes.DeleteCategory;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class LoadConditions implements Action {\n    readonly type = ActionTypes.LoadConditions;\n}\n\nexport class LoadedConditions implements Action {\n    readonly type = ActionTypes.LoadedConditions;\n\n    constructor(public payload: ICondition[]) {\n    }\n}\n\nexport class CreateCondition implements Action {\n    readonly type = ActionTypes.CreateCondition;\n\n    constructor(public payload: ICondition) {\n    }\n}\n\nexport class UpdateCondition implements Action {\n    readonly type = ActionTypes.UpdateCondition;\n\n    constructor(public payload: ICondition) {\n    }\n}\n\nexport class DeleteCondition implements Action {\n    readonly type = ActionTypes.DeleteCondition;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class RefreshConditions implements Action {\n    readonly type = ActionTypes.RefreshConditions;\n\n    constructor(public payload: ICondition[]) {\n    }\n}\n\nexport class LoadUnits implements Action {\n    readonly type = ActionTypes.LoadUnits;\n}\n\nexport class LoadedUnits implements Action {\n    readonly type = ActionTypes.LoadedUnits;\n\n    constructor(public payload: IConditionUnits[]) {\n    }\n}\n\nexport class RefreshUnits implements Action {\n    readonly type = ActionTypes.RefreshUnits;\n\n    constructor(public payload: IConditionUnits[]) {\n    }\n}\n\nexport class CreateUnit implements Action {\n    readonly type = ActionTypes.CreateUnit;\n\n    constructor(public payload: IConditionUnits) {\n    }\n}\n\nexport class DeleteUnit implements Action {\n    readonly type = ActionTypes.DeleteUnit;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class LoadStandards implements Action {\n    readonly type = ActionTypes.LoadStandards;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class LoadedStandards implements Action {\n    readonly type = ActionTypes.LoadedStandards;\n\n    constructor(public payload: IStandard[]) {\n    }\n}\n\nexport class CreateStandards implements Action {\n    readonly type = ActionTypes.CreateStandards;\n\n    constructor(public payload: IStandard) {\n    }\n}\n\nexport class UpdateStandards implements Action {\n    readonly type = ActionTypes.UpdateStandards;\n\n    constructor(public payload: IStandard) {\n    }\n}\n\nexport class DeleteStandards implements Action {\n    readonly type = ActionTypes.DeleteStandards;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class RefreshStandards implements Action {\n    readonly type = ActionTypes.RefreshStandards;\n\n    constructor(public payload: IStandard[]) {\n    }\n}\n\nexport class LoadCurrentStandard implements Action {\n    readonly type = ActionTypes.LoadCurrentStandard;\n\n    constructor(public payload: ICurrentStandard) {\n    }\n}\n\nexport class LoadedCurrentStandard implements Action {\n    readonly type = ActionTypes.LoadedCurrentStandard;\n\n    constructor(public payload: ICurrentStandard) {\n    }\n}\n\nexport type QuizActions = LoadSubjects & LoadedSubjects &\n    QuizErrors & LoadTestsBySubject & LoadedTestsBySubject &\n    CreateTestForSubject & DeleteTestFromSubject & RefreshTests &\n    CreateQuestionForTest & GetQuestionsByTest & SetQuestionsByTest &\n    RefreshQuestions & DeleteQuestionFromTest & LoadQuestionById &\n    LoadedQuestionById & UpdateQuestion & UpdateTest & LoadAll &\n    RefreshCategories & LoadCategories & LoadedCategories & CreateCategory &\n    UpdateCategory & DeleteCategory & LoadConditions & LoadedConditions &\n    CreateCondition & UpdateCondition & DeleteCondition & RefreshConditions &\n    LoadUnits & LoadedUnits & RefreshUnits & DeleteUnit & CreateUnit &\n    LoadStandards & LoadedStandards & CreateStandards & UpdateStandards &\n    DeleteStandards & RefreshStandards & LoadCurrentStandard & LoadedCurrentStandard;\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <h2>{{'categories' | translate}}</h2>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"add()\"\n            >{{'add' | translate}} {{('category' | translate: {ending: 'ю'}).toLowerCase()}}</button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\" *ngIf=\"categories$ | async as categories\">\n        <div class=\"col\">\n            <app-base-table [objects]=\"categories\"\n                            [actions]=\"actions\"\n                            [pageType]=\"objectType.CATEGORY\"\n                            (action)=\"handleAction($event)\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {PageTypes} from '@models/constants/page-types';\nimport {ModalService} from '@modal/services/modal.service';\nimport {StandardsMocks} from '@models/mocks/specialities';\nimport {CreateCategory, DeleteCategory, LoadCategories, UpdateCategory} from '@quiz/actions/actions';\nimport {IStandardCategory} from '@models/interfaces/standard';\nimport {selectCategories} from '@quiz/selectors/selectors';\nimport {Actions} from '@models/constants/actions';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\n\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public objectType = PageTypes;\n    public actions: string[];\n\n    public categories$: Observable<IStandardCategory[]>;\n\n    constructor(private modalService: ModalService,\n                private store: Store<any>) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.CHANGE, Actions.REMOVE];\n        this.getCategories();\n    }\n\n    getCategories() {\n        this.categories$ = this.store.select(selectCategories)\n            .pipe(tap((categories: IStandardCategory[]) => !categories && this.fetchCategories()));\n    }\n\n    fetchCategories() {\n        this.store.dispatch(new LoadCategories());\n    }\n\n    add() {\n        this.openCategoryModal(StandardsMocks.emptyCategory, false);\n    }\n\n    openCategoryModal(category: any, edit: boolean) {\n        const objectType = this.objectType.CATEGORY;\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...category}, edit, objectType},\n            (res) => {\n                if (res) {\n                    edit ? this.updateCategory(res, category.id) : this.createCategory(res);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: IStandardCategory) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.nameCategoryRus, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.deleteCategory(item.id);\n                }\n            });\n    }\n\n    handleAction(event: { action: string, item: IStandardCategory }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openCategoryModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n        }\n    }\n\n    createCategory(category: IStandardCategory) {\n        this.store.dispatch(new CreateCategory(category));\n    }\n\n    updateCategory(category: IStandardCategory, categoryId: string) {\n        category.id = categoryId;\n        this.store.dispatch(new UpdateCategory(category));\n    }\n\n    deleteCategory(categoryId: string) {\n        this.store.dispatch(new DeleteCategory(categoryId));\n    }\n}\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <h2>{{'conditions' | translate}}</h2>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"add()\"\n                    [disabled]=\"!(units$ | async)?.length\"\n            >{{'add' | translate}} {{('conditions' | translate).toLowerCase()}}</button>\n        </div>\n        <div class=\"col-4\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"goToUnits()\"\n            >{{'units' | translate}}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"conditions$ | async as conditions\">\n        <div class=\"col-12\">\n            <app-base-table [objects]=\"conditions\"\n                            [actions]=\"actions\"\n                            (action)=\"handleActions($event)\"\n                            [pageType]=\"objectType.CONDITION\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {Router} from '@angular/router';\nimport {tap} from 'rxjs/internal/operators/tap';\n\nimport {ICondition, IConditionUnits} from '@models/interfaces/standard';\nimport {selectConditions, selectUnits} from '@quiz/selectors/selectors';\nimport {Actions} from '@models/constants/actions';\nimport {StandardsMocks} from '@models/mocks/specialities';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {ModalService} from '@modal/services/modal.service';\nimport {PageTypes} from '@models/constants/page-types';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {CreateCondition, DeleteCondition, LoadConditions, LoadUnits, UpdateCondition} from '@quiz/actions/actions';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\n\n@Component({\n    selector: 'app-conditions',\n    templateUrl: './conditions.component.html',\n    styleUrls: ['./conditions.component.scss']\n})\nexport class ConditionsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n\n    public actions: string[];\n    public objectType = PageTypes;\n\n    public conditions$: Observable<ICondition[]>;\n    public units$: Observable<IConditionUnits[]>;\n\n    constructor(private store: Store<any>,\n                private modalService: ModalService,\n                private router: Router) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.CHANGE, Actions.REMOVE];\n        this.getConditions();\n        this.getUnits();\n    }\n\n    getConditions() {\n        this.conditions$ = this.store.select(selectConditions)\n            .pipe(tap((conditions: ICondition[]) => !conditions && this.fetchConditions()));\n    }\n\n    fetchConditions() {\n        this.store.dispatch(new LoadConditions());\n    }\n\n    getUnits() {\n        this.units$ = this.store.select(selectUnits)\n            .pipe(tap((units: IConditionUnits[]) => !units && this.fetchUnits()));\n    }\n\n    fetchUnits() {\n        this.store.dispatch(new LoadUnits());\n    }\n\n    handleActions(event: { action: string, item: ICondition }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openConditionsModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n        }\n    }\n\n    add() {\n        this.openConditionsModal(StandardsMocks.emptyCondition, false);\n    }\n\n    openConditionsModal(condition: any, edit: boolean) {\n        const objectType = this.objectType.CONDITION;\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...condition}, edit, objectType},\n            (res) => {\n                if (res) {\n                    edit ? this.updateCondition(res, condition.id) : this.createCondition(res);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: ICondition) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.conditionsRus, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.deleteCondition(item.id);\n                }\n            });\n    }\n\n    createCondition(condition: ICondition) {\n        this.store.dispatch(new CreateCondition(condition));\n    }\n\n    updateCondition(updatedCondition: ICondition, conditionId) {\n        updatedCondition.id = conditionId;\n        this.store.dispatch(new UpdateCondition(updatedCondition));\n    }\n\n    deleteCondition(conditionId: string) {\n        this.store.dispatch(new DeleteCondition(conditionId));\n    }\n\n    goToUnits() {\n        this.router.navigate(['subjects/standards/conditions/units']);\n    }\n}\n","<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <h3>{{'questionsForTest' | translate}}: {{testName}}. {{'subject' | translate | titlecase}}: {{subjectName}}</h3>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-3\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"add()\"\n            >{{'add' | translate}} {{'Questions' | translate}}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"questions$ | async as questions\">\n        <div class=\"col\">\n            <app-base-table [objects]=\"questions\"\n                            [actions]=\"actions\"\n                            [pageType]=\"objectType.QUESTIONS\"\n                            (action)=\"handleAction($event)\"\n            ></app-base-table>\n        </div>\n    </div>\n\n    <div class=\"row mt-4\" *ngIf=\"questions$ | async as questions\">\n        <div class=\"col text-center\" *ngIf=\"!questions.length\">\n            <h3>{{'emptyTest' | translate}}</h3>\n        </div>\n    </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {Location} from '@angular/common';\nimport {tap} from 'rxjs/internal/operators/tap';\n\nimport {Actions} from '@models/constants/actions';\nimport {IQuestion} from '@models/interfaces/quiz';\nimport {selectQuestionbyId, selectTestQuestions} from '@quiz/selectors/selectors';\nimport {\n    CreateQuestionForTest,\n    DeleteQuestionFromTest,\n    GetQuestionsByTest,\n    LoadQuestionById,\n    RefreshQuestions,\n    UpdateQuestion\n} from '@quiz/actions/actions';\nimport {ModalService} from '@modal/services/modal.service';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {PageTypes} from '@models/constants/page-types';\nimport {QuizMocks} from '@models/mocks/quiz.mocks';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Icons} from '@models/constants/icons';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\n\n@Component({\n    selector: 'app-questions',\n    templateUrl: './questions.component.html',\n    styleUrls: ['./questions.component.scss']\n})\nexport class QuestionsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n\n    public actions: string[];\n    public objectType = PageTypes;\n    public icons = Icons;\n    public subjectName: string;\n    public testName: string;\n    public questions$: Observable<IQuestion[]>;\n\n    private testId: string;\n    private subjectId: string;\n    private currentQuestion: object;\n\n    constructor(private route: ActivatedRoute,\n                private store: Store<any>,\n                private modalService: ModalService,\n                private translateService: TranslateService,\n                private location: Location) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.CHANGE, Actions.REMOVE];\n        this.getRouteParams();\n        this.getQuestions(this.testId);\n        this.refreshQuestions();\n    }\n\n    refreshQuestions() {\n        this.store.dispatch(new RefreshQuestions(null));\n    }\n\n    getRouteParams() {\n        this.subscriptions.sink = this.route.queryParams.subscribe((param) => {\n            this.testId = param['test'];\n            this.subjectId = param['subject'];\n            this.subjectName = param['name'];\n            this.testName = param['testName'];\n        });\n    }\n\n    getQuestions(testId: string) {\n        this.questions$ = this.store.select(selectTestQuestions)\n            .pipe(tap((questions: IQuestion[]) => !questions && this.fetchQuestions(testId)));\n    }\n\n    fetchQuestions(testId: string) {\n        this.store.dispatch(new GetQuestionsByTest(testId));\n    }\n\n    add() {\n        this.openQuestionModal(QuizMocks.emptyQuestion, false);\n    }\n\n    handleAction(event: { action: string, item: any }) {\n        switch (event.action) {\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            case Actions.CHANGE:\n                this.getQuestionById(this.testId, event.item.id);\n        }\n    }\n\n    getQuestionById(testId: string, questionId: string) {\n        this.store.dispatch(new LoadQuestionById({testId, questionId}));\n        this.subscriptions.sink = this.store.select(selectQuestionbyId)\n            .subscribe((question) => {\n                if (this.currentQuestion !== question) {\n                    if (question.hasOwnProperty('answers')) {\n                        this.currentQuestion = question;\n                        this.openQuestionModal(this.currentQuestion, true);\n                    }\n                }\n            });\n    }\n\n    openQuestionModal(question: any, edit: boolean) {\n        const objectType = this.objectType.QUESTIONS;\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true, size: 'lg'},\n            {object: {...question}, edit, objectType, maxWidth: '1200px'},\n            (res) => {\n                if (res) {\n                    res.id = question.id;\n                    edit ? this.updateQuestion(this.testId, question.id, res) : this.createQuestion(res, this.testId);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: IQuestion) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.name, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.removeQuestion(item.id, this.testId);\n                }\n            });\n    }\n\n    createQuestion(question: IQuestion, testId: string) {\n        this.store.dispatch(new CreateQuestionForTest({question, testId}));\n    }\n\n    updateQuestion(testId: string, questionId: string, question: any) {\n        this.store.dispatch(new UpdateQuestion({testId, questionId, question}));\n    }\n\n    removeQuestion(questionId: string, testId: string) {\n        this.store.dispatch(new DeleteQuestionFromTest({questionId, testId}));\n    }\n\n    back() {\n        this.location.back();\n    }\n}\n","<p>\n  standard-details works!\n</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {select, Store} from '@ngrx/store';\nimport {map, tap} from 'rxjs/operators';\nimport {combineLatest, Observable} from 'rxjs';\nimport {Location} from '@angular/common';\nimport {SubSink} from 'subsink';\n\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {IStandard} from '@models/interfaces/standard';\nimport {selectStandards} from '@quiz/selectors/selectors';\nimport {LoadCurrentStandard, LoadStandards} from '@quiz/actions/actions';\nimport {IDialogActions, IPerson} from '@models/interfaces/human';\nimport {DialogsService} from '@shared/services/dialogs.service';\nimport {LoadDivisions} from '@divisions/actions/actions';\nimport {selectDivisionNames, selectDivisionsData} from '@divisions/selectors/selectors';\nimport {IDivision} from '@models/interfaces/division';\nimport {LoadPersons, LoadPersonsByDivision} from '@persons/actions/actions';\nimport {selectPersonData, selectPersonsByDivision} from '@persons/selectors/selectors';\nimport {DivisionsService} from '@divisions/services/divisions.service';\nimport {PageTypes} from '@models/constants/page-types';\nimport {Actions} from '@models/constants/actions';\nimport {ModalService} from '@modal/services/modal.service';\n\n@Component({\n    selector: 'app-standard-details',\n    templateUrl: './standard-details.component.html',\n    styleUrls: ['./standard-details.component.scss']\n})\nexport class StandardDetailsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public standard$: Observable<void | IStandard>;\n    public divisions$: Observable<IDivision[]>;\n    public personsByDivision$: Observable<IPerson[]>;\n    public divisions: IDivision[];\n    public standard: IStandard;\n    public personsByDivision: IPerson[];\n    public divisionNames: string[];\n    public currentDivisionName: string;\n    public pageTypes = PageTypes;\n    public mobileActions: string[];\n    public standardMembers: IPerson[];\n    public persons: IPerson[];\n\n    private subjectId: string;\n    private standardId: string;\n    private dialogSubs: SubSink = new SubSink();\n\n    constructor(private route: ActivatedRoute,\n                private store: Store<any>,\n                private location: Location,\n                private dialogsService: DialogsService,\n                private divisionService: DivisionsService,\n                private modalService: ModalService,\n                private router: Router,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        this.mobileActions = [Actions.MEMBER];\n        this.getRouteParams();\n        this.getDivisions();\n        this.fetchPersons();\n    }\n\n    getRouteParams() {\n        this.subscriptions.sink = combineLatest(this.route.paramMap, this.route.queryParams)\n            .pipe(\n                map(((result) => ({standardId: result[0]['params'].id, subjectId: result[1].subjectId})))\n            ).subscribe((result) => {\n                this.subjectId = result.subjectId;\n                this.standardId = result.standardId;\n                this.getStandard(this.subjectId, this.standardId);\n            });\n    }\n\n    getStandard(subjectId: string, standardId: string) {\n        this.standard$ = this.store.pipe(\n            select(selectStandards),\n            map((standards: IStandard[]) => {\n                if (!standards) {\n                    return this.fetchStandards(subjectId);\n                }\n\n                this.standard = this.findStandardById(standards, standardId);\n                return this.standard;\n            }));\n    }\n\n    fetchStandards(subjectId: string) {\n        this.store.dispatch(new LoadStandards(subjectId));\n    }\n\n    findStandardById(standards: IStandard[], standardId: string): IStandard {\n        return standards.find((standard: IStandard) => standard.id === standardId);\n    }\n\n    getDivisions() {\n        this.divisions$ = this.store.pipe(\n            select(selectDivisionsData),\n            tap((divisions: IDivision[]) => {\n                if (!divisions) {\n                    return this.fetchDivisions();\n                }\n                this.divisions = divisions;\n                this.getDivisionNames();\n            }));\n    }\n\n    getPersons(divisions: IDivision[], divisionName: string) {\n        this.subscriptions.sink = this.store.pipe(\n            select(selectPersonData))\n            .subscribe((persons: IPerson[]) => {\n                if (persons) {\n                    this.getPersonsByDivision(divisions, divisionName);\n                }\n            });\n    }\n\n    getPersonsByDivision(divisions: IDivision[], divisionName: string) {\n        const division = this.findDivisionByName(divisions, divisionName);\n        if (division) {\n            this.store.dispatch(new LoadPersonsByDivision(division.id));\n            this.personsByDivision$ = this.store.pipe(\n                select(selectPersonsByDivision),\n                tap((persons: IPerson[]) => {\n                    if (persons) {\n                        this.personsByDivision = persons.map((person: IPerson) => {\n                            person['standardsMember'] = false;\n                            return person;\n                        });\n                        this.dialogSubs.unsubscribe();\n                    }\n                })\n            );\n        }\n    }\n\n    fetchPersons() {\n        this.store.dispatch(new LoadPersons());\n    }\n\n    findDivisionByName(divisions: IDivision[], divisionName: string) {\n        return this.divisionService.findDivisonByName(divisions, divisionName);\n    }\n\n    getDivisionNames() {\n        this.subscriptions.sink = this.store.pipe(select(selectDivisionNames))\n            .subscribe((names: string[]) => this.divisionNames = names);\n    }\n\n    fetchDivisions() {\n        this.store.dispatch(new LoadDivisions());\n    }\n\n    showDialogAction() {\n        const options = this.setDialogOptions();\n        this.dialogSubs.sink = this.dialogsService\n            .getDialogAction(options)\n            .subscribe(result => {\n                if (result === 'Отменить') {\n                    this.dialogSubs.unsubscribe();\n                    return;\n                }\n                this.currentDivisionName = result;\n                this.getPersons(this.divisions, this.currentDivisionName);\n            });\n    }\n\n    handleActions(event: { action: string, item: IPerson }) {\n        this.setPersonsStatus(event.item.id);\n    }\n\n    setDialogOptions(): IDialogActions {\n        return this.dialogsService.getDialogOptions('подразделение', this.divisionNames);\n    }\n\n    setPersonsStatus(personId: string) {\n        this.personsByDivision = this.personsByDivision.map((person: IPerson) => {\n            if (person.id === personId) {\n                person.standardsMember = !person.standardsMember;\n                return person;\n            }\n            return person;\n        });\n    }\n\n    onSelectAll(type: string) {\n        this.personsByDivision = this.personsByDivision.map((person: IPerson) => {\n            if (type === 'select') {\n                person.standardsMember = true;\n                return person;\n            }\n\n            person.standardsMember = false;\n            return person;\n        });\n    }\n\n    onStart() {\n        const standardMembers: IPerson[] = this.getStandardMembers();\n        const percentOfMembers: number = this.getPercentOfMembers(standardMembers);\n        this.store.dispatch(new LoadCurrentStandard({\n            standard: this.standard,\n            standardMembers,\n            percentOfMembers\n        }));\n        this.router.navigate(['/', 'subjects', 'standards', this.standard.id, 'exam']);\n    }\n\n    getStandardMembers() {\n        return this.personsByDivision\n            .filter((person: IPerson) => person.standardsMember)\n            .map((member: IPerson) => {\n                member['timer'] = '00:00:00';\n                member['started'] = false;\n                return member;\n            });\n    }\n\n    getPercentOfMembers(standardMembers: IPerson[]) {\n        return standardMembers.length * 100 / this.personsByDivision.length;\n    }\n\n    isStandardMember(): boolean {\n        return this.personsByDivision.some((person: IPerson) => person.standardsMember);\n    }\n\n    getModalDialogOptions(options) {\n        return this.modalService.getModalDialogOptions(options);\n    }\n\n    goBack() {\n        this.location.back();\n    }\n\n}\n","<p>standard-exam works!</p>\n","import {Component, OnDestroy, OnInit, ViewContainerRef} from '@angular/core';\nimport {Observable, Subscription, timer} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport {tap} from 'rxjs/operators';\nimport {Location} from '@angular/common';\nimport {SubSink} from 'subsink/dist/subsink';\n\nimport {selectCurrentStandard} from '@quiz/selectors/selectors';\nimport {ICurrentStandard} from '@quiz/actions/actions';\nimport {IStandard} from '@models/interfaces/standard';\nimport {IPerson} from '@models/interfaces/human';\nimport {TimerService} from '@exercises/timer.service';\nimport {ModalService} from '@modal/services/modal.service';\nimport {ModalRootComponent} from '@shared/components/modal-root/modal-root.component';\nimport {DialogsService} from '@shared/services/dialogs.service';\n\n@Component({\n    selector: 'app-standard-exam',\n    templateUrl: './standard-exam.component.html',\n    styleUrls: ['./standard-exam.component.scss']\n})\nexport class StandardExamComponent implements OnInit, OnDestroy {\n    public currentStandard$: Observable<ICurrentStandard>;\n    public standard: IStandard;\n    public percentOfMembers: number;\n    public standardMembers: IPerson[] = [];\n    public isStarted = false;\n    public ticks: number;\n\n    private timerSubs: Subscription[] = [];\n    private dialogSubs: SubSink = new SubSink();\n\n    constructor(private store: Store<any>,\n                private timerService: TimerService,\n                private modalService: ModalService,\n                private vcRef: ViewContainerRef,\n                private location: Location,\n                private dialogService: DialogsService) {\n    }\n\n    ngOnInit() {\n        this.getCurrentStandard();\n        this.generateSubscriptions();\n    }\n\n    getCurrentStandard() {\n        this.currentStandard$ = this.store.pipe(\n            select(selectCurrentStandard),\n            tap((currentStandard: ICurrentStandard) => {\n                this.standard = currentStandard.standard;\n                this.percentOfMembers = currentStandard.percentOfMembers;\n                this.standardMembers = currentStandard.standardMembers;\n            }));\n    }\n\n    generateSubscriptions() {\n        this.standardMembers.forEach(() => this.timerSubs.push(timer(0, 1000).subscribe()));\n    }\n\n    onStart() {\n        this.standardMembers.forEach((member: IPerson, i: number) => this.onStartItem(i));\n        this.isStarted = !this.isStarted;\n    }\n\n    onStartItem(item) {\n        const index = item.hasOwnProperty('index') ? item.index : item;\n        this.standardMembers[index].started ? this.stopTimer(index) : this.startTimer(index);\n        this.standardMembers[index].started = !this.standardMembers[index].started;\n    }\n\n    startTimer(index) {\n        const $timer = timer(0, 1000);\n        this.timerSubs[index] = $timer.subscribe(ticks => {\n            this.ticks = ticks;\n            this.standardMembers[index].timer = this.generateTimeString(ticks);\n        });\n    }\n\n    stopTimer(index) {\n        this.timerSubs[index].unsubscribe();\n    }\n\n    public generateTimeString(time: number) {\n        return this.timerService.generateTimeString(time);\n    }\n\n    initErrorsDialog() {\n        const options = this.getErrorDialogOptions();\n        this.dialogSubs.sink = this.modalService.initModal(ModalRootComponent, options)\n            .subscribe((result) => console.log(result));\n    }\n\n    getErrorDialogOptions() {\n        this.standard.failsList = this.setCheckedProp(this.standard, 'failsList');\n        return this.modalService.getModalDialogOptions({\n            vcRef: this.vcRef,\n            context: {\n                standard: this.standard,\n                path: 'standard-errors-modal'\n            },\n            fullscreen: false,\n        });\n    }\n\n    initConditionsDialog() {\n        const options = this.getConditionsDialogOptions();\n        this.dialogSubs.sink = this.modalService.initModal(ModalRootComponent, options)\n            .subscribe((result) => console.log(result));\n    }\n\n    getConditionsDialogOptions() {\n        this.standard.conditionsList = this.setCheckedProp(this.standard, 'conditionsList');\n        return this.modalService.getModalDialogOptions({\n            vcRef: this.vcRef,\n            context: {\n                standard: this.standard,\n                path: 'standard-conditions-modal'\n            },\n            fullscreen: false,\n        });\n    }\n\n    initScoreDialog() {\n        const options = this.dialogService.getDialogOptions('оценку', ['5', '4', '3', '2', '1']);\n        this.dialogSubs.sink = this.dialogService.getDialogAction(options)\n            .subscribe((result) => console.log(result));\n    }\n\n    setCheckedProp(standard: IStandard, arrayName: string): any[] {\n        return standard[arrayName].map((item: any) => {\n            item['checked'] = false;\n            return item;\n        });\n    }\n\n    onBack() {\n        this.location.back();\n    }\n\n    ngOnDestroy() {\n        this.timerSubs.forEach(sub => sub.unsubscribe());\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <h2>{{'standardsForSubject' | translate}}: {{subjectName}}</h2>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"add()\"\n                    [disabled]=\"!(conditions$ | async)?.length || !(categories$ | async)?.length\"\n            >{{'add' | translate}} {{('standard' | translate).toLowerCase()}}</button>\n        </div>\n\n        <div class=\"col-4\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"goToChild('subjects/standards/categories')\"\n            >{{'categories' | translate}}</button>\n        </div>\n\n        <div class=\"col-4\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"goToChild('subjects/standards/conditions')\"\n            >{{'conditions' | translate}}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"standards$ | async as standards\">\n        <div class=\"col-12\">\n            <app-base-table [objects]=\"standards\"\n                            [actions]=\"actions\"\n                            (action)=\"handleActions($event)\"\n                            [pageType]=\"objectType.STANDARDS\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/internal/operators/tap';\nimport {SubSink} from 'subsink';\n\nimport {Icons} from '@models/constants/icons';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {PageTypes} from '@models/constants/page-types';\nimport {ModalService} from '@modal/services/modal.service';\nimport {StandardsMocks} from '@models/mocks/specialities';\nimport {\n    CreateStandards,\n    DeleteStandards,\n    LoadCategories,\n    LoadConditions,\n    LoadStandards,\n    LoadSubjects,\n    UpdateStandards,\n} from '@quiz/actions/actions';\nimport {Actions} from '@models/constants/actions';\nimport {ICondition, IStandard, IStandardCategory} from '@models/interfaces/standard';\nimport {selectCategories, selectConditions, selectStandards, selectSubjects} from '@quiz/selectors/selectors';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {DialogsService} from '@shared/services/dialogs.service';\nimport {IDialogActions} from '@models/interfaces/human';\nimport {ISubject} from '@models/interfaces/quiz';\n\n@Component({\n    selector: 'app-standards',\n    templateUrl: './standards.component.html',\n    styleUrls: ['./standards.component.scss'],\n})\nexport class StandardsComponent extends UnsubscribeOndestroyAdapter\n    implements OnInit, OnDestroy {\n    public subjectName: string;\n    public subjectId: string;\n    public icons = Icons;\n    public objectType = PageTypes;\n    public actions: string[];\n    public mobileActions: string[];\n    public conditions$: Observable<ICondition[]>;\n    public categories$: Observable<IStandardCategory[]>;\n    public standards$: Observable<IStandard[]>;\n    public subjects$: Observable<ISubject[]>;\n    public subjectsNames: string[] = [];\n    public currentSubjectName: string;\n    public currentSubject: ISubject;\n\n    private dialogSubs: SubSink = new SubSink();\n\n    constructor(\n        private route: ActivatedRoute,\n        private location: Location,\n        private modalService: ModalService,\n        private router: Router,\n        private store: Store<any>,\n        private dialogsService: DialogsService,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.CHANGE, Actions.REMOVE];\n        this.mobileActions = [Actions.START];\n        this.getParams();\n        this.getCategories();\n        this.getConditions();\n        this.getSubjects();\n    }\n\n    getParams() {\n        this.subscriptions.sink = this.route.queryParams.subscribe(params => {\n            this.subjectName = params['name'];\n            this.subjectId = params['subject'];\n            if (this.subjectName && this.subjectId) {\n                this.getStandards(this.subjectId);\n            }\n        });\n    }\n\n    getSubjects() {\n        this.subjects$ = this.store.pipe(\n            select(selectSubjects),\n            tap((subjects: ISubject[]) => {\n                if (!subjects) {\n                    return this.fetchSubjects();\n                }\n\n                this.subjectsNames = this.getSubjectsNames(subjects);\n                this.currentSubject = this.findSubjectByName(subjects, this.currentSubjectName);\n                if (this.currentSubject && this.currentSubjectName) {\n                    this.getStandards(this.currentSubject.id);\n                }\n            }));\n    }\n\n    fetchSubjects() {\n        this.store.dispatch(new LoadSubjects());\n    }\n\n    getSubjectsNames(subjects: ISubject[]): string[] {\n        return subjects.map((subject: ISubject) =>\n            localStorage.getItem('lang') === 'ru' ? subject.ru : subject.kk);\n    }\n\n    findSubjectByName(subjects: ISubject[], subjectName: string): ISubject {\n        return subjects.find((subject: ISubject) =>\n            subject.ru === subjectName || subject.kk === subjectName);\n    }\n\n    getStandards(subjectId: string) {\n        this.fetchStandards(subjectId);\n        this.standards$ = this.store.select(selectStandards);\n    }\n\n    fetchStandards(subjectId: string) {\n        this.store.dispatch(new LoadStandards(subjectId));\n    }\n\n    getCategories() {\n        this.categories$ = this.store\n            .select(selectCategories)\n            .pipe(\n                tap(\n                    (categories: IStandardCategory[]) =>\n                        !categories && this.fetchCategories(),\n                ),\n            );\n    }\n\n    fetchCategories() {\n        this.store.dispatch(new LoadCategories());\n    }\n\n    getConditions() {\n        this.conditions$ = this.store\n            .select(selectConditions)\n            .pipe(\n                tap(\n                    (conditions: ICondition[]) =>\n                        !conditions && this.fetchConditions(),\n                ),\n            );\n    }\n\n    fetchConditions() {\n        this.store.dispatch(new LoadConditions());\n    }\n\n    handleActions(event: { action: string; item: IStandard }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openStandardsModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            case Actions.START:\n                return this.goToChild(`subjects/standards/${event.item.id}`, this.currentSubject.id);\n        }\n    }\n\n    add() {\n        this.openStandardsModal(StandardsMocks.emptyStandard, false);\n    }\n\n    openStandardsModal(standard: any, edit: boolean) {\n        const objectType = this.objectType.STANDARDS;\n        this.modalService.openModal(\n            BaseModalComponent,\n            {centered: true, size: 'lg'},\n            {object: {...standard}, edit, objectType, maxWidth: '1200px'},\n            res => {\n                if (res) {\n                    edit\n                        ? this.updateStandard(res, standard.id)\n                        : this.createStandard(res);\n                }\n            },\n        );\n    }\n\n    openDialogModal(message: string, item: IStandard) {\n        this.modalService.openModal(\n            DialogModalComponent,\n            {centered: true},\n            {itemName: item.namedRus, message},\n            res => {\n                if (res && res === 'Yes') {\n                    this.deleteStandard(item.id);\n                }\n            },\n        );\n    }\n\n    createStandard(standard: IStandard) {\n        this.store.dispatch(new CreateStandards(standard));\n    }\n\n    updateStandard(updatedStandard: IStandard, standardId: string) {\n        updatedStandard.id = standardId;\n        this.store.dispatch(new UpdateStandards(updatedStandard));\n    }\n\n    deleteStandard(standardId: string) {\n        this.store.dispatch(new DeleteStandards(standardId));\n    }\n\n    // Don't delete this method.\n    // It needs for mobile version.\n    showDialogAction() {\n        const options = this.setDialogOptions();\n        this.dialogSubs.sink = this.dialogsService\n            .getDialogAction(options)\n            .subscribe(result => {\n                if (result === 'Отменить') {\n                    this.dialogSubs.unsubscribe();\n                    return;\n                }\n                this.currentSubjectName = result;\n                this.getSubjects();\n            });\n    }\n\n    setDialogOptions(): IDialogActions {\n        return this.dialogsService.getDialogOptions('предмет', this.subjectsNames);\n    }\n\n    goBack() {\n        this.location.back();\n    }\n\n    goToChild(childPath: string, subjectId?: string) {\n        this.router.navigate([childPath], {queryParams: {subjectId}});\n    }\n}\n","<div class=\"container mt-3\" *ngIf=\"quizSubjects$ | async as quizSubjects\">\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <h1>{{'subjects' | translate | titlecase}}</h1>\n    </div>\n  </div>\n  <div class=\"row mt-3\">\n    <div class=\"col\">\n      <app-base-table [objects]=\"quizSubjects\"\n                      [actions]=\"actions\"\n                      [pageType]=\"objectType.SUBJECTS\"\n                      (action)=\"handleActions($event)\"\n      ></app-base-table>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {selectSubjects} from '@quiz/selectors/selectors';\nimport {Store} from '@ngrx/store';\nimport {Router} from '@angular/router';\nimport {tap} from 'rxjs/internal/operators/tap';\n\nimport {LoadSubjects, RefreshTests} from '@quiz/actions/actions';\nimport {Actions} from '@models/constants/actions';\nimport {ISubject} from '@models/interfaces/quiz';\nimport {PageTypes} from '@models/constants/page-types';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\n\n@Component({\n    selector: 'app-subjects',\n    templateUrl: './subjects.component.html',\n    styleUrls: ['./subjects.component.scss']\n})\nexport class SubjectsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public quizSubjects$: Observable<ISubject[]>;\n    public actions: string[];\n    public objectType = PageTypes;\n\n    constructor(private store: Store<any>,\n                private router: Router) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getSubjects();\n        this.actions = [Actions.TESTS, Actions.STANDARDS];\n        this.store.dispatch(new RefreshTests(null));\n    }\n\n    getSubjects() {\n        this.quizSubjects$ = this.store.select(selectSubjects)\n            .pipe(tap((subjects: ISubject[]) => !subjects && this.fetchSubjects()));\n    }\n\n    fetchSubjects() {\n        this.store.dispatch(new LoadSubjects());\n    }\n\n    handleActions(event: { item: any, action: string }) {\n        switch (event.action) {\n            case Actions.TESTS:\n                return this.goToChildPage(event.item, 'subjects/tests');\n            case Actions.STANDARDS:\n                return this.goToChildPage(event.item, 'subjects/standards');\n        }\n    }\n\n    goToChildPage(subject: { id: string, ru: string, kk: string }, childPage: string) {\n        const language = localStorage.getItem('lang');\n        this.router.navigate([childPage], {\n            queryParams: {\n                subject: subject.id,\n                name: language === 'rus' ? subject.kk : subject.ru\n            }\n        });\n    }\n}\n","<div class=\"container mt-3\" [@EnterLeave]>\n    <div class=\"row\">\n        <div class=\"col\">\n            <h2>{{'testsForSubject' | translate}}: {{subjectName}}</h2>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-3\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"add()\"\n            >{{'add' | translate}} {{'test' | translate}}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"tests$ | async as tests\">\n        <div class=\"col\">\n            <app-base-table [objects]=\"tests\"\n                            [actions]=\"actions\"\n                            [pageType]=\"objectType.TESTS\"\n                            (action)=\"handleAction($event)\"\n            ></app-base-table>\n        </div>\n    </div>\n\n    <div class=\"row mt-4\" *ngIf=\"tests$ | async as tests\">\n        <div class=\"col text-center\" *ngIf=\"tests.length === 0\">\n            <h3>{{'emptySubject' | translate}}</h3>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {Location} from '@angular/common';\nimport {tap} from 'rxjs/internal/operators/tap';\n\nimport {ModalService} from '@modal/services/modal.service';\nimport {PageTypes} from '@models/constants/page-types';\nimport {ITest} from '@models/interfaces/quiz';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {QuizMocks} from '@models/mocks/quiz.mocks';\nimport {CreateTestForSubject, DeleteTestFromSubject, LoadTestsBySubject, UpdateTest} from '@quiz/actions/actions';\nimport {selectSubjectTests} from '@quiz/selectors/selectors';\nimport {Actions} from '@models/constants/actions';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {Icons} from '@models/constants/icons';\nimport {Animations} from '@models/constants/animations';\nimport {GetQueries} from '@shared/actions/actions';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\n\n@Component({\n    selector: 'app-tests',\n    templateUrl: './tests.component.html',\n    styleUrls: ['./tests.component.scss'],\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class TestsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public tests$: Observable<ITest[]>;\n    public actions: string[];\n    public icons = Icons;\n\n    public objectType = PageTypes;\n    private subjectId: string;\n    public subjectName: string;\n\n    constructor(private store: Store<any>,\n                private modalService: ModalService,\n                private route: ActivatedRoute,\n                private router: Router,\n                private location: Location) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getRouteParams();\n        this.actions = [Actions.CHANGE, Actions.QUESTIONS, Actions.REMOVE];\n    }\n\n    getRouteParams() {\n        this.subscriptions.sink = this.route.queryParams\n            .subscribe((params) => {\n                this.store.dispatch(new GetQueries(params));\n                this.subjectId = params['subject'];\n                this.subjectName = params['name'];\n                this.getTests(this.subjectId);\n            });\n    }\n\n    getTests(subjectId: string) {\n        this.tests$ = this.store.select(selectSubjectTests)\n            .pipe(tap((tests: ITest[]) => !tests && this.fetchTests(subjectId)));\n    }\n\n    fetchTests(subjectId: string) {\n        this.store.dispatch(new LoadTestsBySubject(subjectId));\n    }\n\n\n    add() {\n        this.openTestModal(QuizMocks.emptyQuiz, false);\n    }\n\n    handleAction(event: { action: string, item: any }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openTestModal(event.item, true);\n            case Actions.QUESTIONS:\n                return this.navigateToQuestions(event.item);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            default:\n                return;\n        }\n    }\n\n    openTestModal(test: ITest, edit: boolean) {\n        const objectType = this.objectType.TESTS;\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...test}, edit, objectType},\n            (res) => {\n                if (res) {\n                    res.questionList = test.questionList;\n                    edit ? this.updateTest(test.id, res) : this.createTest(res, this.subjectId);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: ITest) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.ru, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.removeTest(item.id, this.subjectId);\n                }\n            });\n    }\n\n    createTest(test: ITest, subjectId: string) {\n        test.subject = subjectId;\n        this.store.dispatch(new CreateTestForSubject(test));\n    }\n\n    updateTest(testId: string, test: ITest) {\n        test.subject = this.subjectId;\n        this.store.dispatch(new UpdateTest({testId, test}));\n    }\n\n    removeTest(testId: string, subjectId: string) {\n        this.store.dispatch(new DeleteTestFromSubject({testId, subjectId}));\n    }\n\n    navigateToQuestions(test: ITest) {\n        this.router.navigate(['subjects/tests/questions'], {\n            queryParams: {\n                subject: this.subjectId,\n                name: this.subjectName,\n                test: test.id,\n                testName: test.ru\n            }\n        });\n    }\n\n    back() {\n        this.location.back();\n    }\n}\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <h2>{{'units' | translate}}</h2>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-3\">\n            <button class=\"btn btn-primary w-100\"\n                    (click)=\"add()\"\n            >{{'add' | translate}} {{('units' | translate).toLowerCase()}}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"units$ | async as units\">\n        <div class=\"col-12\">\n            <app-base-table [objects]=\"units\" [actions]=\"actions\" (action)=\"handleActions($event)\"></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\nimport {IConditionUnits} from '@models/interfaces/standard';\nimport {Actions} from '@models/constants/actions';\nimport {StandardsMocks} from '@models/mocks/specialities';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {ModalService} from '@modal/services/modal.service';\nimport {PageTypes} from '@models/constants/page-types';\nimport {selectUnits} from '@quiz/selectors/selectors';\nimport {CreateUnit, DeleteUnit, LoadUnits} from '@quiz/actions/actions';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\n\n@Component({\n    selector: 'app-units',\n    templateUrl: './units.component.html',\n    styleUrls: ['./units.component.scss']\n})\nexport class UnitsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public objectType = PageTypes;\n    public actions: string[];\n\n    public units$: Observable<IConditionUnits[]>;\n\n    constructor(private modalService: ModalService,\n                private store: Store<any>) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.REMOVE];\n        this.getUnits();\n    }\n\n    getUnits() {\n        this.units$ = this.store.select(selectUnits)\n            .pipe(tap((units: IConditionUnits[]) => !units && this.fetchUnits()));\n    }\n\n    fetchUnits() {\n        this.store.dispatch(new LoadUnits());\n    }\n\n    handleActions(event: { action: string, item: IConditionUnits }) {\n        if (event.action === Actions.REMOVE) {\n            this.openDialogModal('dialogQuestion', event.item);\n        }\n    }\n\n    add() {\n        this.openUnitsModal(StandardsMocks.emptyUnit, false);\n    }\n\n    openUnitsModal(units: any, edit: boolean) {\n        const objectType = this.objectType.UNIT;\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...units}, edit, objectType},\n            (res) => {\n                if (res) {\n                    this.createUnit(res);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: IConditionUnits) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.name, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.deleteUnit(item.id);\n                }\n            });\n    }\n\n    createUnit(unit: IConditionUnits) {\n        this.store.dispatch(new CreateUnit(unit));\n    }\n\n    deleteUnit(unitId: string) {\n        this.store.dispatch(new DeleteUnit(unitId));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {Store} from '@ngrx/store';\n\nimport {QuizService} from '@quiz/services/quiz.service';\nimport {IQuestion, ITest, IAnswers} from '@models/interfaces/quiz';\nimport {MessageService} from '@services/message.service';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\nimport {\n    selectCategories,\n    selectConditions,\n    selectStandards,\n    selectSubjectTests,\n    selectTestQuestions,\n    selectUnits\n} from '@quiz/selectors/selectors';\nimport {questionMapperFromServer, quizMapperFromServer, answerMapperFromServer} from '@mappers/quiz.mapper';\nimport {ICondition, IConditionUnits, IStandard, IStandardCategory} from '@models/interfaces/standard';\nimport * as fromQuiz from '@quiz/actions/actions';\n\n@Injectable()\nexport class QuizEffects {\n    constructor(private actions$: Actions,\n                private quizService: QuizService,\n                private messageService: MessageService,\n                private store: Store<any>) {\n    }\n\n    @Effect()\n    loadSubjects$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.LoadSubjects),\n            mergeMap(() => this.quizService.getSubjects()\n                .pipe(\n                    map((subjects: any[]) => new fromQuiz.LoadedSubjects(subjects)),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadAll$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.LoadAll),\n            mergeMap(() => this.quizService.getSubjects()\n                .pipe(\n                    map((subjects: any[]) => new fromQuiz.LoadedSubjects(subjects)),\n                    mergeMap((action: any) => {\n                        return this.quizService.getTestsBySubject(action.payload[0].id).pipe(\n                            map(tests => new fromQuiz.RefreshTests(tests)),\n                            mergeMap((a: any) => {\n                                return this.quizService.getQuestionList(a.payload[0].id).pipe(\n                                    map(questions =>\n                                        new fromQuiz.RefreshQuestions(questions))\n                                );\n                            })\n                        );\n                    }),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadTestsBySubject$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.LoadTestsBySubject),\n            mergeMap((action: any) => this.quizService.getTestsBySubject(action.payload)\n                .pipe(\n                    map((tests: ITest[]) => new fromQuiz.LoadedTestsBySubject(tests)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshTestsBySubject = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.RefreshTests),\n            map((action: any) => new fromQuiz.LoadedTestsBySubject(action.payload))\n        );\n\n\n    @Effect()\n    createTestForSubject$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.CreateTestForSubject),\n            withLatestFrom(this.store.select(selectSubjectTests)),\n            switchMap(([action, tests]: Array<any>) => {\n                    return this.quizService.createTest(action.payload)\n                        .pipe(\n                            map((response) => {\n                                const message = {user: ToastrUsersType.TEST, type: ToastrMessageType.CREATE};\n                                if (response) {\n                                    const mappedResponse = quizMapperFromServer(response);\n                                    tests.push(mappedResponse);\n                                    this.messageService.showToastrSuccess(message);\n                                }\n\n                                return new fromQuiz.RefreshTests(tests);\n                            }),\n                            catchError((err) => {\n                                this.messageService.showPushNotification(err);\n                                this.messageService.showToastrError(err);\n                                return of(new fromQuiz.QuizErrors(err));\n                            })\n                        );\n                }\n            )\n        );\n\n    @Effect()\n    updateTestById$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.UpdateTest),\n            withLatestFrom(this.store.select(selectSubjectTests)),\n            switchMap(([action, tests]: any[]) => {\n                const {testId, test} = action.payload;\n                return this.quizService.updateTest(testId, test)\n                    .pipe(\n                        map((item: any) => {\n                            const message = {user: ToastrUsersType.TEST, type: ToastrMessageType.UPDATE};\n                            if (item) {\n                                tests = tests.map((el: ITest) => el.id === item.id ? item : el);\n                                this.messageService.showToastrSuccess(message);\n                            }\n\n                            return new fromQuiz.RefreshTests(tests);\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromQuiz.QuizErrors(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    deleteTestFromSubject$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.DeleteTestFromSubject),\n            withLatestFrom(this.store.select(selectSubjectTests)),\n            switchMap(([action, tests]: Array<any>) => {\n                    const {testId} = action.payload;\n                    return this.quizService.deleteTest(testId)\n                        .pipe(\n                            map(() => {\n                                tests = tests.filter((test: ITest) => test.id !== testId);\n                                const message = {user: ToastrUsersType.TEST, type: ToastrMessageType.REMOVE};\n                                this.messageService.showToastrSuccess(message);\n                                return new fromQuiz.RefreshTests(tests);\n                            }),\n                            catchError((err) => {\n                                this.messageService.showPushNotification(err);\n                                this.messageService.showToastrError(err);\n                                return of(new fromQuiz.QuizErrors(err));\n                            })\n                        );\n                }\n            )\n        );\n\n    @Effect()\n    getQuestionsByTest$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.GetQuestionsByTest),\n            mergeMap((action: any) => this.quizService.getQuestionList(action.payload)\n                .pipe(\n                    map((questions: IQuestion[]) => new fromQuiz.SetQuestionsByTest(questions)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )),\n        );\n\n    @Effect()\n    refreshQuestions$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.RefreshQuestions),\n            map((action: any) => new fromQuiz.SetQuestionsByTest(action.payload))\n        );\n\n    @Effect()\n    loadQuestionById$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.LoadQuestionById),\n            mergeMap((action: any) => {\n                const {testId, questionId} = action.payload;\n                return this.quizService.getQuestionById(testId, questionId)\n                    .pipe(\n                        map((question: object) => new fromQuiz.LoadedQuestionById(question)),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromQuiz.QuizErrors(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    createQuestionForTest$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.CreateQuestionForTest),\n            withLatestFrom(this.store.select(selectTestQuestions)),\n            switchMap(([action, questions]: any[]) => {\n                const {testId, question} = action.payload;\n                return this.quizService.createQuestion(question, testId)\n                    .pipe(\n                        map((item: IQuestion) => {\n                            const message = {user: ToastrUsersType.QUESTION, type: ToastrMessageType.CREATE};\n                            if (item) {\n                                const answers = item.answers.map((answer: IAnswers) => answerMapperFromServer(answer));\n                                const mappedItem = questionMapperFromServer(item, answers);\n                                questions.push(mappedItem);\n                                this.messageService.showToastrSuccess(message);\n                                return new fromQuiz.RefreshQuestions(questions);\n                            }\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromQuiz.QuizErrors(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    deleteQuestionFromTest$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.DeleteQuestionFromTest),\n            withLatestFrom(this.store.select(selectTestQuestions)),\n            switchMap(([action, questions]: any[]) => {\n                const {testId, questionId} = action.payload;\n                return this.quizService.deleteQuestion(questionId, testId)\n                    .pipe(\n                        map(() => {\n                            const message = {user: ToastrUsersType.QUESTION, type: ToastrMessageType.REMOVE};\n                            questions = questions.filter((question: IQuestion) => question.id !== questionId);\n                            this.messageService.showToastrSuccess(message);\n                            return new fromQuiz.RefreshQuestions(questions);\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromQuiz.QuizErrors(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    updateQuestionById = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.UpdateQuestion),\n            withLatestFrom(this.store.select(selectTestQuestions)),\n            switchMap(([action, questions]: any[]) => {\n                const {testId, questionId, question} = action.payload;\n                return this.quizService.updateQuestion(testId, questionId, question)\n                    .pipe(\n                        map((item: IQuestion) => {\n                            const message = {user: ToastrUsersType.QUESTION, type: ToastrMessageType.UPDATE};\n                            this.messageService.showToastrSuccess(message);\n                            questions = questions.map((el: IQuestion) => el.id === questionId ? item : el);\n                            return new fromQuiz.RefreshQuestions(questions);\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromQuiz.QuizErrors(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    loadStandardsCategories$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.LoadCategories),\n            mergeMap(() => this.quizService.getStandardsCategories()\n                .pipe(\n                    map((categories: IStandardCategory[]) => new fromQuiz.LoadedCategories(categories)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshStandardsCategories$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.RefreshCategories),\n            map((action: any) => new fromQuiz.LoadedCategories(action.payload)),\n            catchError((err) => of(new fromQuiz.QuizErrors(err)))\n        );\n\n    @Effect()\n    createCategory$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.CreateCategory),\n            withLatestFrom(this.store.select(selectCategories)),\n            switchMap(([action, categories]: any[]) => this.quizService.createStandardsCategory(action.payload)\n                .pipe(\n                    map((category: IStandardCategory) => {\n                        const message = {user: ToastrUsersType.CATEGORY, type: ToastrMessageType.CREATE};\n                        if (category) {\n                            this.messageService.showToastrSuccess(message);\n                            categories.push(category);\n                        }\n\n                        return new fromQuiz.RefreshCategories(categories);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    updateCategory$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.UpdateCategory),\n            withLatestFrom(this.store.select(selectCategories)),\n            switchMap(([action, categories]: any[]) => this.quizService.updateCategory(action.payload)\n                .pipe(\n                    map((category: IStandardCategory) => {\n                        const message = {user: ToastrUsersType.CATEGORY, type: ToastrMessageType.UPDATE};\n                        if (category) {\n                            this.messageService.showToastrSuccess(message);\n                            categories = categories.map((item: IStandardCategory) =>\n                                item.id === category.id ? category : item);\n                        }\n\n                        return new fromQuiz.RefreshCategories(categories);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    deleteCategory$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.DeleteCategory),\n            withLatestFrom(this.store.select(selectCategories)),\n            switchMap(([action, categories]: any[]) => this.quizService.deleteCategory(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.CATEGORY, type: ToastrMessageType.REMOVE};\n                        this.messageService.showToastrSuccess(message);\n                        categories = categories.filter((item: IStandardCategory) => item.id !== action.payload);\n                        return new fromQuiz.RefreshCategories(categories);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadConditions$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.LoadConditions),\n            mergeMap(() => this.quizService.getConditions()\n                .pipe(\n                    map((conditions: ICondition[]) => new fromQuiz.LoadedConditions(conditions)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshConditions$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.RefreshConditions),\n            map((action: any) => new fromQuiz.LoadedConditions(action.payload)),\n            catchError((err) => of(new fromQuiz.QuizErrors(err)))\n        );\n\n    @Effect()\n    createConditions$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.CreateCondition),\n            withLatestFrom(this.store.select(selectConditions)),\n            switchMap(([action, conditions]: any) => this.quizService.createCondition(action.payload)\n                .pipe(\n                    map((condition) => {\n                        const message = {user: ToastrUsersType.CONDITION, type: ToastrMessageType.CREATE};\n                        if (condition) {\n                            this.messageService.showToastrSuccess(message);\n                            conditions.push(condition);\n                        }\n\n                        return new fromQuiz.RefreshConditions(conditions);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    updateConditions$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.UpdateCondition),\n            withLatestFrom(this.store.select(selectConditions)),\n            switchMap(([action, conditions]: any) => this.quizService.updateCondition(action.payload)\n                .pipe(\n                    map((condition) => {\n                        const message = {user: ToastrUsersType.CONDITION, type: ToastrMessageType.UPDATE};\n                        if (condition) {\n                            this.messageService.showToastrSuccess(message);\n                            conditions = conditions.map((item: ICondition) => item.id === condition.id ? condition : item);\n                        }\n\n                        return new fromQuiz.RefreshConditions(conditions);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    deleteConditions$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.DeleteCondition),\n            withLatestFrom(this.store.select(selectConditions)),\n            switchMap(([action, conditions]: any) => this.quizService.deleteCondition(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.CONDITION, type: ToastrMessageType.REMOVE};\n                        this.messageService.showToastrSuccess(message);\n                        conditions = conditions.filter((item: ICondition) => item.id !== action.payload);\n\n                        return new fromQuiz.RefreshConditions(conditions);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadUnits$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.LoadUnits),\n            mergeMap(() => this.quizService.getUnits()\n                .pipe(\n                    map((units: IConditionUnits[]) => new fromQuiz.LoadedUnits(units)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshUnits$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.RefreshUnits),\n            map((action: any) => new fromQuiz.LoadedUnits(action.payload)),\n            catchError((err) => {\n                this.messageService.showPushNotification(err);\n                this.messageService.showToastrError(err);\n                return of(new fromQuiz.QuizErrors(err));\n            })\n        );\n\n    @Effect()\n    createUnit$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.CreateUnit),\n            withLatestFrom(this.store.select(selectUnits)),\n            switchMap(([action, units]: any) => this.quizService.createUnit(action.payload)\n                .pipe(\n                    map((unit: IConditionUnits) => {\n                        const message = {user: ToastrUsersType.UNIT, type: ToastrMessageType.CREATE};\n                        if (unit) {\n                            this.messageService.showToastrSuccess(message);\n                            units.push(unit);\n                        }\n\n                        return new fromQuiz.RefreshConditions(units);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    deleteUnit$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.DeleteUnit),\n            withLatestFrom(this.store.select(selectUnits)),\n            switchMap(([action, units]: any) => this.quizService.deleteUnit(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.UNIT, type: ToastrMessageType.REMOVE};\n                        this.messageService.showToastrSuccess(message);\n                        units = units.filter((item: IConditionUnits) => item.id !== action.payload);\n\n                        return new fromQuiz.RefreshUnits(units);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadStandardsBySubject$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.LoadStandards),\n            mergeMap((action: any) => this.quizService.getStandardsBySubject(action.payload)\n                .pipe(\n                    map((standards: IStandard[]) => new fromQuiz.LoadedStandards(standards)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshSubjects$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.RefreshStandards),\n            map((action: any) => new fromQuiz.LoadedStandards(action.payload)),\n            catchError((err) => of(new fromQuiz.QuizErrors(err)))\n        );\n\n    @Effect()\n    createStandard$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.CreateStandards),\n            withLatestFrom(this.store.select(selectStandards)),\n            switchMap(([action, standards]: any[]) => this.quizService.createStandard(action.payload)\n                .pipe(\n                    map((standard: IStandard) => {\n                        const message = {user: ToastrUsersType.STANDARD, type: ToastrMessageType.CREATE};\n                        if (standard) {\n                            this.messageService.showToastrSuccess(message);\n                            standards.push(standard);\n                        }\n\n                        return new fromQuiz.RefreshStandards(standards);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    updateStandard$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.UpdateStandards),\n            withLatestFrom(this.store.select(selectStandards)),\n            switchMap(([action, standards]: any[]) => this.quizService.updateStandard(action.payload)\n                .pipe(\n                    map((standard: IStandard) => {\n                        const message = {user: ToastrUsersType.STANDARD, type: ToastrMessageType.UPDATE};\n                        if (standard) {\n                            this.messageService.showToastrSuccess(message);\n                            standards = standards.map((item: IStandard) => item.id === standard.id ? standard : item);\n                        }\n\n                        return new fromQuiz.RefreshStandards(standards);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    deleteStandard$ = this.actions$\n        .pipe(\n            ofType(fromQuiz.ActionTypes.DeleteStandards),\n            withLatestFrom(this.store.select(selectStandards)),\n            switchMap(([action, standards]: any[]) => this.quizService.deleteStandard(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.STANDARD, type: ToastrMessageType.REMOVE};\n                        this.messageService.showToastrSuccess(message);\n                        standards = standards.filter((item: IStandard) => item.id !== action.payload);\n\n                        return new fromQuiz.RefreshStandards(standards);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromQuiz.QuizErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadCurrentStandard$ = this.actions$.pipe(\n        ofType(fromQuiz.ActionTypes.LoadCurrentStandard),\n        map((action: any) => new fromQuiz.LoadedCurrentStandard(action.payload))\n    );\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\n\nimport {TableModule} from '@table/table.module';\nimport {SubjectsComponent} from './components/subjects/subjects.component';\nimport {TestsComponent} from './components/tests/tests.component';\nimport {QuestionsComponent} from './components/questions/questions.component';\nimport {StandardsComponent} from './components/standards/standards.component';\nimport {CategoriesComponent} from './components/categories/categories.component';\nimport {ConditionsComponent} from './components/conditions/conditions.component';\nimport {UnitsComponent} from './components/units/units.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {StandardDetailsComponent} from './components/standard-details/standard-details.component';\nimport {StandardExamComponent} from './components/standard-exam/standard-exam.component';\n\nexport const routes: Routes = [\n    {\n        path: '',\n        component: SubjectsComponent\n    },\n];\n\n@NgModule({\n    declarations: [\n        SubjectsComponent,\n        TestsComponent,\n        QuestionsComponent,\n        StandardsComponent,\n        CategoriesComponent,\n        ConditionsComponent,\n        UnitsComponent,\n        StandardDetailsComponent,\n        StandardExamComponent\n    ],\n    imports: [\n        CommonModule,\n        TableModule,\n        TranslateModule,\n        FontAwesomeModule,\n        RouterModule.forChild(routes)\n    ],\n})\nexport class QuizModule {\n}\n","import {ActionTypes, ICurrentStandard, QuizActions} from '../actions/actions';\nimport {IQuestion, ISubject, ITest} from '@models/interfaces/quiz';\nimport {ICondition, IConditionUnits, IStandard, IStandardCategory} from '@models/interfaces/standard';\n\nexport interface State {\n    subjects: ISubject[];\n    tests: ITest[];\n    questions: IQuestion[];\n    currentQuestion: object;\n    standardsCategories: IStandardCategory[];\n    standardsConditions: ICondition[];\n    units: IConditionUnits[];\n    standards: IStandard[];\n    currentStandard: ICurrentStandard;\n    errors?: any;\n}\n\nexport const initialState: State = {\n    subjects: undefined,\n    tests: null,\n    questions: null,\n    currentQuestion: {},\n    standardsCategories: undefined,\n    standardsConditions: undefined,\n    units: undefined,\n    standards: undefined,\n    currentStandard: undefined\n};\n\nexport function reducer(state: State = initialState, action: QuizActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedSubjects:\n            return {...state, subjects: action.payload};\n        case ActionTypes.LoadedTestsBySubject:\n            return {...state, tests: action.payload};\n        case ActionTypes.SetQuestionsByTest:\n            return {...state, questions: action.payload};\n        case ActionTypes.QuizErrors:\n            return {...state, errors: action.payload};\n        case ActionTypes.LoadedQuestionById:\n            return {...state, currentQuestion: action.payload};\n        case ActionTypes.LoadedStandards:\n            return {...state, standards: action.payload};\n        case ActionTypes.LoadedCategories:\n            return {...state, standardsCategories: action.payload};\n        case ActionTypes.LoadedConditions:\n            return {...state, standardsConditions: action.payload};\n        case ActionTypes.LoadedUnits:\n            return {...state, units: action.payload};\n        case ActionTypes.LoadedCurrentStandard:\n            return {...state, currentStandard: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\n\nimport * as fromQuiz from '@quiz/reducers/reducer';\n\nexport const selectQuiz = createFeatureSelector<fromQuiz.State>('quiz');\n\nexport const selectSubjects = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.subjects\n);\n\nexport const selectSubjectTests = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.tests\n);\n\nexport const selectTestQuestions = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.questions\n);\n\nexport const selectQuestionbyId = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.currentQuestion\n);\n\nexport const selectQuizErrors = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.errors\n);\n\nexport const selectCategories = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.standardsCategories\n);\n\nexport const selectConditions = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.standardsConditions\n);\n\nexport const selectUnits = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.units\n);\n\nexport const selectStandards = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.standards\n);\n\nexport const selectCurrentStandard = createSelector(\n    selectQuiz,\n    (state: fromQuiz.State) => state.currentStandard\n);\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '@environments/environment';\nimport {IQuestion, ISubject, ITest, IAnswers} from '@models/interfaces/quiz';\nimport {\n    answerMapperFromServer, answerMapperToServer, conditionsMapper,\n    questionMapperFromServer,\n    questionMapperToServer,\n    quizMapperFromServer,\n    quizMapperToServer, standardMapperFromServer, standardMapperToServer,\n    subjectMapperFromServer\n} from '@mappers/quiz.mapper';\nimport {ICondition, IConditionUnits, IStandard, IStandardCategory} from '@models/interfaces/standard';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QuizService {\n    private quizBaseUrl: string = environment.BASE_URL + '/api/quiz/' + environment.version;\n    private categoryBaseUrl: string = environment.BASE_URL + '/api/category/' + environment.version;\n    private conditionsBaseUrl: string = environment.BASE_URL + '/api/common/condition/' + environment.version;\n    private unitsBaseUrl: string = environment.BASE_URL + '/api/name/' + environment.version;\n    private standardsBaseUrl: string = environment.BASE_URL + '/api/standard/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getSubjects(): Observable<ISubject[]> {\n        return this.http.get(this.quizBaseUrl + '/enum/subjects')\n            .pipe(map((response: ISubject[]) =>\n                response.map((item: ISubject) => subjectMapperFromServer(item))));\n    }\n\n    getTestsBySubject(subject: string): Observable<ITest[]> {\n        return this.http.get(this.quizBaseUrl + `/quiz/subject/${subject}`)\n            .pipe(map((response: any[]) => response.map((item) => quizMapperFromServer(item))));\n    }\n\n    createTest(test: ITest): Observable<ITest> {\n        const mappedData = quizMapperToServer(test);\n        return this.http.post(this.quizBaseUrl + '/quiz/create', mappedData)\n            .pipe(map((response: any) => response));\n    }\n\n    updateTest(testId: string, test: ITest): Observable<ITest> {\n        const mappedData = quizMapperToServer(test);\n        return this.http.put(this.quizBaseUrl + `/quiz/${testId}`, mappedData)\n            .pipe(map((response: any) => quizMapperFromServer(response)));\n    }\n\n    deleteTest(testId: string): Observable<any> {\n        return this.http.delete(this.quizBaseUrl + `/quiz/${testId}`)\n            .pipe(map((response: any) => response));\n    }\n\n    getQuestionList(testId: string): Observable<IQuestion[]> {\n        return this.http.get(this.quizBaseUrl + `/quiz/${testId}/list`)\n            .pipe(map((response: any) => {\n                return response.map((item: any) => {\n                    const answers = item.answers.map((answer: IAnswers) => answerMapperFromServer(answer));\n                    return questionMapperFromServer(item, answers);\n                });\n            }));\n    }\n\n    getQuestionById(testId: string, questionId: string): Observable<IQuestion> {\n        return this.http.get(this.quizBaseUrl + `/quiz/${testId}/question/${questionId}`)\n            .pipe(map((response: any) => {\n                const answers = response.answers.map((answer: IAnswers) => answerMapperFromServer(answer));\n                return questionMapperFromServer(response, answers);\n            }));\n    }\n\n    createQuestion(question: IQuestion, testId: string): Observable<IQuestion> {\n        const answers = question.answers.map((answer: IAnswers) => answerMapperToServer(answer));\n        const mappedData = questionMapperToServer(question, answers);\n        return this.http.post(this.quizBaseUrl + `/quiz/${testId}/question`, mappedData)\n            .pipe(map((response: IQuestion) => response));\n    }\n\n    updateQuestion(testId: string, questionId: string, question: any): Observable<any> {\n        const mappedAnswers = question.answers.map((answer: IAnswers) => answerMapperToServer(answer));\n        const mappedData = questionMapperToServer(question, mappedAnswers);\n        return this.http.put(this.quizBaseUrl + `/quiz/${testId}/question/${questionId}`, mappedData)\n            .pipe(map((response: any) => {\n                const answers = response.answers.map((answer: IAnswers) => answerMapperFromServer(answer));\n                return questionMapperFromServer(response, answers);\n            }));\n    }\n\n    deleteQuestion(questionId: string, testId: string): Observable<any> {\n        return this.http.delete(this.quizBaseUrl + `/quiz/${testId}/question/${questionId}`)\n            .pipe(map((response: any) => response));\n    }\n\n    getStandardsCategories(): Observable<IStandardCategory[]> {\n        return this.http.get(this.categoryBaseUrl + '/get/all/categories')\n            .pipe(map((response: IStandardCategory[]) => response));\n    }\n\n    createStandardsCategory(category: IStandardCategory): Observable<IStandardCategory> {\n        return this.http.post(this.categoryBaseUrl + '/post/category', category)\n            .pipe(map((response: IStandardCategory) => response));\n    }\n\n    updateCategory(category: IStandardCategory): Observable<IStandardCategory> {\n        return this.http.put(this.categoryBaseUrl + `/put/category/${category.id}`, category)\n            .pipe(map((response: IStandardCategory) => response));\n    }\n\n    deleteCategory(categoryId: string): Observable<any> {\n        return this.http.delete(this.categoryBaseUrl + `/delete/category/${categoryId}`)\n            .pipe(map((response) => response));\n    }\n\n    getConditions(): Observable<ICondition[]> {\n        return this.http.get(this.conditionsBaseUrl + '/get/all')\n            .pipe(map((response: ICondition[]) => response));\n    }\n\n    createCondition(condition: ICondition): Observable<ICondition> {\n        const body = conditionsMapper(condition);\n        return this.http.post(this.conditionsBaseUrl + '/post/common/condition', body)\n            .pipe(map((response: ICondition) => response));\n    }\n\n    updateCondition(condition: ICondition): Observable<ICondition> {\n        const body = conditionsMapper(condition);\n        return this.http.put(this.conditionsBaseUrl + `/put/common/condition/${condition.id}`, body)\n            .pipe(map((response: ICondition) => response));\n    }\n\n    deleteCondition(conditionId: string): Observable<any> {\n        return this.http.delete(this.conditionsBaseUrl + `/delete/${conditionId}`)\n            .pipe(map((response) => response));\n    }\n\n    getUnits(): Observable<IConditionUnits[]> {\n        return this.http.get(this.unitsBaseUrl + '/get/name')\n            .pipe(map((response: IConditionUnits[]) => response));\n    }\n\n    createUnit(unit: IConditionUnits): Observable<IConditionUnits> {\n        return this.http.post(this.unitsBaseUrl + '/post/unit', unit)\n            .pipe(map((response: IConditionUnits) => response));\n    }\n\n    deleteUnit(unitId: string): Observable<any> {\n        return this.http.delete(this.unitsBaseUrl + `/delete/unit/${unitId}`)\n            .pipe(map((response) => response));\n    }\n\n    getStandardsBySubject(subjectId: string): Observable<IStandard[]> {\n        return this.http.get(this.standardsBaseUrl + `/get/standards/${subjectId}`)\n            .pipe(map((response: IStandard[]) => response.map((item) => standardMapperFromServer(item))));\n    }\n\n    createStandard(standard: IStandard): Observable<IStandard> {\n        const mappedData = standardMapperToServer(standard);\n        return this.http.post(this.standardsBaseUrl + '/post/standard', mappedData)\n            .pipe(map((response: IStandard) => standardMapperFromServer(response)));\n    }\n\n    updateStandard(standard: IStandard): Observable<IStandard> {\n        const mappedData = standardMapperToServer(standard);\n        return this.http.put(this.standardsBaseUrl + `/put/standard/${standard.id}`, mappedData)\n            .pipe(map((response: IStandard) => standardMapperFromServer(response)));\n    }\n\n    deleteStandard(standardId): Observable<any> {\n        return this.http.delete(this.standardsBaseUrl + `/delete/standard/${standardId}`)\n            .pipe(map((response) => response));\n    }\n}\n","import {Action} from '@ngrx/store';\nimport {IStatus} from '@models/interfaces/human';\nimport {IRank} from '@models/interfaces/ranks';\n\nexport enum ActionTypes {\n    LoadWeaponTypes = '[Shared] Load Weapon Types',\n    LoadClassifiers = '[Shared] Load Classifiers',\n    LoadLevels = '[Shared] Load Levels',\n    LoadValidations = '[Shared] Load Validations',\n    LoadCompetitorMarks = '[Shared] Load Competitors Marks',\n    LoadedWeaponTypes = '[Shared] Loaded Weapon Types',\n    LoadedClassifiers = '[Shared] Loaded Classifiers',\n    LoadedLevels = '[Shared] Loaded Levels',\n    LoadedValidations = '[Shared] Loaded Validations',\n    LoadedCompetitorMarks = '[Shared] Loaded Competitors Marks',\n    SharedErrors = '[Shared] Shared Errors',\n    LoadDisqualificationTypes = '[Shared] Load Disqualification Types',\n    LoadedDisqualificationTypes = '[Shared] Loaded Disqualification Types',\n    GetQueries = '[Shared] Get Queries',\n    SetQueries = '[Shared] Set Queries',\n    UploadImage = '[Shared] Upload Image',\n    UploadedImage = '[Shared] Uploaded Image',\n    DeleteImage = '[Shared] Delete Image',\n    LoadStatuses = '[Shared] Load Statuses',\n    LoadedStatuses = '[Shared] Loaded Statuses',\n    LoadTimeIntervals = '[Shared] Load Time Intervals',\n    LoadedTimeIntervals = '[Shared] Loaded Time Intervals',\n    LoadUserById = '[Shared] Load User By ID',\n    LoadedUserById = '[Shared] Loaded User By ID',\n    LoadRanks = '[Shared] Load Ranks',\n    LoadedRanks = '[Shared] Loaded Ranks'\n}\n\ninterface IPayload {\n    weaponTypes?: any[];\n    levels?: any[];\n    classifiers: any[];\n    validators: any;\n}\n\nexport class GetQueries implements Action {\n    readonly type = ActionTypes.GetQueries;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class SetQueries implements Action {\n    readonly type = ActionTypes.SetQueries;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadClassifiers implements Action {\n    readonly type = ActionTypes.LoadClassifiers;\n}\n\nexport class LoadedClassifiers implements Action {\n    readonly type = ActionTypes.LoadedClassifiers;\n\n    constructor(public payload: any[]) {\n    }\n}\n\nexport class LoadWeaponTypes implements Action {\n    readonly type = ActionTypes.LoadWeaponTypes;\n}\n\nexport class LoadedWeaponTypes implements Action {\n    readonly type = ActionTypes.LoadedWeaponTypes;\n\n    constructor(public payload: any[]) {\n    }\n}\n\nexport class LoadLevels implements Action {\n    readonly type = ActionTypes.LoadLevels;\n}\n\nexport class LoadedLevels implements Action {\n    readonly type = ActionTypes.LoadedLevels;\n\n    constructor(public payload: any[]) {\n    }\n}\n\nexport class LoadValidations implements Action {\n    readonly type = ActionTypes.LoadValidations;\n}\n\nexport class LoadedValidations implements Action {\n    readonly type = ActionTypes.LoadedValidations;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadCompetitorMarks implements Action {\n    readonly type = ActionTypes.LoadCompetitorMarks;\n}\n\nexport class LoadedCompetitorMarks implements Action {\n    readonly type = ActionTypes.LoadedCompetitorMarks;\n\n    constructor(public payload: string[]) {\n    }\n}\n\nexport class SharedErrors implements Action {\n    readonly type = ActionTypes.SharedErrors;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadDisqualificationTypes implements Action {\n    readonly type = ActionTypes.LoadDisqualificationTypes;\n}\n\nexport class LoadedDisqualificationTypes implements Action {\n    readonly type = ActionTypes.LoadedDisqualificationTypes;\n\n    constructor(public payload: string[]) {\n    }\n}\n\nexport class UploadImage implements Action {\n    readonly type = ActionTypes.UploadImage;\n\n    constructor(public payload: File) {\n    }\n}\n\nexport class UploadedImage implements Action {\n    readonly type = ActionTypes.UploadedImage;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class DeleteImage implements Action {\n    readonly type = ActionTypes.DeleteImage;\n\n    constructor(public payload: string) {\n    }\n}\n\n\nexport class LoadStatuses implements Action {\n    readonly type = ActionTypes.LoadStatuses;\n}\n\nexport class LoadedStatuses implements Action {\n    readonly type = ActionTypes.LoadedStatuses;\n\n    constructor(public payload: IStatus[]) {\n    }\n}\n\nexport class LoadTimeIntervals implements Action {\n    readonly type = ActionTypes.LoadTimeIntervals;\n}\n\nexport class LoadedTimeIntervals implements Action {\n    readonly type = ActionTypes.LoadedTimeIntervals;\n\n    constructor(public payload: string[]) {\n    }\n}\n\nexport class LoadUserById implements Action {\n    readonly type = ActionTypes.LoadUserById;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class LoadedUserById implements Action {\n    readonly type = ActionTypes.LoadedUserById;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadRanks implements Action {\n    readonly type = ActionTypes.LoadRanks;\n}\n\nexport class LoadedRanks implements Action {\n    readonly type = ActionTypes.LoadedRanks;\n\n    constructor(public payload: IRank[]) {\n    }\n}\n\nexport type SharedAction = LoadWeaponTypes | LoadClassifiers | LoadLevels |\n    LoadedWeaponTypes | LoadedClassifiers | LoadedLevels | LoadValidations | LoadedValidations |\n    LoadCompetitorMarks | LoadedCompetitorMarks | SharedErrors | LoadDisqualificationTypes |\n    LoadedDisqualificationTypes | GetQueries | SetQueries | UploadImage | UploadedImage |\n    LoadStatuses | LoadedStatuses | LoadTimeIntervals | LoadedTimeIntervals | DeleteImage |\n    LoadUserById | LoadedUserById | LoadRanks | LoadedRanks;\n","<div *ngIf=\"form\" [formGroup]=\"form\" class=\"datepicker\">\n    <div class=\"input-group\">\n        <input type=\"text\"\n               class=\"form-control\"\n               [placeholder]=\"'choose' | translate: {value: (controlName | translate).toLowerCase()}\"\n               [value]=\"form?.controls[controlName].value | date\"\n               [formControlName]=\"controlName\"\n               [ngClass]=\"{'is-invalid': submitted && form?.controls[controlName].errors}\"\n        >\n        <div class=\"input-group-append\"\n             [ngClass]=\"{'is-invalid': submitted && form?.controls[controlName].errors}\"\n             (click)=\"onToggle()\"\n        >\n            <span class=\"input-group-text datepicker__action\"\n                  [ngClass]=\"{'is-invalid': submitted && form?.controls[controlName].errors}\"\n            >\n                <fa-icon [classes]=\"'datepicker__action__icon'\"\n                         [icon]=\"icons.calendar\"\n                         [style]=\"{'color': 'white'}\"\n                ></fa-icon>\n            </span>\n        </div>\n    </div>\n    <ngb-datepicker (select)=\"onDateSelected($event)\"\n                    [className]=\"'datepicker__body'\"\n                    *ngIf=\"isVisible\"\n                    [minDate]=\"minDate\"\n                    [maxDate]=\"maxDate\"\n    ></ngb-datepicker>\n</div>\n\n","import {Component, EventEmitter, Injectable, Input, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {NgbDateNativeAdapter, NgbDatepickerI18n, NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport {FormGroup} from '@angular/forms';\nimport {Icons} from '@models/constants/icons';\n\nconst I18N_VALUES = {\n    ru: {\n        weekdays: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\n        months: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    },\n    kk: {\n        weekdays: ['Дс', 'Сс', 'Ср', 'Бс', 'Жм', 'Сб', 'Жк'],\n        months: ['Қаң', 'Ақп', 'Нау', 'Сәу', 'Мам', 'Мау', 'Шіл', 'Там', 'Қыр', 'Қаз', 'Қар', 'Жел'],\n    }\n};\n\n@Injectable()\nexport class CustomDatepickerI18n extends NgbDatepickerI18n {\n\n    constructor() {\n        super();\n    }\n\n    getWeekdayShortName(weekday: number): string {\n        return I18N_VALUES[localStorage.getItem('lang')].weekdays[weekday - 1];\n    }\n\n    getMonthShortName(month: number): string {\n        return I18N_VALUES[localStorage.getItem('lang')].months[month - 1];\n    }\n\n    getMonthFullName(month: number): string {\n        return this.getMonthShortName(month);\n    }\n\n    getDayAriaLabel(date: NgbDateStruct): string {\n        return `${date.day}-${date.month}-${date.year}`;\n    }\n}\n\n@Component({\n    selector: 'app-datepicker',\n    templateUrl: './datepicker.component.html',\n    styleUrls: ['./datepicker.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [{provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n}]\n})\n\nexport class DatepickerComponent implements OnInit {\n    public icons = Icons;\n    public isVisible = false;\n    public minDate: NgbDateStruct = {year: 1900, month: 1, day: 1};\n    public maxDate: NgbDateStruct = {year: 2100, month: 1, day: 1};\n    @Input() submitted: boolean;\n    @Input() controlName: string;\n    @Input() form: FormGroup;\n    @Input() fieldValue: string;\n    @Output() setControlValue: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor(private dateAdapter: NgbDateNativeAdapter) {\n    }\n\n    ngOnInit() {\n    }\n\n    onDateSelected(value) {\n        const date = this.dateAdapter.toModel(value);\n        this.setControlValue.emit(date.toISOString());\n        this.onToggle();\n    }\n\n    onToggle() {\n        this.isVisible = !this.isVisible;\n    }\n\n}\n","<div class=\"col empty-search text-center font-weight-bold\">\n  <h2 class=\"empty-search__text\">{{'emptySearch' | translate: {'value': searchableValue} }}</h2>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-empty-search',\n  templateUrl: './empty-search.component.html',\n  styleUrls: ['./empty-search.component.scss']\n})\nexport class EmptySearchComponent implements OnInit {\n  @Input() searchableValue: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"submitted && form.controls[controlName]?.errors\"\n     class=\"invalid-feedback login__form__error\"\n>\n    <div *ngIf=\"form.controls[controlName]?.errors.required\">\n        {{'requiredValidation' | translate:{name: controlName | translate: {ending: 'я'} } }}\n    </div>\n\n    <div *ngIf=\"form.controls[controlName]?.errors.minlength\">\n        {{'minLengthValidation' | translate:{\n        name: controlName | translate,\n        'value': form.controls[controlName]?.errors.minlength.requiredLength\n    } }}\n    </div>\n    <div *ngIf=\"form.controls[controlName]?.errors.maxlength\">\n        {{'maxLengthValidation' | translate:{\n        name: controlName | translate,\n        'value': form.controls[controlName]?.errors.maxlength.requiredLength\n    } }}\n    </div>\n    <div *ngIf=\"form.controls[controlName]?.errors.min\">\n        {{'minValueValidation' | translate:{\n        name: controlName | translate,\n        'value': form.controls[controlName]?.errors.min.min\n    } }}\n    </div>\n    <div *ngIf=\"form.controls[controlName]?.errors.max\">\n        {{'maxValueValidation' | translate:{\n        name: controlName | translate,\n        'value': form.controls[controlName]?.errors.max.max\n    } }}\n    </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n    selector: 'app-error',\n    templateUrl: './error.component.html',\n    styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n    @Input() form: FormGroup;\n    @Input() submitted: boolean;\n    @Input() controlName: string | any;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n}\n","<div class=\"container-fluid bg-primary\" [@EnterLeave]>\n    <div class=\"row\">\n        <nav class=\"navbar navbar-expand-lg align-items-center header p-0\">\n            <a [routerLink]=\"'/dashboard'\" class=\"navbar-brand header__logo d-flex\">\n                <div class=\"header__logo__image mr-2\">\n                    <img src=\"./assets/images/ipsc.svg\" alt=\"logo\">\n                </div>\n                <h1 class=\"header__logo__title\">IPSC</h1>\n            </a>\n            <ul class=\"breadcrumb m-0\">\n                <li class=\"breadcrumb-item\"\n                    *ngFor=\"let item of breadcrumbList; let i = index\"\n                    [class.active]=\"i === breadcrumbList.length - 1\">\n                    <a *ngIf=\"i !== breadcrumbList.length-1\" (click)=\"goTo(item.path)\">\n                        {{ item.name | translate | titlecase }}\n                    </a>\n                    <span *ngIf=\"i===breadcrumbList.length-1\">{{ item.name | translate | titlecase }}</span>\n                </li>\n            </ul>\n            <ul class=\"nav navbar-nav\" (mouseleave)=\"isShow = false\">\n                <li class=\"nav-item pl-3 pr-3\" (click)=\"show()\">\n                    <div class=\"dropdown\" [ngClass]=\"{'show': isShow}\">\n                        <span class=\"dropdown-toggle\"\n                        >\n                            {{'language' | translate}}\n                        </span>\n                        <div class=\"dropdown-menu\"\n                             [ngClass]=\"{'show': isShow}\"\n                        >\n                            <span class=\"dropdown-item p-3 text-center\" (click)=\"useLanguage('ru')\">Русский</span>\n                            <span class=\"dropdown-item p-3 text-center\" (click)=\"useLanguage('kk')\">Қазақша</span>\n                        </div>\n                    </div>\n                </li>\n                <li class=\"nav-item pl-3 pr-3\" (click)=\"openDialogModal('logoutQuestion')\">\n                    <span>{{'exit' | translate}}</span>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Store} from '@ngrx/store';\n\nimport {LoginService} from '@login/services/login.service';\nimport {Animations} from '@models/constants/animations';\nimport {Router} from '@angular/router';\nimport {SharedService} from '@shared/services/shared.service';\nimport {selectQueries} from '@shared/selectors/selectors';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {ModalService} from '@modal/services/modal.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss'],\n    animations: [Animations.enterLeaveTop]\n})\nexport class HeaderComponent implements OnInit {\n    public isShow = false;\n    public menu: any[] = [];\n    public breadcrumbList: any[] = [];\n    public query: any;\n\n    constructor(private translate: TranslateService,\n                public loginService: LoginService,\n                private router: Router,\n                private sharedService: SharedService,\n                private store: Store<any>,\n                private modalService: ModalService) {\n    }\n\n    ngOnInit() {\n        this.menu = this.sharedService.getMenu();\n        this.listenRouting();\n    }\n\n    listenRouting() {\n        let routerUrl: string, routerList: Array<any>, target: any;\n        this.router.events.subscribe((router: any) => {\n            this.getQueries();\n            routerUrl = router.urlAfterRedirects;\n            if (routerUrl && typeof routerUrl === 'string') {\n                target = this.menu;\n                this.breadcrumbList.length = 0;\n                routerList = routerUrl.slice(1).split('/');\n                routerList.forEach((item, index) => {\n                    const n = item.indexOf('?');\n                    item = item.substring(0, n !== -1 ? n : item.length);\n                    target = target.find(page => page.path.slice(1) === item);\n                    const currentPath = (index === 0) ? target.path :\n                        `${this.breadcrumbList[index - 1].path}/${target.path.slice(1)}`;\n                    this.breadcrumbList.push(\n                        {\n                            name: target.name,\n                            path: currentPath\n                        }\n                    );\n\n                    if (index + 1 !== routerList.length) {\n                        target = target.children;\n                    }\n                });\n            }\n        });\n    }\n\n    getQueries() {\n        this.store.select(selectQueries).subscribe((query) => this.query = query);\n    }\n\n    goTo(path: string) {\n        this.router.navigate([path], {queryParams: this.query});\n    }\n\n    openDialogModal(message: string) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.logout();\n                }\n            });\n    }\n\n\n    useLanguage(language: string) {\n        this.translate.use(language);\n        localStorage.setItem('lang', language);\n    }\n\n    show() {\n        this.isShow = !this.isShow;\n    }\n\n    logout() {\n        this.loginService.logOut();\n    }\n\n}\n","<label class=\"btn btn-primary w-100 h-100 position-relative justify-content-center align-items-center\"\n       [ngClass]=\"{\n        'd-none': imageFileValue && imageFileValue?.nativeElement.files[0],\n        'd-flex': !imageFileValue?.nativeElement.files[0]\n        }\"\n       *ngIf=\"!imagePath\"\n>\n    <fa-icon [icon]=\"icons.uploadFile\" [size]=\"'3x'\"></fa-icon>\n    <input type=\"file\"\n           #imageFile\n           class=\"d-none position-absolute\"\n           [accept]=\"'image/*'\"\n           (change)=\"checkFile(imageFile)\">\n</label>\n<ng-container *ngIf=\"!imagePath\">\n    <span class=\"row d-flex flex-column\" *ngIf=\"imageFileValue && imageFileValue?.nativeElement.files[0]\">\n    <span class=\"col mb-4 text-center\">{{imageFileValue?.nativeElement.files[0]?.name}}</span>\n    <span class=\"col d-flex justify-content-around\">\n        <button class=\"btn btn-rounded\" (click)=\"uploadImage()\">\n            <fa-icon [icon]=\"icons.checkIcon\" [size]=\"'lg'\"></fa-icon>\n        </button>\n        <button class=\"btn btn-rounded\" (click)=\"resetImage()\">\n            <fa-icon [icon]=\"icons.closeIcon\" [size]=\"'lg'\"></fa-icon>\n        </button>\n    </span>\n</span>\n</ng-container>\n<div *ngIf=\"imagePath\" class=\"image h-100 w-100\"\n     [ngStyle]=\"{'backgroundImage': 'url(' + imageUrl + '/' + imagePath + ')', 'minHeight': '100px'}\"\n     (mouseenter)=\"enterLeaveMouse()\"\n     (mouseleave)=\"enterLeaveMouse()\"\n>\n    <div class=\"image__mask\" [ngClass]=\"{'active': isUnderBlock}\"\n    >\n        <button class=\"btn btn-rounded btn-danger\" (click)=\"onDeleteImage()\">\n            <fa-icon [icon]=\"icons.delete\"></fa-icon>\n        </button>\n    </div>\n</div>\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {Store} from '@ngrx/store';\n\nimport {Icons} from '@models/constants/icons';\nimport {SharedService} from '@shared/services/shared.service';\n\n@Component({\n    selector: 'app-image-loader',\n    templateUrl: './image-loader.component.html',\n    styleUrls: ['./image-loader.component.scss'],\n})\nexport class ImageLoaderComponent implements OnInit {\n    public icons = Icons;\n    public isUnderBlock = false;\n\n    @Input() imagePath: string;\n\n    @Output() checkFileChanges: EventEmitter<File> = new EventEmitter();\n    @Output() loadImage: EventEmitter<File> = new EventEmitter();\n    @Output() deleteImage: EventEmitter<string> = new EventEmitter();\n\n    @ViewChild('imageFile', { static: false }) imageFileValue: ElementRef;\n\n    constructor(private store: Store<any>,\n                private sharedService: SharedService) {\n    }\n\n    ngOnInit() {\n    }\n\n    checkFile(file) {\n        this.checkFileChanges.emit(file);\n    }\n\n    uploadImage() {\n        const file = this.imageFileValue.nativeElement.files[0];\n        this.loadImage.emit(file);\n    }\n\n    resetImage() {\n        this.imageFileValue.nativeElement.value = '';\n    }\n\n    onDeleteImage() {\n        this.deleteImage.emit(this.imagePath);\n    }\n\n    enterLeaveMouse() {\n        this.isUnderBlock = !this.isUnderBlock;\n    }\n\n    get imageUrl() {\n        return this.sharedService.imageBaseUrl;\n    }\n\n}\n","<div class=\"location-back justify-content-center d-flex align-items-center\" (click)=\"goBack()\">\n  <span class=\"location-back__action\">\n      <fa-icon [icon]=\"icons.back\" [size]=\"'2x'\"></fa-icon>\n  </span>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\n\nimport {Icons} from '@models/constants/icons';\n\n@Component({\n    selector: 'app-location-back',\n    templateUrl: './location-back.component.html',\n    styleUrls: ['./location-back.component.scss']\n})\nexport class LocationBackComponent implements OnInit {\n    public icons = Icons;\n\n    constructor(private location: Location) {\n    }\n\n    ngOnInit() {\n    }\n\n    goBack() {\n        this.location.back();\n    }\n\n}\n","<p>\n  modal-root works!\n</p>\n","import {Component, OnInit} from '@angular/core';\nimport {DialogsService} from '@shared/services/dialogs.service';\n\n@Component({\n    selector: 'app-modal-root',\n    templateUrl: './modal-root.component.html',\n    styleUrls: ['./modal-root.component.scss']\n})\nexport class ModalRootComponent implements OnInit {\n\n    constructor(private dialogsService: DialogsService) {\n    }\n\n    ngOnInit() {\n\n    }\n\n}\n","<div class=\"search\">\n  <div class=\"input-group\">\n    <input type=\"text\"\n           class=\"form-control\"\n           [placeholder]=\"'search' | translate\"\n           [(ngModel)]=\"searchValue\"\n           (keyup)=\"setValue()\"\n           >\n    <div class=\"input-group-append\">\n      <button class=\"input-group-text btn btn__md\">\n        <fa-icon [icon]=\"icons.search\" size=\"sm\"></fa-icon>\n      </button>\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Icons} from '@models/constants/icons';\n\n@Component({\n    selector: 'app-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n    public icons = Icons;\n    public searchValue = '';\n\n    @Output() valueChanges: EventEmitter<string> = new EventEmitter<string>();\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    setValue() {\n        this.valueChanges.emit(this.searchValue);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap, switchMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\nimport * as fromShared from '../actions/actions';\nimport {IStage} from '@models/interfaces/stage';\nimport {StagesService} from '@stages/service/stages.service';\nimport {SharedService} from '@shared/services/shared.service';\nimport {CompetitorsService} from '@competitors/services/competitors.service';\nimport {MessageService} from '@services/message.service';\nimport {IStatus, IUser} from '@models/interfaces/human';\nimport {IRank} from '@models/interfaces/ranks';\n\n@Injectable()\nexport class SharedEffects {\n\n\n    constructor(private actions$: Actions,\n                private stagesService: StagesService,\n                private sharedService: SharedService,\n                private competitorsService: CompetitorsService,\n                private messageService: MessageService) {\n    }\n\n    @Effect()\n    loadClassifiers$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadClassifiers),\n            mergeMap(() => this.stagesService.getClassifier()\n                .pipe(\n                    map((classifiers: IStage[]) => new fromShared.LoadedClassifiers(classifiers)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        return of(new fromShared.SharedErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadWeaponTypes$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadWeaponTypes),\n            mergeMap(() => this.stagesService.getWeaponTypes()\n                .pipe(\n                    map((weapons: any) => new fromShared.LoadedWeaponTypes(weapons)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                            return of(new fromShared.SharedErrors(err));\n                        }\n                    )\n                )\n            )\n        );\n\n    @Effect()\n    loadLevels$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadLevels),\n            mergeMap(() => this.stagesService.getLevels()\n                .pipe(\n                    map((levels: any) => new fromShared.LoadedLevels(levels)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                            return of(new fromShared.SharedErrors(err));\n                        }\n                    )\n                )\n            )\n        );\n\n    @Effect()\n    loadValidations$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadValidations),\n            mergeMap(() => this.sharedService.getValidations()\n                .pipe(\n                    map((validations: any) => new fromShared.LoadedValidations(validations)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        return of(new fromShared.SharedErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadCompetitorMarks$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadCompetitorMarks),\n            mergeMap(() => this.competitorsService.getCompetitorMarksList()\n                .pipe(\n                    map((marks: string[]) => new fromShared.LoadedCompetitorMarks(marks)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        return of(new fromShared.SharedErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadDisqualificationTypes$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadDisqualificationTypes),\n            mergeMap(() => this.sharedService.getDisqualificationTypes()\n                .pipe(\n                    map((types: string[]) => new fromShared.LoadedDisqualificationTypes(types)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        return of(new fromShared.SharedErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    getQueries$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.GetQueries),\n            map((action: any) => new fromShared.SetQueries(action.payload))\n        );\n\n    @Effect()\n    uploadImage$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.UploadImage),\n            switchMap((action: any) => this.sharedService.uploadImage(action.payload, action.payload.name)\n                .pipe(\n                    map((response) => new fromShared.UploadedImage(response)),\n                    catchError((err) => of(new fromShared.SharedErrors(err)))\n                )\n            )\n        );\n\n    @Effect()\n    deleteImage$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.DeleteImage),\n            switchMap((action: any) => this.sharedService.deleteImage(action.payload)\n                .pipe(\n                    map(() => new fromShared.UploadedImage('')),\n                    catchError((err) => of(new fromShared.SharedErrors(err)))\n                ))\n        );\n\n    @Effect()\n    loadStatuses$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadStatuses),\n            mergeMap(() => this.sharedService.getPersonStatuses()\n                .pipe(\n                    map((statuses: IStatus[]) => new fromShared.LoadedStatuses(statuses)),\n                    catchError((err) => of(new fromShared.SharedErrors(err)))\n                )\n            )\n        );\n\n    @Effect()\n    loadTimesInterval$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadTimeIntervals),\n            mergeMap(() => this.sharedService.getTimeIntervals()\n                .pipe(\n                    map((intervals: string[]) => new fromShared.LoadedTimeIntervals(intervals)),\n                    catchError((err) => of(new fromShared.SharedErrors(err)))\n                )\n            )\n        );\n\n    @Effect()\n    loadUserById$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadUserById),\n            mergeMap((action: any) => this.sharedService.getUserById(action.payload)\n                .pipe(\n                    map((user: IUser) => new fromShared.LoadedUserById(user)),\n                    catchError((err) => of(new fromShared.SharedErrors(err)))\n                )\n            )\n        );\n\n    @Effect()\n    loadRanks$ = this.actions$\n        .pipe(\n            ofType(fromShared.ActionTypes.LoadRanks),\n            mergeMap(() => this.sharedService.getRanks()\n                .pipe(\n                    map((ranks: IRank[]) => new fromShared.LoadedRanks(ranks)),\n                    catchError((err) => of(new fromShared.SharedErrors(err)))\n                )\n            )\n        );\n}\n","import {ActionTypes, SharedAction} from '@shared/actions/actions';\nimport {IStatus, IUser} from '@models/interfaces/human';\nimport {IRank} from '@models/interfaces/ranks';\n\nexport interface State {\n    classifiers: any[];\n    weaponTypes: any[];\n    levels: any[];\n    validations: any;\n    competitorMarks: string[];\n    disqualificationTypes: string[];\n    errors?: any;\n    queries?: any;\n    image?: any;\n    statuses: IStatus[];\n    intervals: string[];\n    user: IUser;\n    ranks: IRank[];\n}\n\nexport const initialState: State = {\n    classifiers: [],\n    weaponTypes: [],\n    levels: [],\n    validations: undefined,\n    competitorMarks: [],\n    disqualificationTypes: [],\n    statuses: [],\n    intervals: [],\n    user: null,\n    ranks: []\n};\n\nexport function reducer(state: State = initialState, action: SharedAction) {\n    switch (action.type) {\n        case ActionTypes.LoadedClassifiers:\n            return {...state, classifiers: action.payload};\n        case ActionTypes.LoadedWeaponTypes:\n            return {...state, weaponTypes: action.payload};\n        case ActionTypes.LoadedLevels:\n            return {...state, levels: action.payload};\n        case ActionTypes.LoadedValidations:\n            return {...state, validations: action.payload};\n        case ActionTypes.LoadedCompetitorMarks:\n            return {...state, competitorMarks: action.payload};\n        case ActionTypes.LoadedDisqualificationTypes:\n            return {...state, disqualificationTypes: action.payload};\n        case ActionTypes.SetQueries:\n            return {...state, queries: action.payload};\n        case ActionTypes.SharedErrors:\n            return {...state, errors: action.payload};\n        case ActionTypes.UploadedImage:\n            return {...state, image: action.payload};\n        case ActionTypes.LoadedStatuses:\n            return {...state, statuses: action.payload};\n        case ActionTypes.LoadedTimeIntervals:\n            return {...state, intervals: action.payload};\n        case ActionTypes.LoadedUserById:\n            return {...state, user: action.payload};\n        case ActionTypes.LoadedRanks:\n            return {...state, ranks: action.payload};\n        default:\n            return state;\n    }\n}\n","import * as fromShared from '@shared/reducers/reducer';\nimport {createFeatureSelector, createSelector} from '@ngrx/store';\n\nexport const selectShared = createFeatureSelector<fromShared.State>('shared');\n\nexport const selectLevels = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.levels\n);\n\nexport const selectClassifiers = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.classifiers\n);\n\nexport const selectWeaponTypes = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.weaponTypes\n);\n\nexport const selectValidations = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.validations\n);\n\nexport const selectCompetitorsMarks = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.competitorMarks\n);\n\nexport const selectSharedErrors = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.errors\n);\n\nexport const selectSharedDisqualificationTypes = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.disqualificationTypes\n);\n\nexport const selectQueries = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.queries\n);\n\nexport const selectStatuses = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.statuses\n);\n\nexport const selectIntervals = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.intervals\n);\n\nexport const selectUser = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.user\n);\n\nexport const selectRanks = createSelector(\n    selectShared,\n    (state: fromShared.State) => state.ranks\n);\n","import { Injectable } from '@angular/core';\nimport {IDialogActions, IDialogConfirm, IDialogPrompt} from '@models/interfaces/human';\nimport {from, Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DialogsService {\n    constructor() {}\n\n    getDialogAction(options: IDialogActions): Observable<any> {\n        return;\n    }\n\n    getDialogAlert(message: string): Observable<any> {\n        return from([]);\n    }\n\n    getDialogOptions(title: string, actions: string[]): IDialogActions {\n        return {\n            title: `Выберите ${title}`,\n            cancelButtonText: 'Отменить',\n            actions: actions,\n        };\n    }\n\n    getDialogPrompt(options: IDialogPrompt): Observable<any> {\n        return;\n    }\n\n    getPromptOptions(options: IDialogPrompt): IDialogPrompt {\n        return;\n    }\n\n    getDialogConfirm(options: IDialogConfirm): Observable<any> {\n        return;\n    }\n\n    getDialogConfirmOptions(options: IDialogConfirm): IDialogConfirm {\n        return;\n    }\n\n    initLoader(message: string) {\n        return message;\n    }\n\n    hideLoader() {\n        return;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {environment} from '@environments/environment';\nimport {IStatus, IUser} from '@models/interfaces/human';\nimport {IRank} from '@models/interfaces/ranks';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharedService {\n\n    private validationBaseUrl: string = environment.BASE_URL + '/api/validation/' + environment.version;\n    private disqualificationUrl: string = environment.BASE_URL + '/api/competitions/' + environment.version;\n    private personBaseUrl: string = environment.BASE_URL + '/api/persons/' + environment.version;\n    private checkInBaseUrl: string = environment.BASE_URL + '/api/checkin/' + environment.version;\n    private userBaseUrl: string = environment.BASE_URL + '/api/users/' + environment.version;\n    private rankBaseUrl: string = environment.BASE_URL + '/api/rank/' + environment.version;\n    public imageBaseUrl: string = environment.BASE_URL + '/api/images/' + environment.version;\n\n\n    constructor(private http: HttpClient,\n                private translateService: TranslateService) {\n    }\n\n    getValidations(): Observable<any> {\n        return this.http.get(this.validationBaseUrl + '/');\n    }\n\n    getDisqualificationTypes(): Observable<string[]> {\n        return this.http.get(this.disqualificationUrl + '/enum/disqualification')\n            .pipe(map((response: string[]) => response));\n    }\n\n    uploadImage(file: File, id: string): Observable<any> {\n        const formData = new FormData();\n        formData.append('file', file, file.name);\n\n        const n = id.indexOf('.');\n        id = id.substring(0, n !== -1 ? n : id.length);\n\n        return this.http.post(this.imageBaseUrl + `/${id}`, formData)\n            .pipe(map((response: any) => response));\n    }\n\n    deleteImage(imagePath: string): Observable<any> {\n        return this.http.delete(this.imageBaseUrl + `/${imagePath}`)\n            .pipe(map((response) => response));\n    }\n\n    getPersonStatuses(): Observable<IStatus[]> {\n        return this.http.get(this.personBaseUrl + '/enum/present')\n            .pipe(map((response: IStatus[]) => response));\n    }\n\n    getTimeIntervals(): Observable<string[]> {\n        return this.http.get(this.checkInBaseUrl + '/enum/interval')\n            .pipe(map((response: string[]) => response));\n    }\n\n    getUserById(userId: string): Observable<IUser> {\n        return this.http.get(this.userBaseUrl + `/${userId}`)\n            .pipe(map((response: IUser) => response));\n    }\n\n    getRanks(): Observable<IRank[]> {\n        return this.http.get(this.rankBaseUrl + '/all')\n            .pipe(map((response: IRank[]) => response));\n    }\n\n    get baseUrl() {\n        return this.imageBaseUrl;\n    }\n\n    translateArray(array: string[]): string[] {\n        return array.map((item: string) => {\n            this.translateService.get(item)\n                .subscribe((response: string) => item = response);\n            return item;\n        });\n    }\n\n    getMenu(): any[] {\n        return [\n            {name: 'Dashboard', path: '/dashboard', children: []},\n            {name: 'judges', path: '/judges', children: []},\n            {name: 'persons', path: '/persons', children: []},\n            {name: 'divisions', path: '/divisions', children: []},\n            {name: 'specialities', path: '/specialities', children: []},\n            {name: 'users', path: '/users', children: []},\n            {name: 'courses', path: '/courses', children: []},\n            {name: 'weaponList', path: '/weapon-list', children: [\n                    {\n                        name: 'weaponType',\n                        path: '/weapon-types'\n                    },\n                ]},\n            {\n                name: 'divisionList', path: '/checkin', children: [\n                    {\n                        name: 'checkinDetails',\n                        path: '/checkin-details',\n                        children: []\n                    },\n                ]\n            },\n            {name: 'login', path: '/login', children: []},\n            {name: 'answers', path: '/answers', children: []},\n            {\n                name: 'tournaments',\n                path: '/tournaments',\n                children: [\n                    {\n                        name: 'stages',\n                        path: '/stages'\n                    },\n                    {\n                        name: 'competitors',\n                        path: '/competitors'\n                    },\n                    {\n                        name: 'rating',\n                        path: '/rating'\n                    }\n                ]\n            },\n            {\n                name: 'subjects',\n                path: '/subjects',\n                children: [\n                    {\n                        name: 'tests',\n                        path: '/tests',\n                        children: [\n                            {\n                                name: 'Questions',\n                                path: '/questions'\n                            },\n                        ]\n                    },\n                    {\n                        name: 'standards',\n                        path: '/standards',\n                        children: [\n                            {\n                                name: 'categories',\n                                path: '/categories'\n                            },\n                            {\n                                name: 'conditions',\n                                path: '/conditions',\n                                children: [\n                                    {\n                                        name: 'units',\n                                        path: '/units',\n                                    }\n                                ]\n                            },\n                        ]\n                    }\n                ]\n            },\n        ];\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {NgbDateNativeAdapter, NgbDatepickerModule, NgbDropdownModule, NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {ErrorComponent} from './components/error/error.component';\nimport {DatepickerComponent} from './components/datepicker/datepicker.component';\nimport {CapitalizePipe} from '../../pipes/capitalize.pipe';\nimport {SearchComponent} from './components/search/search.component';\nimport {EmptySearchComponent} from './components/empty-search/empty-search.component';\nimport {LocaleDatePipe} from '../../pipes/locale-date.pipe';\nimport {HeaderComponent} from '@shared/components/header/header.component';\nimport {ImageLoaderComponent} from './components/image-loader/image-loader.component';\nimport {MobileListpickerComponent} from './components/mobile-listpicker/mobile-listpicker.component';\nimport {LocationBackComponent} from './components/location-back/location-back.component';\nimport {RouterModule} from '@angular/router';\nimport {ModalRootComponent} from './components/modal-root/modal-root.component';\n\n@NgModule({\n    declarations: [\n        ErrorComponent,\n        DatepickerComponent,\n        CapitalizePipe,\n        LocaleDatePipe,\n        SearchComponent,\n        EmptySearchComponent,\n        HeaderComponent,\n        ImageLoaderComponent,\n        MobileListpickerComponent,\n        LocationBackComponent,\n        ModalRootComponent,\n    ],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        ReactiveFormsModule,\n        FontAwesomeModule,\n        NgbDatepickerModule,\n        FormsModule,\n        NgbModule,\n        NgbDropdownModule,\n        RouterModule\n    ],\n    exports: [\n        TranslateModule,\n        ErrorComponent,\n        DatepickerComponent,\n        CapitalizePipe,\n        LocaleDatePipe,\n        SearchComponent,\n        EmptySearchComponent,\n        HeaderComponent,\n        ImageLoaderComponent,\n        LocationBackComponent\n    ],\n    providers: [\n        NgbDateNativeAdapter\n    ],\n})\nexport class SharedModule {\n}\n","import {Action} from '@ngrx/store';\nimport {ISpecialities} from '@models/interfaces/specialities';\n\nexport enum ActionTypes {\n    LoadSpecialities = '[Specialities Page] Load Specialities',\n    LoadedSpecialities = '[Specialities Page] Loaded Specialities',\n    SpecialitiesErrors = '[Specialities Page] Specialities Errors',\n    RefreshSpecialities = '[Specialities Page] Refresh Specialities',\n    CreateSpeciality = '[Specialities Page] Create Speciality',\n    UpdateSpeciality = '[Specialities Page] Update Speciality',\n    RemoveSpeciality = '[Specialities Page] Remove Speciality'\n}\n\nexport class LoadSpecialities implements Action {\n    readonly type = ActionTypes.LoadSpecialities;\n}\n\nexport class LoadedSpecialities implements Action {\n    readonly type = ActionTypes.LoadedSpecialities;\n\n    constructor(public payload: ISpecialities[]) {\n    }\n}\n\nexport class SpecialitiesErrors implements Action {\n    readonly type = ActionTypes.SpecialitiesErrors;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class RefreshSpecialities implements Action {\n    readonly type = ActionTypes.RefreshSpecialities;\n\n    constructor(public payload: ISpecialities[]) {\n    }\n}\n\nexport class CreateSpeciality implements Action {\n    readonly type = ActionTypes.CreateSpeciality;\n\n    constructor(public payload: ISpecialities) {\n    }\n}\n\nexport class UpdateSpeciality implements Action {\n    readonly type = ActionTypes.UpdateSpeciality;\n\n    constructor(public payload: ISpecialities) {\n    }\n}\n\nexport class RemoveSpeciality implements Action {\n    readonly type = ActionTypes.RemoveSpeciality;\n\n    constructor(public payload: string) {\n    }\n}\n\n\nexport type SpecialitiesActions = LoadSpecialities &\n    LoadedSpecialities & SpecialitiesErrors & CreateSpeciality &\n    RefreshSpecialities & UpdateSpeciality & RemoveSpeciality;\n","<div class=\"container\">\n  <div class=\"row mt-3\">\n    <div class=\"col-4\">\n      <h1>{{'specialities' | translate | titlecase}}</h1>\n    </div>\n  </div>\n  <div class=\"row mt-3\">\n    <div class=\"col-4\">\n      <button type=\"button\"\n              class=\"btn btn-primary w-100\"\n              (click)=\"addSpeciality()\"\n      >{{'addSpeciality' | translate}}</button>\n    </div>\n  </div>\n\n  <div class=\"row mt-3\" *ngIf=\"specialities$ | async as specialities\">\n    <div class=\"col\">\n      <app-base-table [objects]=\"specialities\"\n                      [actions]=\"actions\"\n                      (action)=\"handleActions($event)\"\n                      [pageType]=\"pages.SPECIALITIES\"\n      ></app-base-table>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {tap} from 'rxjs/internal/operators/tap';\n\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {ModalService} from '@modal/services/modal.service';\nimport {ISpecialities} from '@models/interfaces/specialities';\nimport {selectSpecialitiesData} from '@specialities/selectors/selectors';\nimport {CreateSpeciality, LoadSpecialities, RemoveSpeciality, UpdateSpeciality} from '@specialities/actions/actions';\nimport {Actions} from '@models/constants/actions';\nimport {PageTypes} from '@models/constants/page-types';\nimport {SpecialitiesMocks} from '@models/mocks/specialities';\nimport {UnsubscribeOndestroyAdapter} from '../../../adstracts/unsubscribe-ondestroy-adapter';\n\n@Component({\n    selector: 'app-specialities',\n    templateUrl: './specialities.component.html',\n    styleUrls: ['./specialities.component.scss']\n})\nexport class SpecialitiesComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n\n    public actions: string[];\n    public pages = PageTypes;\n\n    public specialities$: Observable<ISpecialities[]>;\n\n    constructor(private modalService: ModalService,\n                private store: Store<any>) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.CHANGE, Actions.REMOVE];\n        this.getSpecialities();\n    }\n\n    handleActions(event: { action: string, item: ISpecialities }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openSpecialitiesModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n        }\n    }\n\n    addSpeciality() {\n        this.openSpecialitiesModal(SpecialitiesMocks.emptySpeciality, false);\n    }\n\n    getSpecialities() {\n        this.specialities$ = this.store.select(selectSpecialitiesData)\n            .pipe(tap((specialities: ISpecialities[]) => !specialities && this.fetchSpecialities()));\n    }\n\n    fetchSpecialities() {\n        this.store.dispatch(new LoadSpecialities());\n    }\n\n    openSpecialitiesModal(speciality: ISpecialities, edit: boolean) {\n        const objectType = 'Specialities';\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...speciality}, edit, objectType},\n            (res) => {\n                if (res) {\n                    edit ? this.updateSpeciality(res, speciality.id) : this.createSpecialities(res);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: ISpecialities) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.specialityRus, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.removeSpeciality(item.id);\n                }\n            });\n    }\n\n    createSpecialities(speciality: ISpecialities) {\n        this.store.dispatch(new CreateSpeciality(speciality));\n    }\n\n    updateSpeciality(updatedSpeciality: ISpecialities, specialityId: string) {\n        updatedSpeciality.id = specialityId;\n        this.store.dispatch(new UpdateSpeciality(updatedSpeciality));\n    }\n\n    removeSpeciality(specialityId: string) {\n        this.store.dispatch(new RemoveSpeciality(specialityId));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {select, Store} from '@ngrx/store';\nimport {catchError, map, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\nimport {MessageService} from '@services/message.service';\nimport {SpecialitiesService} from '@specialities/services/specialities.service';\nimport {ISpecialities} from '@models/interfaces/specialities';\nimport {selectSpecialitiesData} from '@specialities/selectors/selectors';\nimport * as fromSpecialities from '@specialities/actions/actions';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\n\n@Injectable()\nexport class SpecialitiesEffects {\n\n    constructor(private actions$: Actions,\n                private specialityService: SpecialitiesService,\n                private messageService: MessageService,\n                private store: Store<any>) {\n    }\n\n    @Effect()\n    loadSpecialities$ = this.actions$\n        .pipe(\n            ofType(fromSpecialities.ActionTypes.LoadSpecialities),\n            mergeMap(() => this.specialityService.getSpecialities()\n                .pipe(\n                    map((specialities: ISpecialities[]) => new fromSpecialities.LoadedSpecialities(specialities)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromSpecialities.SpecialitiesErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshSpecialities$ = this.actions$\n        .pipe(\n            ofType(fromSpecialities.ActionTypes.RefreshSpecialities),\n            map((action: any) => new fromSpecialities.LoadedSpecialities(action.payload)),\n            catchError((err) => {\n                this.messageService.showPushNotification(err);\n                this.messageService.showToastrError(err);\n                return of(new fromSpecialities.SpecialitiesErrors(err));\n            })\n        );\n\n    @Effect()\n    createSpeciality$ = this.actions$\n        .pipe(\n            ofType(fromSpecialities.ActionTypes.CreateSpeciality),\n            withLatestFrom(this.store.pipe(select(selectSpecialitiesData))),\n            switchMap(([action, specialities]: any[]) => this.specialityService.createSpeciality(action.payload)\n                .pipe(\n                    map((speciality) => {\n                        const message = {user: ToastrUsersType.SPECIALITY, type: ToastrMessageType.CREATE};\n                        if (speciality) {\n                            this.messageService.showToastrSuccess(message);\n                        }\n                        specialities.push(speciality);\n                        return new fromSpecialities.RefreshSpecialities(specialities);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromSpecialities.SpecialitiesErrors(err));\n                    })\n                ))\n        );\n\n    @Effect()\n    updateSpeciality$ = this.actions$\n        .pipe(\n            ofType(fromSpecialities.ActionTypes.UpdateSpeciality),\n            withLatestFrom(this.store.pipe(select(selectSpecialitiesData))),\n            switchMap(([action, specialities]: any) => this.specialityService.updateSpeciality(action.payload)\n                .pipe(\n                    map((speciality: ISpecialities) => {\n                        const message = {user: ToastrUsersType.SPECIALITY, type: ToastrMessageType.UPDATE};\n                        if (speciality) {\n                            this.messageService.showToastrSuccess(message);\n                        }\n                        specialities = specialities.map((item: ISpecialities) =>\n                            item.id === speciality.id ? speciality : item);\n                        return new fromSpecialities.RefreshSpecialities(specialities);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromSpecialities.SpecialitiesErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    removeSpeciality$ = this.actions$\n        .pipe(\n            ofType(fromSpecialities.ActionTypes.RemoveSpeciality),\n            withLatestFrom(this.store.pipe(select(selectSpecialitiesData))),\n            switchMap(([action, specialities]: any[]) => this.specialityService.removeSpeciality(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.SPECIALITY, type: ToastrMessageType.REMOVE};\n                        this.messageService.showToastrSuccess(message);\n\n                        specialities = specialities.filter((item: ISpecialities) => item.id !== action.payload);\n                        return new fromSpecialities.RefreshSpecialities(specialities);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromSpecialities.SpecialitiesErrors(err));\n                    })\n                )\n            )\n        );\n}\n","import {ISpecialities} from '@models/interfaces/specialities';\nimport {ActionTypes, SpecialitiesActions} from '@specialities/actions/actions';\n\nexport interface State {\n    specialities: ISpecialities[];\n    errors?: any;\n}\n\nexport const initialState: State = {\n    specialities: undefined\n};\n\nexport function reducer(state: State = initialState, action: SpecialitiesActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedSpecialities:\n            return {...state, specialities: action.payload};\n        case ActionTypes.SpecialitiesErrors:\n            return {...state, errors: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromSpecialities from '@specialities/reducers/reducer';\n\nexport const selectSpecialities = createFeatureSelector<fromSpecialities.State>('specialities');\n\nexport const selectSpecialitiesData = createSelector(\n    selectSpecialities,\n    (state: fromSpecialities.State) => state.specialities\n);\n\nexport const selectSpecialitiesErrors = createSelector(\n    selectSpecialities,\n    (state: fromSpecialities.State) => state.errors\n);\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\nimport {environment} from '@environments/environment';\nimport {ISpecialities} from '@models/interfaces/specialities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpecialitiesService {\n    private specialityBaseUrl: string = environment.BASE_URL + '/api/speciality/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getSpecialities(): Observable<ISpecialities[]> {\n        return this.http.get(this.specialityBaseUrl + '/all')\n            .pipe(map((response: ISpecialities[]) => response));\n    }\n\n    createSpeciality(speciality: ISpecialities): Observable<ISpecialities> {\n        return this.http.post(this.specialityBaseUrl + '/speciality', speciality)\n            .pipe(map((response: ISpecialities) => response));\n    }\n\n    updateSpeciality(speciality: ISpecialities): Observable<ISpecialities> {\n        return this.http.put(this.specialityBaseUrl + `/speciality/${speciality.id}`, speciality)\n            .pipe(map((response: ISpecialities) => response));\n    }\n\n    removeSpeciality(specialityId: string): Observable<any> {\n        return this.http.delete(this.specialityBaseUrl + `/speciality/${specialityId}`)\n            .pipe(map((response: ISpecialities) => response));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {SpecialitiesComponent} from './components/specialities.component';\nimport {ModalModule} from '@modal/modal.module';\nimport {TableModule} from '@table/table.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SpecialitiesComponent\n    }\n];\n\n@NgModule({\n    declarations: [SpecialitiesComponent],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        ModalModule,\n        TableModule,\n        RouterModule.forChild(routes)\n    ]\n})\nexport class SpecialitiesModule {\n}\n","import {Action} from '@ngrx/store';\nimport {IStage} from '@models/interfaces/stage';\nimport {ITournament} from '@models/interfaces/tournament';\n\nexport enum ActionTypes {\n    LoadStages = '[Stages Page] Load Stages',\n    LoadedStages = '[Stages Page] Loaded Stages',\n    ErrorStages = '[Stages Page] Error Stages',\n    CreateStage = '[Stages Page] Create Stage',\n    DeleteStage = '[Stages Page] Delete Stage',\n    UpdateStage = '[Stages Page] Update Stage',\n    RefreshStages = '[Stages Page] Refresh Stages'\n}\n\ninterface IPayload {\n    stage?: IStage;\n    id?: string;\n    tournament: ITournament;\n}\n\nexport class LoadStages implements Action {\n    readonly type = ActionTypes.LoadStages;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class RefreshStages implements Action {\n    readonly type = ActionTypes.RefreshStages;\n\n    constructor(public payload: IStage[]) {\n    }\n}\n\nexport class LoadedStages implements Action {\n    readonly type = ActionTypes.LoadedStages;\n\n    constructor(public payload: IStage[]) {\n    }\n}\n\nexport class ErrorStages implements Action {\n    readonly type = ActionTypes.ErrorStages;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class CreateStage implements Action {\n    readonly type = ActionTypes.CreateStage;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport class DeleteStage implements Action {\n    readonly type = ActionTypes.DeleteStage;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport class UpdateStage implements Action {\n    readonly type = ActionTypes.UpdateStage;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport type StagesAction = LoadStages &\n    LoadedStages & ErrorStages &\n    CreateStage & DeleteStage & UpdateStage &\n    RefreshStages;\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <h1>{{'tournamentStages' | translate}}: {{tournamentName}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3 d-flex align-items-center justify-content-between\">\n        <div class=\"col-4\">\n            <button type=\"button\"\n                    class=\"btn btn-primary w-100\"\n                    (click)=\"add()\"\n            >{{'addStage' | translate}}</button>\n        </div>\n        <div class=\"col-6\">\n            <h2 class=\"stage-count text-right\">{{'stageCount' | translate}}: {{stages?.length}}</h2>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col\">\n            <app-base-table class=\"stages__table\"\n                            [objects]=\"stages\"\n                            [actions]=\"actions\"\n                            (action)=\"handleAction($event)\"\n            ></app-base-table>\n        </div>\n    </div>\n    <div class=\"row mt-4\" *ngIf=\"stages\">\n        <div class=\"col text-center\" *ngIf=\"!stages.length\">\n            <h3>{{'emptyStages' | translate}}</h3>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {select, Store} from '@ngrx/store';\n\nimport {ModalService} from '@modal/services/modal.service';\nimport {StagesService} from '../../service/stages.service';\nimport {TournamentsService} from '@tournaments/services/tournaments.service';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {IStage} from '@models/interfaces/stage';\nimport {ITournament} from '@models/interfaces/tournament';\nimport {CreateStage, DeleteStage, UpdateStage} from '@stages/actions/actions';\nimport {selectTournamentsData} from '@tournaments/selectors/selectors';\nimport {Actions} from '@models/constants/actions';\nimport {PageTypes} from '@models/constants/page-types';\nimport {TournamentMocks} from '@models/mocks/tournaments.mock';\nimport {Icons} from '@models/constants/icons';\nimport {Animations} from '@models/constants/animations';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {stagesMapperFromServer} from '@mappers/tournament.mapper';\n\n@Component({\n    selector: 'app-stages',\n    templateUrl: './stages.component.html',\n    styleUrls: ['./stages.component.scss'],\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class StagesComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public stages: IStage[];\n    public actions: string[] = [];\n    public pageTypes = PageTypes;\n    public icons = Icons;\n\n    private tournamentId: string;\n    public tournamentName: string;\n    public mobileActions: string[];\n    private tournament: ITournament;\n\n    constructor(private modalService: ModalService,\n                private stagesService: StagesService,\n                private route: ActivatedRoute,\n                private store: Store<any>,\n                private location: Location,\n                private router: Router,\n                private tournamentService: TournamentsService\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getRouteParams();\n        this.mobileActions = [\n            Actions.START\n        ];\n        this.actions = [Actions.CHANGE, Actions.REMOVE];\n    }\n\n    getRouteParams() {\n        this.subscriptions.sink = this.route.queryParams\n            .subscribe((params) => {\n                this.tournamentId = params['tournament'];\n                this.tournamentName = params['name'];\n                this.getTournaments(this.tournamentId);\n            });\n    }\n\n    getTournaments(tournamentId: string) {\n        this.subscriptions.sink = this.store\n            .pipe(select(selectTournamentsData))\n            .subscribe((tournaments: ITournament[]) => {\n                if (tournaments && tournaments.length) {\n                    this.tournament = this.findTournamentById(tournaments, tournamentId);\n                    this.stages = this.getStages(this.tournament.stages);\n                }\n            });\n    }\n\n    getStages(stages: IStage[]): IStage[] {\n        return stages.map((stage: IStage, index: number) => stagesMapperFromServer(stage, index));\n    }\n\n    findTournamentById(tournaments: ITournament[], tournamentId: string): ITournament {\n        return this.tournamentService.findTournamentById(tournaments, tournamentId);\n    }\n\n    add() {\n        this.openStageModal(TournamentMocks.emptyStage, false);\n    }\n\n    handleAction(event: { action: string, item: any }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openStageModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            case Actions.START:\n                return this.goToExercise(this.tournamentId, event.item.id);\n            default:\n                return;\n        }\n    }\n\n    openStageModal(stage: IStage, edit: boolean) {\n        const objectType = 'Stage';\n\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...stage}, edit, objectType},\n            (res) => {\n                if (res) {\n                    edit ? this.updateStage(stage, res) : this.addStage(res);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: IStage) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.name, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.removeStage(this.tournamentId, item.id);\n                }\n            });\n    }\n\n    addStage(stage: IStage) {\n        this.store.dispatch(new CreateStage({stage, tournament: this.tournament}));\n    }\n\n    removeStage(tournamentId: string, id: string) {\n        this.store.dispatch(new DeleteStage({tournament: this.tournament, id}));\n    }\n\n    updateStage(item, updatedItem) {\n        updatedItem.id = item.id;\n        this.store.dispatch(new UpdateStage({\n            stage: updatedItem,\n            tournament: this.tournament\n        }));\n    }\n\n    goToExercise(tournamentId: string, stageId: string) {\n        this.router.navigate(['/exercise'], {queryParams: {tournament: tournamentId, stage: stageId}});\n    }\n\n    onBackClick() {\n        this.location.back();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\nimport {StagesService} from '@stages/service/stages.service';\nimport {MessageService} from '@services/message.service';\nimport * as fromStages from '@stages/actions/actions';\nimport {IStage} from '@models/interfaces/stage';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\nimport {Store} from '@ngrx/store';\nimport {selectStagesData} from '@stages/selectors/selectors';\nimport * as fromTournaments from '@tournaments/actions/actions';\n\n@Injectable()\nexport class StagesEffects {\n\n    constructor(private actions$: Actions,\n                private stagesService: StagesService,\n                private messageService: MessageService,\n                private store: Store<any>) {\n    }\n\n    @Effect()\n    loadStages$ = this.actions$\n        .pipe(\n            ofType(fromStages.ActionTypes.LoadStages),\n            mergeMap((action: any) => this.stagesService.getStages(action.payload)\n                .pipe(\n                    map((stages: IStage[]) => (new fromStages.LoadedStages(stages))),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromStages.ErrorStages(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshStages$ = this.actions$\n        .pipe(\n            ofType(fromStages.ActionTypes.RefreshStages),\n            map((action: any) => new fromStages.LoadedStages(action.payload)),\n            catchError((err) => {\n                this.messageService.showPushNotification(err);\n                this.messageService.showToastrError(err);\n                return of(new fromStages.ErrorStages(err));\n            })\n        );\n\n    @Effect()\n    createStage$ = this.actions$\n        .pipe(\n            ofType(fromStages.ActionTypes.CreateStage),\n            switchMap((action: any) => {\n                const {stage, tournament} = action.payload;\n                return this.stagesService.createStage(stage, tournament.id)\n                    .pipe(\n                        map((createdStage: IStage) => {\n                            const message = {user: ToastrUsersType.STAGE, type: ToastrMessageType.CREATE};\n                            if (createdStage) {\n                                this.messageService.showToastrSuccess(message);\n                            }\n                            tournament.stages.push(createdStage);\n                            return new fromTournaments.ForceUpdateTournament({tournament});\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromStages.ErrorStages(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    deleteStage$ = this.actions$\n        .pipe(\n            ofType(fromStages.ActionTypes.DeleteStage),\n            switchMap((action: any) => {\n                const {tournament, id} = action.payload;\n                return this.stagesService.deleteStage(tournament.id, id)\n                    .pipe(\n                        map((res) => {\n                            const message = {user: ToastrUsersType.STAGE, type: ToastrMessageType.REMOVE};\n                            if (res) {\n                                this.messageService.showToastrSuccess(message);\n                            }\n                            tournament.stages = tournament.stages.filter((stage: IStage) => stage.id !== id);\n                            return new fromTournaments.ForceUpdateTournament({tournament});\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromStages.ErrorStages(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    updateStage$ = this.actions$\n        .pipe(\n            ofType(fromStages.ActionTypes.UpdateStage),\n            withLatestFrom(this.store.select(selectStagesData)),\n            switchMap(([action, stages]: any[]) => {\n                const {stage, tournament} = action.payload;\n                return this.stagesService.updateStage(stage, tournament.id)\n                    .pipe(\n                        map((updatedStage: IStage) => {\n                            const message = {user: ToastrUsersType.STAGE, type: ToastrMessageType.UPDATE};\n                            if (updatedStage) {\n                                stages = stages.map((item: IStage) => item.id === updatedStage.id ? updatedStage : item);\n                                this.messageService.showToastrSuccess(message);\n                            }\n                            const tournamentStage = tournament.stages.find(st => st.id === updatedStage.id);\n                            Object.keys(updatedStage).forEach(key => {\n                                tournamentStage[key] = updatedStage[key];\n                            });\n                            tournament.stages = tournament.stages\n                                .map(st => st.id === tournamentStage.id ? tournamentStage : st);\n                            return new fromTournaments.ForceUpdateTournament({tournament});\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromStages.ErrorStages(err));\n                        })\n                    );\n            })\n        );\n}\n","import {IStage} from '@models/interfaces/stage';\nimport {ActionTypes, StagesAction} from '../actions/actions';\n\nexport interface State {\n    stages: IStage[];\n    classifiers: IStage[];\n    weaponTypes: any;\n    errors?: any;\n}\n\nexport const initialState: State = {\n    stages: [],\n    classifiers: [],\n    weaponTypes: [],\n};\n\nexport function reducer (state: State = initialState, action: StagesAction) {\n    switch (action.type) {\n        case ActionTypes.LoadedStages:\n            return {...state, stages: action.payload};\n        case ActionTypes.ErrorStages:\n            return {...state, errors: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromStages from '@stages/reducers/reducer';\n\nexport const selectStages = createFeatureSelector<fromStages.State>('stages');\n\nexport const selectStagesData = createSelector(\n    selectStages,\n    (state: fromStages.State) => state.stages\n);\n\nexport const selectStagesErrors = createSelector(\n    selectStages,\n    (state: fromStages.State) => state.errors\n);\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nimport {IStage} from '@models/interfaces/stage';\nimport {environment} from '@environments/environment';\nimport {map} from 'rxjs/operators';\nimport {stagesMapperFromServer} from '@mappers/tournament.mapper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StagesService {\n    stagesBaseUrl: string = environment.BASE_URL + '/api/competitions/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getStages(id: string): Observable<IStage[]> {\n        return this.http.get<IStage[]>(this.stagesBaseUrl + `/${id}/stage/all`)\n            .pipe(map((res: IStage[]) =>\n                res.map((item: IStage, index: number) => stagesMapperFromServer(item, index))));\n    }\n\n    getClassifier(): Observable<IStage[]> {\n        return this.http.get<IStage[]>(this.stagesBaseUrl + '/enum');\n    }\n\n    getWeaponTypes(): Observable<any> {\n        return this.http.get(this.stagesBaseUrl + '/enum/weapon');\n    }\n\n    getLevels(): Observable<any> {\n        return this.http.get(this.stagesBaseUrl + '/enum/level');\n    }\n\n    createStage(stage: IStage, tournamentId: string): Observable<IStage> {\n        return this.http.post(this.stagesBaseUrl + `/${tournamentId}/stage`, stage)\n            .pipe(map((response: IStage) => response));\n    }\n\n    deleteStage(tournamentId: string, stageId: string): Observable<IStage> {\n        return this.http.delete(this.stagesBaseUrl + `/${tournamentId}/stage/${stageId}`)\n            .pipe(map((response: any) => response));\n    }\n\n    updateStage(stage: IStage, tournamentId: string): Observable<IStage> {\n        return this.http.put(this.stagesBaseUrl + `/${tournamentId}/stage/${stage.id}`, stage)\n            .pipe(map((response: IStage) => response));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {StagesComponent} from './components/stages/stages.component';\nimport {TableModule} from '@table/table.module';\nimport {StagesService} from './service/stages.service';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: StagesComponent\n    }\n];\n\n@NgModule({\n    declarations: [StagesComponent],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        TableModule,\n        FontAwesomeModule,\n        RouterModule.forChild(routes)\n    ],\n    providers: [StagesService]\n})\nexport class StagesModule {\n}\n","<table *ngIf=\"objects?.length\" class=\"table table-striped table-bordered table-hover\" [@EnterLeave]>\n    <thead class=\"thead-light\">\n    <tr *ngIf=\"objects\">\n        <ng-container *ngFor=\"let item of objects[0] | keyvalue: noSorting\">\n            <th class=\"capitalize text-center align-middle\"\n                *ngIf=\"displayedCells.includes(item.key)\"\n                [sortable]=\"item.key\"\n                (sort)=\"onSort($event)\"\n            >\n                <ng-container>\n                    {{item.key | translate: {ending: 'я'} }}\n                </ng-container>\n\n                <fa-icon *ngIf=\"direction !== ''\"\n                         [icon]=\"direction === 'asc'\n                          ? icons.asc : icons.desc\"\n                         [size]=\"'xs'\"\n                         [className]=\"'sort__icon'\"\n                ></fa-icon>\n                <fa-icon [icon]=\"icons.sort\" [size]=\"'xs'\"\n                         *ngIf=\"direction !== 'asc' && direction !== 'desc'\"\n                         [className]=\"'sort__icon'\"\n                ></fa-icon>\n            </th>\n        </ng-container>\n        <th class=\"capitalize text-center align-middle\" *ngFor=\"let action of actions\">\n            {{action | translate}}\n        </th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let item of isCompetitors ?\n    (searchableObjectByName | slice: (page-1) * defaultPageSize : (page-1) * defaultPageSize + defaultPageSize) :\n     objects\"\n        [ngStyle]=\"{'backgroundColor': item.percentage < 80 && '#c5c5c5'}\"\n    >\n        <ng-container *ngFor=\"let field of item | keyvalue: noSorting; trackBy: trackByFn\">\n            <td\n                *ngIf=\"displayedCells.includes(field.key)\"\n                [ngSwitch]=\"true\" class=\"text-center align-middle\"\n            >\n                <ng-container *ngSwitchCase=\"field.key === fields.CATEGORY\">\n                    {{language === 'ru' ? field.value?.nameCategoryRus : field.value?.nameCategoryKz}}\n                </ng-container>\n                <ng-container *ngSwitchCase=\"field.key === fields.UNITS || field.key === fields.WEAPON_NAME\">\n                    {{field.value.name | translate}}\n                </ng-container>\n                <ng-container *ngSwitchCase=\"field.key === fields.OWNER\">\n                    {{field.value.userName | translate}}\n                </ng-container>\n                <ng-container *ngSwitchCase=\"field.key === fields.EVENT_DATE || field.key === fields.BIRTH_DATE || field.key === fields.DATE\">\n                    {{field.value | date}}\n                </ng-container>\n                <ng-container *ngSwitchCase=\"field.key === fields.TIME\">\n                    {{formatTime(field.value)}}\n                </ng-container>\n                <ng-container *ngSwitchCase=\"field.key === fields.TIME_OF_EXERCISE\">\n                    {{field.value * 1000 | date:'ss:SSS':'UTC'}}\n                </ng-container>\n                <ng-container *ngSwitchCase=\"switcherCase(field.key)\">\n                    <ui-switch size=\"small\"\n                               color=\"#668c6e\"\n                               [disabled]=\"field.key === fields.ACTIVE || field.key === fields.GROUPS\"\n                               [checked]=\"field.value\" (change)=\"onSwitcherValueChange(item)\"\n                    ></ui-switch>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"field.key === fields.NOT_COUNTED\">\n                    {{field.value ? ('yes' | translate) : ('no' | translate)}}\n                </ng-container>\n                <ng-container *ngSwitchCase=\"field.key === fields.RANK\">\n                    {{language === 'ru' ? field.value?.rus : field.value?.kz}}\n                </ng-container>\n                <ng-container *ngSwitchCase=\"field.key === fields.STATUS\">\n                    {{field.value | translate}}\n                </ng-container>\n                <ng-container *ngSwitchCase=\"field.key === fields.DISQUALIFICATION_REASON\">\n                    {{field.value | translate}}\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    {{field.value}}\n                </ng-container>\n            </td>\n        </ng-container>\n        <td *ngFor=\"let action of actions\" class=\"text-center\">\n            <button type=\"button\"\n                    class=\"btn {{getClass(action)}} w-100 \"\n                    (click)=\"onClickAction(action,item)\"\n                    [disabled]=\"!item.active &&\n                     (action === buttons.COMPETITORS || action === buttons.STAGES || action === buttons.CHANGE)\n                     && pageType === 'Tournament'\"\n            >\n                <fa-icon [icon]=\"getIcons(action)\" [size]=\"'lg'\"></fa-icon>\n            </button>\n        </td>\n    </tr>\n\n    </tbody>\n</table>\n\n<app-empty-search *ngIf=\"isCompetitors && !searchableObjectByName?.length\"\n                  [searchableValue]=\"searchValue || divisionValue\"\n></app-empty-search>\n\n<div class=\"pagination\">\n    <ngb-pagination\n        *ngIf=\"paginationLength > defaultPageSize - 1 || searchableObjectByName?.length > defaultPageSize - 1\"\n        [collectionSize]=\"paginationLength || searchableObjectByName?.length\"\n        [boundaryLinks]=\"true\"\n        [(page)]=\"page\"\n        [pageSize]=\"defaultPageSize\"\n        [rotate]=\"true\"\n        (pageChange)=\"loadPage()\"\n    ></ngb-pagination>\n</div>\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\nimport {IPerson} from '@models/interfaces/human';\nimport {compare, SortEvent} from '@models/interfaces/table';\nimport {Actions} from '@models/constants/actions';\nimport {Animations} from '@models/constants/animations';\nimport {FieldsMocks} from '@models/mocks/fields.mocks';\nimport {TableAbstract} from '../../../../adstracts/table.abstract';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-base-table',\n    templateUrl: './base-table.component.html',\n    styleUrls: ['./base-table.component.scss'],\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class BaseTableComponent extends TableAbstract implements OnInit {\n    public existsActions = Actions;\n    public buttons = Actions;\n\n\n    @Input() defaultPageSize: number;\n    @Input() page = 1;\n    @Input() objects: any[];\n    @Input() actions: string[];\n    @Input() paginationLength: number;\n    @Input() isCompetitors;\n    @Input() searchValue: string;\n    @Input() divisionValue: string;\n    @Input() statusName: string;\n\n    @Output() action = new EventEmitter<{ action: string, item: any }>();\n    @Output() pages: EventEmitter<{}> = new EventEmitter<{ pageNumber: number, pageSize: number }>();\n    @Output() competitorValue: EventEmitter<IPerson> = new EventEmitter();\n\n    public keysLength: number;\n    public columnSizes: string;\n    public mappedObject: any;\n\n    constructor(protected translateService: TranslateService) {\n        super(translateService);\n    }\n\n    ngOnInit() {\n        this.detectLanguage();\n        setTimeout(() => {\n            if (this.objects && this.objects.length) {\n                this.mappedObject = this.getMappedObject(this.objects[0]);\n                this.keysLength = this.getKeyListLength(this.mappedObject);\n                this.columnSizes = this.getColumnSizes();\n            }\n        }, 1000);\n    }\n\n    get searchableObjectByName() {\n        if (this.isCompetitors) {\n            if (this.searchValue) {\n                return this.objects.filter(item => item.userName.toLowerCase().includes(this.searchValue));\n            } else if (this.divisionValue) {\n                return this.objects.filter(item => item.division && item.division.name === this.divisionValue);\n            } else {\n                return this.objects;\n            }\n        }\n    }\n\n    getMappedObject(input): any {\n        const object = {};\n        for (const key in input) {\n            if (input.hasOwnProperty(key)) {\n                const k: any = key;\n                if (this.displayedCells.includes(k)) {\n                    object[key] = input[key];\n                }\n            }\n        }\n        return object;\n    }\n\n    getColumnSizes(): string {\n        const defaultSize = 120;\n        const sizeArray: any[] = [];\n        for (let i = 0; i < this.keysLength; i++) {\n            sizeArray.push('*');\n        }\n        if (this.actions && this.actions.length) {\n            for (let i = 0; i < this.actions.length; i++) {\n                sizeArray.push(defaultSize);\n            }\n        }\n        return sizeArray.join(',');\n    }\n\n    getKeyListLength(object): number {\n        return Object.keys(object).length;\n    }\n\n    onClickAction(action: string, item: any) {\n        this.action.next({action, item});\n    }\n\n    loadPage() {\n        this.pages.emit({pageNumber: this.page, pageSize: this.defaultPageSize});\n    }\n\n\n    onSort({column, direction}: SortEvent) {\n        this.headers.forEach(header => {\n            if (header.sortable !== column) {\n                header.direction = '';\n            }\n        });\n        if (direction === '') {\n            return;\n        } else {\n            this.objects = [...this.objects].sort((a, b) => {\n                const res = compare(a[column], b[column]);\n                this.direction = direction;\n                return direction === 'asc' ? res : -res;\n            });\n        }\n    }\n\n    onSwitcherValueChange(person: IPerson) {\n        person.member = !person.member;\n        this.competitorValue.next(person);\n    }\n\n    switcherCase(field) {\n        return FieldsMocks.switcherFields.includes(field);\n    }\n\n    getIcons(action: string) {\n        switch (action) {\n            case Actions.CHANGE:\n                return this.icons.edit;\n            case Actions.REMOVE:\n                return this.icons.delete;\n            case Actions.COMPETITORS:\n                return this.icons.competitors;\n            case Actions.RATING:\n                return this.icons.trophy;\n            case Actions.STAGES:\n                return this.icons.stages;\n            case Actions.CHANGE_PASSWORD:\n                return this.icons.changePassword;\n            case Actions.TESTS:\n                return this.icons.tests;\n            case Actions.QUESTIONS:\n                return this.icons.questions;\n            case Actions.DETAILS:\n                return this.icons.details;\n            case Actions.STANDARDS:\n                return this.icons.standards;\n            case Actions.CATEGORIES:\n                return this.icons.categories;\n            case Actions.ERRORS:\n                return this.icons.errors;\n            case Actions.CONDITIONS:\n                return this.icons.conditions;\n            case Actions.UNITS:\n                return this.icons.units;\n            case Actions.ADD_SHOOTS:\n                return this.icons.add;\n            case Actions.TIE:\n                return this.icons.tie;\n            case Actions.UNTIE:\n                return this.icons.untie;\n        }\n    }\n\n    // Don't remove this method.\n    // It needs for mobile.\n    notGeneralCells(key) {\n        switch (key) {\n            case this.fields.ACTIVE:\n            case this.fields.BIRTH_DATE:\n            case this.fields.SAFE_TECHNIQUE:\n            case this.fields.RANK:\n            case this.fields.DATE:\n            case this.fields.GROUPS:\n            case this.fields.NOT_COUNTED:\n            case this.fields.WEAPON_NAME:\n                return false;\n            default:\n                return true;\n        }\n    }\n\n    getClass(action: string) {\n        switch (action) {\n            case Actions.REMOVE:\n                return 'btn-danger';\n            case Actions.CHANGE_PASSWORD:\n                return 'btn-warning';\n            default:\n                return 'btn-primary';\n        }\n    }\n}\n","import {Directive, EventEmitter, Input, Output} from '@angular/core';\nimport {rotate, SortDirection, SortEvent} from '@models/interfaces/table';\n\n@Directive({\n    selector: 'th[sortable]',\n    host: {\n        '[class.asc]': 'direction === \"asc\"',\n        '[class.desc]': 'direction === \"desc\"',\n        '(click)': 'rotate()'\n    }\n})\n\nexport class NgbdSortableHeader {\n\n    @Input() sortable: string;\n    @Input() direction: SortDirection = '';\n    @Output() sort = new EventEmitter<SortEvent>();\n\n    rotate() {\n        this.direction = rotate[this.direction];\n        this.sort.emit({column: this.sortable, direction: this.direction});\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgbPaginationModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {BaseTableComponent} from './components/base-table/base-table.component';\nimport {SharedModule} from '@shared/shared.module';\nimport {NgbdSortableHeader} from '@table/table.directive';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {UiSwitchModule} from 'ngx-toggle-switch';\nimport { RatingTableComponent } from './components/rating-table/rating-table.component';\n\n@NgModule({\n    declarations: [\n        BaseTableComponent,\n        NgbdSortableHeader,\n        RatingTableComponent,\n    ],\n    imports: [\n        CommonModule,\n        SharedModule,\n        NgbPaginationModule,\n        FontAwesomeModule,\n        UiSwitchModule\n    ],\n    exports: [\n        BaseTableComponent,\n        NgbdSortableHeader,\n        RatingTableComponent\n    ]\n})\nexport class TableModule {\n}\n","import {Action} from '@ngrx/store';\nimport {ITournament} from '@models/interfaces/tournament';\n\nexport enum ActionTypes {\n    LoadTournaments = '[Tournaments Page] Load Tournaments',\n    LoadedTournaments = '[Tournaments Page] Loaded Tournaments',\n    ErrorTournaments = '[Tournaments Page] Error Tournaments',\n    CreateTournament = '[Tournaments Page] Create Tournament',\n    DeleteTournament = '[Tournaments Page] Delete Tournament',\n    UpdateTournament = '[Tournaments Page] Update Tournament',\n    ForceUpdateTournamentCompetitors = '[Tournaments Page] Force Update Tournament Competitors',\n    ForceUpdateTournament = '[Tournaments Page] Force Update Tournament',\n    LoadTournamentById = '[Tournaments Page] Load Tournament By Id',\n    LoadedTournamentById = '[Tournaments Page] Loaded Tournament By Id',\n    AddScoreList = '[Tournaments Page] Add Score List',\n    RefreshTournaments = '[Tournaments Page] Refresh Tournaments',\n    LoadAllData = '[Tournaments Page] Load All Data',\n    LoadedAllData = '[Tournaments Page] Loaded All Data',\n    StartTournament = '[Mobile Competitors Page] Start Tournament',\n    LoadedStartTournament = '[Mobile Competitors Page] Loaded Start Tournament'\n}\n\ninterface IPayload {\n    tournament: ITournament;\n    tournamentId: string;\n}\n\nexport class LoadTournaments implements Action {\n    readonly type = ActionTypes.LoadTournaments;\n\n    constructor() {\n    }\n}\n\nexport class LoadedTournaments implements Action {\n    readonly type = ActionTypes.LoadedTournaments;\n\n    constructor(public payload: ITournament[]) {\n    }\n}\n\nexport class RefreshTournaments implements Action {\n    readonly type = ActionTypes.RefreshTournaments;\n\n    constructor(public payload: ITournament[]) {\n    }\n}\n\nexport class ErrorTournaments implements Action {\n    readonly type = ActionTypes.ErrorTournaments;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class CreateTournament implements Action {\n    readonly type = ActionTypes.CreateTournament;\n\n    constructor(public payload: ITournament) {\n    }\n}\n\nexport class DeleteTournament implements Action {\n    readonly type = ActionTypes.DeleteTournament;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class UpdateTournament implements Action {\n    readonly type = ActionTypes.UpdateTournament;\n\n    constructor(public payload: IPayload) {\n    }\n}\n\nexport class ForceUpdateTournamentCompetitors implements Action {\n    readonly type = ActionTypes.ForceUpdateTournamentCompetitors;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class ForceUpdateTournament implements Action {\n    readonly type = ActionTypes.ForceUpdateTournament;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadTournamentById implements Action {\n    readonly type = ActionTypes.LoadTournamentById;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class LoadedTournamentById implements Action {\n    readonly type = ActionTypes.LoadedTournamentById;\n\n    constructor(public payload: ITournament) {\n    }\n}\n\nexport class AddScoreList implements Action {\n    readonly type = ActionTypes.AddScoreList;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadAllData implements Action {\n    readonly type = ActionTypes.LoadAllData;\n\n    constructor() {\n    }\n}\n\nexport class LoadedAllData implements Action {\n    readonly type = ActionTypes.LoadedAllData;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class StartTournament implements Action {\n    readonly type = ActionTypes.StartTournament;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class LoadedStartTournament implements Action {\n    readonly type = ActionTypes.LoadedStartTournament;\n\n    constructor(public payload: string) {\n    }\n}\n\n\nexport type TournamentsAction = LoadTournaments &\n    LoadedTournaments & ErrorTournaments & CreateTournament &\n    DeleteTournament & UpdateTournament & LoadTournamentById &\n    ForceUpdateTournamentCompetitors & ForceUpdateTournament &\n    LoadedTournamentById & AddScoreList & RefreshTournaments &\n    LoadAllData & LoadedAllData & StartTournament & LoadedStartTournament;\n","<div class=\"container\" [@EnterLeave]>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <h1>{{'tournaments' | translate | titlecase}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <button type=\"button\" class=\"btn btn-primary w-100\"\n                    (click)=\"addTournament()\">{{'addTournament' | translate}}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"tournaments$ | async as tournaments\">\n        <div class=\"col\">\n            <app-base-table class=\"main__table\"\n                            [objects]=\"tournaments\"\n                            [actions]=\"actions\"\n                            [pageType]=\"pageTypes.TOURNAMENT\"\n                            (action)=\"handleAction($event)\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {Location} from '@angular/common';\nimport {tap} from 'rxjs/operators';\n\nimport {ITournament} from '@models/interfaces/tournament';\nimport {ModalService} from '@modal/services/modal.service';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {Actions} from '@models/constants/actions';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {TournamentMocks} from '@models/mocks/tournaments.mock';\nimport {TournamentsService} from '@tournaments/services/tournaments.service';\nimport {JudgesService} from '@judges/service/judges.service';\nimport {MessageService} from '@services/message.service';\nimport {CreateTournament, DeleteTournament, LoadTournaments, StartTournament, UpdateTournament} from '@tournaments/actions/actions';\nimport {selectTournamentsData} from '@tournaments/selectors/selectors';\nimport {PageTypes} from '@models/constants/page-types';\nimport {Animations} from '@models/constants/animations';\nimport {LoadPersons} from '@persons/actions/actions';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {LoadJudges} from '@judges/actions/judges.action';\nimport EMPTY_TOURNAMENT = TournamentMocks.EMPTY_TOURNAMENT;\n\n@Component({\n    selector: 'app-tournaments',\n    templateUrl: './tournaments.component.html',\n    styleUrls: ['./tournaments.component.scss'],\n    animations: [Animations.enterLeaveOpacity],\n})\nexport class TournamentsComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n\n    public actions: string[];\n    public tournaments$: Observable<ITournament[]>;\n    public pageType = PageTypes;\n    public pageTypes = PageTypes;\n    public mobileActions: string[];\n    public activeTournaments: ITournament[];\n\n    constructor(private modalService: ModalService,\n                private tournamentsService: TournamentsService,\n                private judgesService: JudgesService,\n                private messageService: MessageService,\n                private router: Router,\n                private store: Store<any>,\n                private location: Location) {\n        super();\n    }\n\n    ngOnInit() {\n        this.getTournaments();\n        this.fetchJudges();\n        this.store.dispatch(new LoadPersons());\n        this.mobileActions = [\n            Actions.COMPETITORS,\n            Actions.STAGES,\n            Actions.START\n        ];\n        this.actions = [\n            Actions.CHANGE,\n            Actions.COMPETITORS,\n            Actions.STAGES,\n            Actions.RATING,\n            Actions.REMOVE\n        ];\n    }\n\n    getTournaments() {\n        this.tournaments$ = this.store.pipe(\n            select(selectTournamentsData),\n            tap((tournaments: ITournament[]) => {\n                if (!tournaments) {\n                    return this.fetchTournaments();\n                }\n\n                this.activeTournaments = this.tournamentsService.filterTournaments(tournaments);\n            })\n        );\n    }\n\n    fetchTournaments() {\n        this.store.dispatch(new LoadTournaments());\n    }\n\n    fetchJudges() {\n        this.store.dispatch(new LoadJudges());\n    }\n\n    handleAction(event: { action: string, item: any }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openTournamentModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            case Actions.COMPETITORS:\n                return this.goToCompetitors(event.item.id, event.item.name);\n            case Actions.STAGES:\n                return this.goToStages(event.item.id, event.item.name);\n            case Actions.RATING:\n                return this.goToRating(event.item.id);\n            case Actions.START:\n                return this.goToExercise(event.item.id, event.item.stages[0].id);\n        }\n    }\n\n    openTournamentModal(tournament: ITournament, edit: boolean) {\n        const objectType = 'Tournament';\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...tournament}, edit, objectType},\n            (updatedTournament) => {\n                if (updatedTournament) {\n                    edit ? this.updateTournament(tournament.id, updatedTournament) :\n                        this.createTournament(updatedTournament);\n                }\n            });\n    }\n\n    openDialogModal(message: string, tournament: ITournament) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: tournament.name, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.removeTournament(tournament.id);\n                }\n            });\n    }\n\n    addTournament() {\n        const tournament: ITournament = EMPTY_TOURNAMENT;\n        this.openTournamentModal(tournament, false);\n    }\n\n    createTournament(tournament: ITournament) {\n        this.store.dispatch(new CreateTournament(tournament));\n    }\n\n    removeTournament(tournamentId: string) {\n        this.store.dispatch(new DeleteTournament(tournamentId));\n    }\n\n    updateTournament(tournamentId: string, tournament: ITournament) {\n        tournament.id = tournamentId;\n        this.store.dispatch(new UpdateTournament({tournament, tournamentId}));\n    }\n\n    goToStages(id: string, name: string) {\n        this.router.navigate(['/tournaments/stages'], {queryParams: {tournament: id, name}});\n    }\n\n    goToCompetitors(id: string, name: string) {\n        this.router.navigate(['/tournaments/competitors'], {queryParams: {tournament: id, name}});\n    }\n\n    goToRating(id: string) {\n        this.router.navigate(['tournaments/rating'], {queryParams: {tournament: id}});\n    }\n\n    goToExercise(tournamentId: string, stageId: string) {\n        this.store.dispatch(new StartTournament(tournamentId));\n        this.router.navigate(['/exercise'], {queryParams: {tournament: tournamentId, stage: stageId}});\n    }\n\n    goBack() {\n        this.location.back();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {Location} from '@angular/common';\nimport {select, Store} from '@ngrx/store';\n\nimport * as fromPersons from '@persons/actions/actions';\nimport * as fromTournaments from '@tournaments/actions/actions';\nimport * as fromCompetitors from '@competitors/actions/actions';\nimport {ITournament} from '@models/interfaces/tournament';\nimport {selectTournamentsData} from '@tournaments/selectors/selectors';\nimport {competitorMapperToStore} from '@mappers/tournament.mapper';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\nimport {TournamentsService} from '@tournaments/services/tournaments.service';\nimport {MessageService} from '@services/message.service';\nimport {LocalStorageService} from '@services/local-storage.service';\nimport {DialogsService} from '@shared/services/dialogs.service';\n\n@Injectable()\nexport class TournamentsEffects {\n\n    constructor(private actions$: Actions,\n                private tournamentsService: TournamentsService,\n                private messageService: MessageService,\n                private localStorageService: LocalStorageService,\n                private store: Store<any>,\n                private dialogService: DialogsService,\n                private location: Location) {\n    }\n\n    @Effect()\n    loadTournaments$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.LoadTournaments),\n            mergeMap(() => this.tournamentsService.getTournaments()\n                .pipe(\n                    map((tournaments: ITournament[]) => {\n                        return new fromTournaments.LoadedTournaments(tournaments);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromTournaments.ErrorTournaments(err));\n                    })\n                ))\n        );\n\n    @Effect()\n    loadTournamentById$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.LoadTournamentById),\n            mergeMap((action: any) => this.tournamentsService.getTournamentById(action.payload)\n                .pipe(\n                    map((tournament: ITournament) => new fromTournaments.LoadedTournamentById(tournament)),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromTournaments.ErrorTournaments(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshTournaments$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.RefreshTournaments),\n            map((action: any) => new fromTournaments.LoadedTournaments(action.payload)),\n            catchError((err) => {\n                this.messageService.showToastrError(err);\n                this.messageService.showPushNotification(err);\n                return of(new fromTournaments.ErrorTournaments(err));\n            })\n        );\n\n    @Effect()\n    createTournament$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.CreateTournament),\n            withLatestFrom(this.store.select(selectTournamentsData)),\n            switchMap(([action, tournaments]: Array<any>) => this.tournamentsService.createTournament(action.payload)\n                .pipe(\n                    map((tournament: ITournament) => {\n                        const message = {user: ToastrUsersType.TOURNAMENT, type: ToastrMessageType.CREATE};\n                        if (tournament) {\n                            tournaments.push(tournament);\n                            this.messageService.showToastrSuccess(message);\n                        }\n                        return new fromTournaments.RefreshTournaments(tournaments);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromTournaments.ErrorTournaments(err));\n                    })\n                ))\n        );\n\n    @Effect()\n    deleteTournament$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.DeleteTournament),\n            withLatestFrom(this.store.select(selectTournamentsData)),\n            switchMap(([action, tournaments]: Array<any>) => this.tournamentsService.removeTournament(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.TOURNAMENT, type: ToastrMessageType.REMOVE};\n                        tournaments = tournaments.filter((item: ITournament) => item.id !== action.payload);\n                        this.messageService.showToastrSuccess(message);\n                        return new fromTournaments.RefreshTournaments(tournaments);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromTournaments.ErrorTournaments(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    updateTournament$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.UpdateTournament),\n            withLatestFrom(this.store.select(selectTournamentsData)),\n            switchMap(([action, tournaments]: Array<any>) => {\n                const {tournament, tournamentId} = action.payload;\n                return this.tournamentsService.updateTournament(tournamentId, tournament)\n                    .pipe(\n                        map((updatedTournament: ITournament) => {\n                            const message = {user: ToastrUsersType.TOURNAMENT, type: ToastrMessageType.UPDATE};\n                            if (updatedTournament) {\n                                tournaments = tournaments.map((item: ITournament) =>\n                                    item.id === updatedTournament.id ? updatedTournament : item);\n                                this.messageService.showToastrSuccess(message);\n                            }\n                            return new fromTournaments.RefreshTournaments(tournaments);\n                        }),\n                        catchError((err) => {\n                            this.messageService.showToastrError(err);\n                            this.messageService.showPushNotification(err);\n                            return of(new fromTournaments.ErrorTournaments(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    forceUpdateTournamentCompetitors$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.ForceUpdateTournamentCompetitors),\n            withLatestFrom(this.store.select(selectTournamentsData)),\n            map(([action, tournaments]: Array<any>) => {\n                const {tournament, competitor} = action.payload;\n                let cmpToUpdate = tournament.competitors.find(cmp => cmp.id === competitor.id);\n                for (const key in competitor) {\n                    if (competitor.hasOwnProperty(key)) {\n                        cmpToUpdate[key] = competitor[key];\n                    }\n                }\n                cmpToUpdate = competitorMapperToStore(cmpToUpdate);\n                tournament.competitors = tournament.competitors\n                    .map(cmp => cmp.id === cmpToUpdate.id ? cmpToUpdate : cmp);\n                tournaments = tournaments.map(trn => trn.id === tournament.id ? tournament : trn);\n                return new fromTournaments.RefreshTournaments(tournaments);\n            }),\n            catchError((err) => {\n                this.messageService.showToastrError(err);\n                this.messageService.showPushNotification(err);\n                return of(new fromTournaments.ErrorTournaments(err));\n            })\n        );\n\n    @Effect()\n    forceUpdateTournament$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.ForceUpdateTournament),\n            withLatestFrom(this.store.select(selectTournamentsData)),\n            map(([action, tournaments]: Array<any>) => {\n                tournaments = tournaments.map(trn => trn.id === action.payload.id ? action.payload : trn);\n                return new fromTournaments.RefreshTournaments(tournaments);\n            }),\n            catchError((err) => {\n                this.messageService.showToastrError(err);\n                this.messageService.showPushNotification(err);\n                return of(new fromTournaments.ErrorTournaments(err));\n            })\n        );\n\n    @Effect()\n    addScoreList$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.AddScoreList),\n            withLatestFrom(this.store.pipe(select(selectTournamentsData))),\n            switchMap(([action, tournaments]: any) => {\n                    const {tournamentId, stageId, scores, fromStorage} = action.payload;\n                    return this.tournamentsService.addScoreList(tournamentId, stageId, scores)\n                        .pipe(\n                            switchMap((response) => {\n                                if (fromStorage) {\n                                    this.localStorageService.removeScoreList(tournamentId, stageId);\n                                }\n                                return [new fromCompetitors.LoadCompetitors(tournamentId)];\n                            }),\n                            catchError((err) => {\n                                this.messageService.showToastrError(err);\n                                this.messageService.showPushNotification(err);\n                                return of(new fromTournaments.ErrorTournaments(err));\n                            })\n                        );\n                }\n            )\n        );\n\n    @Effect()\n    loadAllData$ = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.LoadAllData),\n            mergeMap(() => {\n                    return [new fromTournaments.LoadTournaments(), new fromPersons.LoadPersons()];\n                }\n            ),\n            catchError((err) => {\n                this.messageService.showToastrError(err);\n                this.messageService.showPushNotification(err);\n                return of(new fromTournaments.ErrorTournaments(err));\n            })\n        );\n\n    @Effect()\n    startTournament = this.actions$\n        .pipe(\n            ofType(fromTournaments.ActionTypes.StartTournament),\n            mergeMap((action: any) => this.tournamentsService.startTournament(action.payload)\n                .pipe(\n                    map((response) => new fromTournaments.LoadedStartTournament(response.id)),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromTournaments.ErrorTournaments(err));\n                    })\n                )\n            )\n        );\n}\n","import {ActionTypes, TournamentsAction} from '@tournaments/actions/actions';\nimport {ITournament} from '@models/interfaces/tournament';\nimport {IExercise} from '@models/interfaces/exercise';\n\nexport interface State {\n    tournaments: ITournament[];\n    tournament: ITournament;\n    scoreList: IExercise[];\n    errors?: any;\n}\n\nexport const initialState: State = {\n    tournaments: undefined,\n    scoreList: [],\n    tournament: null\n};\n\nexport function reducer (state: State = initialState, action: TournamentsAction): State {\n    switch (action.type) {\n        case ActionTypes.LoadedTournaments:\n            return {...state, tournaments: action.payload};\n        case ActionTypes.LoadedTournamentById:\n            return {...state, tournament: action.payload};\n        case ActionTypes.ErrorTournaments:\n            return {...state, errors: action.payload};\n        case ActionTypes.AddScoreList:\n            return {...state, scoreList: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromTournaments from '@tournaments/reducers/reducer';\n\nexport const selectTournaments = createFeatureSelector<fromTournaments.State>('tournaments');\n\nexport const selectTournamentsData = createSelector(\n    selectTournaments,\n    (state: fromTournaments.State) => state.tournaments\n);\n\nexport const selectTournamentsErrors = createSelector(\n    selectTournaments,\n    (state: fromTournaments.State) => state.errors\n);\n\nexport const selectTournamentById = createSelector(\n    selectTournaments,\n    (state: fromTournaments.State) => state.tournament\n);\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {ITournament} from '@models/interfaces/tournament';\nimport {environment} from '@environments/environment';\nimport {tournamentMapperFromServer, tournamentMapperToServer} from '@mappers/tournament.mapper';\nimport {IExercise} from '@models/interfaces/exercise';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TournamentsService {\n\n    baseUrl: string = environment.BASE_URL + '/api/competitions/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.baseUrl + '/all').pipe(\n            map((response) => response.map((item) => tournamentMapperFromServer(item)))\n        );\n    }\n\n    createTournament(data: ITournament): Observable<ITournament> {\n        const mappedData = tournamentMapperToServer(data);\n        return this.http.post<ITournament>(this.baseUrl + '/create', mappedData)\n            .pipe(map((response) => tournamentMapperFromServer(response)));\n    }\n\n    updateTournament(id: string, data: ITournament): Observable<ITournament> {\n        const mappedData = tournamentMapperToServer(data);\n        return this.http.put<ITournament>(`${this.baseUrl}/${id}`, mappedData)\n            .pipe(map((response) => tournamentMapperFromServer(response)));\n    }\n\n    removeTournament(id: string): Observable<ITournament> {\n        return this.http.delete<ITournament>(`${this.baseUrl}/${id}`);\n    }\n\n    getTournamentById(id: string): Observable<ITournament> {\n        return this.http.get(`${this.baseUrl}/${id}`)\n            .pipe(map((response) => tournamentMapperFromServer(response)));\n    }\n\n    addScoreList(tournamentId: string, stageId: string, scores: IExercise[]) {\n        return this.http.post(this.baseUrl + `/competition/${tournamentId}/stage/${stageId}/score/list`, scores)\n            .pipe(map((response: any) => response));\n    }\n\n    startTournament(tournamentId: string): Observable<any> {\n        return this.http.post(this.baseUrl + `/competition/${tournamentId}/start`, null)\n            .pipe(map((response) => response));\n    }\n\n    findTournamentById(tournaments: ITournament[], tournamentId: string): ITournament {\n        return tournaments.find((tournament: ITournament) => tournament.id === tournamentId);\n    }\n\n    filterTournaments(tournaments: ITournament[]): ITournament[] {\n        return tournaments.filter((tournament: ITournament) => tournament.active);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {TournamentsComponent} from './components/tournaments/tournaments.component';\nimport {SharedModule} from '@shared/shared.module';\nimport {TableModule} from '@table/table.module';\nimport {ModalModule} from '@modal/modal.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: TournamentsComponent\n    }\n];\n\n@NgModule({\n    declarations: [TournamentsComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        TableModule,\n        ModalModule,\n        RouterModule.forChild(routes),\n    ]\n})\nexport class TournamentsModule {\n}\n","import {Action} from '@ngrx/store';\nimport {IUser, IUserRegistration} from '@models/interfaces/human';\nimport {IPage} from '@persons/actions/actions';\n\nexport enum ActionTypes {\n    LoadUsers = '[Users Page] Load Users',\n    LoadedUsers = '[Users Page] Loaded Users',\n    RefreshUsers = '[Users Page] Refresh Users',\n    CreateUser = '[User Page] Create User',\n    UpdateUser = '[User Page] Update User',\n    DeleteUser = '[User Page] Delete User',\n    UserErrors = '[User Page] User Errors',\n    LoadUsersPerPage = '[User Page] Load Users Per Page',\n    LoadedUsersPerPage = '[User Page] Loaded Users Per Page',\n    LoadUserCount = '[User Page] Load Users Count',\n    LoadedUserCount = '[User Page] Loaded Users Count'\n}\n\nexport class LoadUsers implements Action {\n    readonly type = ActionTypes.LoadUsers;\n}\n\nexport class LoadedUsers implements Action {\n    readonly type = ActionTypes.LoadedUsers;\n\n    constructor(public payload: IUser[]) {\n    }\n}\n\nexport class LoadUsersPerPage implements Action {\n    readonly type = ActionTypes.LoadUsersPerPage;\n\n    constructor(public payload: IPage) {\n    }\n}\n\nexport class LoadedUsersPerPage implements Action {\n    readonly type = ActionTypes.LoadedUsersPerPage;\n\n    constructor(public payload: IUser[]) {\n    }\n}\n\nexport class RefreshUsers implements Action {\n    readonly type = ActionTypes.RefreshUsers;\n\n    constructor(public payload: IUser[]) {\n    }\n}\n\nexport class CreateUser implements Action {\n    readonly type = ActionTypes.CreateUser;\n\n    constructor(public payload: IUserRegistration) {\n    }\n}\n\nexport class UpdateUser implements Action {\n    readonly type = ActionTypes.UpdateUser;\n\n    constructor(public payload: IUser) {\n    }\n}\n\nexport class DeleteUser implements Action {\n    readonly type = ActionTypes.DeleteUser;\n\n    constructor(public payload: string) {\n    }\n}\n\nexport class UserErrors implements Action {\n    readonly type = ActionTypes.UserErrors;\n\n    constructor(public payload: any) {\n    }\n}\n\nexport class LoadUserCount implements Action {\n    readonly type = ActionTypes.LoadUserCount;\n}\n\nexport class LoadedUserCount implements Action {\n    readonly type = ActionTypes.LoadedUserCount;\n\n    constructor(public payload: number) {\n    }\n}\n\nexport type UserActions = LoadUsers & LoadedUsers &\n    RefreshUsers & CreateUser & UpdateUser & DeleteUser &\n    UserErrors & LoadUsersPerPage & LoadedUsersPerPage &\n    LoadUserCount & LoadedUserCount;\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <h1>{{'users' | translate | titlecase}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <button type=\"button\" class=\"btn btn-primary w-100\"\n                    (click)=\"add()\">{{'add' | translate}} {{('user' | translate: {ending: 'я'}).toLowerCase() }}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"users$ | async as users\">\n        <div class=\"col\">\n            <app-base-table class=\"main__table\"\n                            [objects]=\"users\"\n                            [actions]=\"actions\"\n                            (action)=\"handleAction($event)\"\n                            [pageType]=\"pageTypes.USER\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\nimport {select, Store} from '@ngrx/store';\nimport {tap} from 'rxjs/internal/operators/tap';\n\nimport {IUser, IUserRegistration} from '@models/interfaces/human';\nimport {CreateUser, DeleteUser, LoadUsers, UpdateUser} from '@user/actions/actions';\nimport {selectUsersData, selectUsersErrors} from '@user/selectors/selectors';\nimport {PageTypes} from '@models/constants/page-types';\nimport {Actions} from '@models/constants/actions';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {ChangePasswordModalComponent} from '@modal/components/change-password-modal/change-password-modal.component';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {Mocks} from '@models/mocks/persons.mock';\nimport {ModalService} from '@modal/services/modal.service';\nimport {ChangePassword} from '@judges/actions/judges.action';\nimport {MessageService} from '@services/message.service';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\n\n@Component({\n    selector: 'app-user',\n    templateUrl: './user.component.html',\n    styleUrls: ['./user.component.scss']\n})\nexport class UserComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public page: number;\n    public size: number;\n    public pageTypes = PageTypes;\n    public actions: string[];\n\n    public users$: Observable<IUser[]>;\n\n    constructor(private route: ActivatedRoute,\n                private store: Store<any>,\n                private modalService: ModalService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.CHANGE, Actions.CHANGE_PASSWORD, Actions.REMOVE];\n        this.getUsers();\n    }\n\n    handleAction(event: { action: string, item: any }) {\n        switch (event.action) {\n            case Actions.CHANGE:\n                return this.openUserModal(event.item, true);\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            default:\n                return this.openChangePasswordModal(event.item);\n        }\n    }\n\n    getUsers() {\n        this.users$ = this.store.select(selectUsersData)\n            .pipe(tap((users: IUser[]) => !users && this.fetchUsers()));\n    }\n\n    fetchUsers() {\n        this.store.dispatch(new LoadUsers());\n    }\n\n    openUserModal(user: IUser, edit: boolean) {\n        const objectType = this.pageTypes.USER;\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...user}, edit, objectType},\n            (res) => {\n                if (res) {\n                    edit ? this.updateUser(res, user.id) : this.createUser(res);\n                }\n            });\n    }\n\n    openChangePasswordModal(user: IUser) {\n        this.modalService.openModal(ChangePasswordModalComponent,\n            {centered: true},\n            null,\n            (res) => {\n                if (res) {\n                    const data = {data: user, newPassword: res};\n                    this.changeUserPassword(data);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: IUser) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.userName, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.deleteUser(item.id);\n                }\n            });\n    }\n\n    add() {\n        this.openUserModal(Mocks.emptyJudge, false);\n    }\n\n    createUser(user: IUserRegistration) {\n        this.store.dispatch(new CreateUser(user));\n    }\n\n    updateUser(user: IUser, userId: string) {\n        user.id = userId;\n        this.store.dispatch(new UpdateUser(user));\n    }\n\n    deleteUser(userId: string) {\n        this.store.dispatch(new DeleteUser(userId));\n    }\n\n    changeUserPassword(item: { data: IUser, newPassword: string }) {\n        this.store.dispatch(new ChangePassword(item));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {Store} from '@ngrx/store';\n\nimport * as fromUser from '@user/actions/actions';\nimport {LoadedUserCount} from '@user/actions/actions';\nimport {IUser} from '@models/interfaces/human';\nimport {MessageService} from '@services/message.service';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\nimport {UserService} from '@user/services/user.service';\nimport {PersonService} from '@persons/service/person.service';\nimport {JudgesService} from '@judges/service/judges.service';\nimport {selectUsersData} from '@user/selectors/selectors';\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(\n        private actions$: Actions,\n        private userService: UserService,\n        private messageService: MessageService,\n        private personService: PersonService,\n        private judgeService: JudgesService,\n        private store: Store<any>\n    ) {\n    }\n\n    @Effect()\n    loadUsers$ = this.actions$\n        .pipe(\n            ofType(fromUser.ActionTypes.LoadUsers),\n            mergeMap(() => this.userService.getUsers()\n                .pipe(\n                    map((users: IUser[]) => new fromUser.LoadedUsers(users)),\n                    catchError((err) => of(new fromUser.UserErrors(err)))\n                ))\n        );\n\n    @Effect()\n    refreshUsers$ = this.actions$\n        .pipe(\n            ofType(fromUser.ActionTypes.RefreshUsers),\n            map((action: any) => new fromUser.LoadedUsers(action.payload)),\n            catchError((err) => of(new fromUser.UserErrors(err)))\n        );\n\n    @Effect()\n    loadUsersPerPage$ = this.actions$\n        .pipe(\n            ofType(fromUser.ActionTypes.LoadUsersPerPage),\n            mergeMap((action: any) => {\n                const {pageNumber, pageSize} = action.payload;\n                this.personService.personNavigate({pageNumber, pageSize});\n                return this.userService.getUsersPerPage(pageNumber, pageSize)\n                    .pipe(\n                        switchMap((users: IUser[]) => [\n                            new fromUser.LoadedUsersPerPage(users),\n                        ]),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromUser.UserErrors(err));\n                        })\n                    );\n            })\n        );\n\n    @Effect()\n    createUser$ = this.actions$\n        .pipe(\n            ofType(fromUser.ActionTypes.CreateUser),\n            withLatestFrom(this.store.select(selectUsersData)),\n            switchMap(([action, users]: any[]) => this.userService.createUser(action.payload)\n                .pipe(\n                    map((createdUser: IUser) => {\n                        const message = {user: ToastrUsersType.USER, type: ToastrMessageType.CREATE};\n                        if (createdUser) {\n                            this.messageService.showToastrSuccess(message);\n                            users.push(createdUser);\n                        }\n                        return new fromUser.RefreshUsers(users);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromUser.UserErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    deleteUser$ = this.actions$\n        .pipe(\n            ofType(fromUser.ActionTypes.DeleteUser),\n            withLatestFrom(this.store.select(selectUsersData)),\n            switchMap(([action, users]: any[]) => this.judgeService.deleteJudge(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.USER, type: ToastrMessageType.REMOVE};\n                        this.messageService.showToastrSuccess(message);\n                        users = users.filter((user: IUser) => user.id !== action.payload);\n                        return new fromUser.RefreshUsers(users);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromUser.UserErrors(err));\n                    })\n                )),\n        );\n\n    @Effect()\n    updateUser$ = this.actions$\n        .pipe(\n            ofType(fromUser.ActionTypes.UpdateUser),\n            withLatestFrom(this.store.select(selectUsersData)),\n            switchMap(([action, users]: any[]) => {\n                return this.judgeService.updateJudge(action.payload, action.payload.id)\n                    .pipe(\n                        map((data: IUser) => {\n                            const message = {user: ToastrUsersType.USER, type: ToastrMessageType.UPDATE};\n                            if (data) {\n                                this.messageService.showToastrSuccess(message);\n                                users = users.map((user: IUser) =>\n                                    user.id === action.payload.id ? action.payload : user);\n                            }\n                            return new fromUser.RefreshUsers(users);\n                        }),\n                        catchError((err) => {\n                            this.messageService.showPushNotification(err);\n                            this.messageService.showToastrError(err);\n                            return of(new fromUser.UserErrors(err));\n                        })\n                    );\n            }),\n        );\n\n    @Effect()\n    loadUsersCount$ = this.actions$\n        .pipe(\n            ofType(fromUser.ActionTypes.LoadUserCount),\n            mergeMap(() => this.userService.getUsersCount()\n                .pipe(\n                    map((count: number) => new LoadedUserCount(Number(count))),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromUser.UserErrors(err));\n                    })\n                ))\n        );\n}\n","import {IUser} from '@models/interfaces/human';\nimport {ActionTypes, UserActions} from '@user/actions/actions';\n\nexport interface State {\n    users: IUser[];\n    usersPerPage: IUser[];\n    usersCount: number;\n    errors?: any;\n}\n\nexport const initialState: State = {\n    users: undefined,\n    usersCount: 0,\n    usersPerPage: []\n};\n\nexport function reducer(state: State = initialState, action: UserActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedUsers:\n            return {...state, users: action.payload};\n        case ActionTypes.LoadedUsersPerPage:\n            return {...state, usersPerPage: action.payload};\n        case ActionTypes.LoadedUserCount:\n            return {...state, usersCount: action.payload};\n        case ActionTypes.UserErrors:\n            return {...state, errors: action.payload};\n        default:\n            return state;\n    }\n}\n\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromUser from '@user/reducers/reducer';\n\nexport const selectUsers = createFeatureSelector<fromUser.State>('users');\n\nexport const selectUsersData = createSelector(\n    selectUsers,\n    (state: fromUser.State) => state.users\n);\n\nexport const selectUsersPerPage = createSelector(\n    selectUsers,\n    (state: fromUser.State) => state.usersPerPage\n);\n\nexport const selectUsersCount = createSelector(\n    selectUsers,\n    (state: fromUser.State) => state.usersCount\n);\n\nexport const selectUsersErrors = createSelector(\n    selectUsers,\n    (state: fromUser.State) => state.errors\n);\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@environments/environment';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {IUser, IUserRegistration} from '@models/interfaces/human';\nimport {judgeMapperFromServer, judgeRegistrationMapperToServer} from '@mappers/judge.mapper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    private userBaseUrl: string = environment.BASE_URL + '/api/users/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getUsers(): Observable<IUser[]> {\n        return this.http.get(this.userBaseUrl + '/all/user')\n            .pipe(map((response: IUser[]) => response.map((item) => judgeMapperFromServer(item))));\n    }\n\n    getUsersPerPage(pageNumber: number, pageSize: number): Observable<IUser[]> {\n        return this.http.get(this.userBaseUrl + `/all/${pageNumber}/${pageSize}`)\n            .pipe(map((response: IUser[]) => response));\n    }\n\n    getUsersCount(): Observable<number> {\n        return this.http.get(this.userBaseUrl + '/count')\n            .pipe(map((response: number) => response));\n    }\n\n    createUser(user: IUserRegistration): Observable<IUserRegistration> {\n        const mappedData = judgeRegistrationMapperToServer(user);\n        return this.http.post(this.userBaseUrl + '/createUser', mappedData)\n            .pipe(map((response: IUserRegistration) => judgeMapperFromServer(response)));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {UserComponent} from './components/user/user.component';\nimport {TableModule} from '@table/table.module';\nimport {ModalModule} from '@modal/modal.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UserComponent\n    }\n];\n\n@NgModule({\n    declarations: [UserComponent],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        TableModule,\n        ModalModule,\n        RouterModule.forChild(routes)\n    ]\n})\nexport class UserModule {\n}\n","import {Action} from '@ngrx/store';\nimport {IWeapon, IWeaponTypes} from '@models/interfaces/weapons';\n\nexport enum ActionTypes {\n    LoadWeaponTypesForList = '[WeaponTypes Page] Load WeaponTypes',\n    LoadedWeaponTypesForList = '[WeaponTypes Page] Loaded WeaponTypes',\n    CreateWeaponType = '[WeaponTypes Page] Create WeaponType',\n    DeleteWeaponType = '[WeaponTypes Page] Delete WeaponType',\n    UpdateWeaponType = '[WeaponTypes Page] Update WeaponType',\n    RefreshWeaponTypes = '[WeaponTypes Page] Refresh WeaponTypes',\n    LoadWeaponList = '[WeaponList Page] Load Weapon List',\n    LoadedWeaponList = '[WeaponList Page] Loaded Weapon List',\n    RefreshWeaponList = '[WeaponList Page] Refresh Weapon List',\n    CreateWeaponListItem = '[WeaponList Page] Create Weapon List Item',\n    UpdateWeaponListItem = '[WeaponList Page] Update Weapon List Item',\n    DeleteWeaponListItem = '[WeaponList Page] Delete Weapon List Item',\n    WeaponErrors = '[WeaponTypes Page] Weapons Errors',\n    UnlinkWeapon = '[WeaponList Page] Unlink Weapon',\n    LinkWeapon = '[WeaponList Page] Link Weapon',\n    AddShootsCount = '[WeaponList Page] Add Shoots Count',\n    LoadPersonsWeaponList = '[WeaponList Page] Load Persons Weapon List',\n    LoadedPersonsWeaponList = '[WeaponList Page] Loaded Persons Weapon List',\n}\n\nexport class LoadWeaponTypesForList implements Action {\n    readonly type = ActionTypes.LoadWeaponTypesForList;\n}\n\nexport class LoadedWeaponTypesForList implements Action {\n    readonly type = ActionTypes.LoadedWeaponTypesForList;\n\n    constructor(public payload: IWeaponTypes[]) {}\n}\n\nexport class RefreshWeaponTypes implements Action {\n    readonly type = ActionTypes.RefreshWeaponTypes;\n\n    constructor(public payload: IWeaponTypes[]) {}\n}\n\nexport class CreateWeaponType implements Action {\n    readonly type = ActionTypes.CreateWeaponType;\n\n    constructor(public payload: IWeaponTypes) {}\n}\n\nexport class UpdateWeaponType implements Action {\n    readonly type = ActionTypes.UpdateWeaponType;\n\n    constructor(public payload: IWeaponTypes) {}\n}\n\nexport class DeleteWeaponType implements Action {\n    readonly type = ActionTypes.DeleteWeaponType;\n\n    constructor(public payload: string) {}\n}\n\nexport class WeaponErrors implements Action {\n    readonly type = ActionTypes.WeaponErrors;\n\n    constructor(public payload: any) {}\n}\n\nexport class LoadWeaponList implements Action {\n    readonly type = ActionTypes.LoadWeaponList;\n\n    constructor(public payload: string | number) {}\n}\n\nexport class LoadedWeaponList implements Action {\n    readonly type = ActionTypes.LoadedWeaponList;\n\n    constructor(public payload: IWeapon[]) {}\n}\n\nexport class LoadPersonsWeaponList implements Action {\n    readonly type = ActionTypes.LoadPersonsWeaponList;\n\n    constructor(public payload: {personName: string, divisionId: string}) {}\n}\n\nexport class RefreshWeaponList implements Action {\n    readonly type = ActionTypes.RefreshWeaponList;\n\n    constructor(public payload: IWeapon[]) {}\n}\n\nexport class CreateWeaponListItem implements Action {\n    readonly type = ActionTypes.CreateWeaponListItem;\n\n    constructor(public payload: IWeapon) {}\n}\n\nexport class UpdateWeaponListItem implements Action {\n    readonly type = ActionTypes.UpdateWeaponListItem;\n\n    constructor(public payload: IWeapon) {}\n}\n\nexport class DeleteWeaponListItem implements Action {\n    readonly type = ActionTypes.DeleteWeaponListItem;\n\n    constructor(public payload: string) {}\n}\n\nexport class UnlinkWeapon implements Action {\n    readonly type = ActionTypes.UnlinkWeapon;\n\n    constructor(public payload: string) {}\n}\n\nexport class LinkWeapon implements Action {\n    readonly type = ActionTypes.LinkWeapon;\n\n    constructor(public payload: {weaponId: string, personId: string}) {}\n}\n\nexport class AddShootsCount implements Action {\n    readonly type = ActionTypes.AddShootsCount;\n\n    constructor(public payload: {weaponId: string, fireCount: number}) {}\n}\n\n\n\nexport type WeaponsActions = LoadWeaponTypesForList &\n    LoadedWeaponTypesForList & CreateWeaponType & RefreshWeaponTypes &\n    DeleteWeaponType & WeaponErrors & LoadWeaponList &\n    LoadedWeaponList & RefreshWeaponList & CreateWeaponListItem &\n    UpdateWeaponListItem & DeleteWeaponListItem & UnlinkWeapon &\n    LinkWeapon & AddShootsCount & UpdateWeaponType & LoadPersonsWeaponList;\n","<div class=\"container\" *ngIf=\"(persons$ | async)?.length\">\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <h1>{{'weaponList' | translate | titlecase}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3 align-items-center\" *ngIf=\"divisions$ | async as divisions\">\n        <div class=\"col-4\">\n            <ng-select [id]=\"'divisions'\"\n                       [items]=\"divisions\"\n                       [placeholder]=\"'choose' | translate: {value: ('division' | translate).toLowerCase()}\"\n                       (change)=\"onSelectItem($event)\"\n                       [bindLabel]=\"'name'\"\n            ></ng-select>\n        </div>\n        <div class=\"col-4\">\n            <button type=\"button\" class=\"btn btn-primary w-100\"\n                    (click)=\"goToWeaponTypes()\">{{'weaponType' | translate}}</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"selectedDivision\" [@EnterLeave]>\n        <div class=\"col-4\">\n            <button type=\"button\"\n                    class=\"btn btn-primary w-100\"\n                    (click)=\"add()\"\n                    [disabled]=\"!(weaponTypes$ | async)?.length\"\n            >{{'add' | translate}} {{('weaponList' | translate).toLowerCase() }}</button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\" *ngIf=\"weapons$ | async as weapons\">\n        <div class=\"col\">\n            <app-base-table class=\"main__table\"\n                            [objects]=\"weapons\"\n                            [actions]=\"actions\"\n                            (action)=\"handleAction($event)\"\n                            [pageType]=\"pageTypes.WEAPON\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {Location} from '@angular/common';\n\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {IWeapon, IWeaponTypes} from '@models/interfaces/weapons';\nimport {IDivision} from '@models/interfaces/division';\nimport {IPerson} from '@models/interfaces/human';\nimport {selectWeaponList, selectWeaponTypesData} from '@weapon/selectors/selectors';\nimport {selectDivisionNames, selectDivisionsData} from '@divisions/selectors/selectors';\nimport {selectPersonData, selectPersonsByDivision} from '@persons/selectors/selectors';\nimport {Animations} from '@models/constants/animations';\nimport {WeaponMocks} from '@models/mocks/weapon.mocks';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {Actions} from '@models/constants/actions';\nimport {PageTypes} from '@models/constants/page-types';\nimport {ModalService} from '@modal/services/modal.service';\nimport {\n    CreateWeaponListItem,\n    DeleteWeaponListItem,\n    LoadPersonsWeaponList,\n    LoadWeaponList,\n    LoadWeaponTypesForList,\n    UnlinkWeapon\n} from '@weapon/actions/actions';\nimport {LoadPersons, LoadPersonsByDivision} from '@persons/actions/actions';\nimport {LoadDivisionNames, LoadDivisions} from '@divisions/actions/actions';\nimport {DialogsService} from '@shared/services/dialogs.service';\nimport {SubSink} from 'subsink/dist/subsink';\n\n@Component({\n    selector: 'app-weapon-list',\n    templateUrl: './weapon-list.component.html',\n    styleUrls: ['./weapon-list.component.scss'],\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class WeaponListComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n\n    public selectedDivision: IDivision;\n    public selectedPerson: string;\n    public pageTypes = PageTypes;\n    public actions: string[];\n    public divisionNames: string[];\n    public divisions: IDivision[];\n    public personsNames: string[];\n\n    public weaponTypes$: Observable<IWeaponTypes[]>;\n    public divisions$: Observable<IDivision[]>;\n    public weapons$: Observable<IWeapon[]>;\n    public persons$: Observable<IPerson[]>;\n    public divisionNames$: Observable<string[]>;\n    public personsByDivision$: Observable<IPerson[]>;\n\n    private dialogSubs: SubSink = new SubSink();\n\n    constructor(private router: Router,\n                private store: Store<any>,\n                private modalService: ModalService,\n                private location: Location,\n                private dialogService: DialogsService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [\n            Actions.CHANGE,\n            Actions.REMOVE,\n            Actions.ADD_SHOOTS,\n            Actions.TIE,\n            Actions.UNTIE\n        ];\n        this.getWeaponList();\n        this.getWeaponTypes();\n        this.getDivisions();\n        this.getPersons();\n    }\n\n    getWeaponList() {\n        this.weapons$ = this.store.select(selectWeaponList);\n    }\n\n    getWeaponTypes() {\n        this.weaponTypes$ = this.store.select(selectWeaponTypesData)\n            .pipe(tap((weaponTypes: IWeaponTypes[]) => !weaponTypes && this.fetchWeaponTypes()));\n    }\n\n    fetchWeaponTypes() {\n        this.store.dispatch(new LoadWeaponTypesForList());\n    }\n\n    getDivisions() {\n        this.fetchDivisions();\n        this.divisions$ = this.store.select(selectDivisionsData).pipe(\n            tap((divisions: IDivision[]) => {\n                if (divisions) {\n                    this.getDivisionNames(divisions);\n                    this.divisions = divisions;\n                }\n            })\n        );\n    }\n\n    fetchDivisions() {\n        this.store.dispatch(new LoadDivisions());\n    }\n\n    getDivisionNames(divisions: IDivision[]) {\n        this.store.dispatch(new LoadDivisionNames(divisions));\n        this.divisionNames$ = this.store.pipe(\n            select(selectDivisionNames),\n            tap((divisionNames: string[]) => this.divisionNames = divisionNames)\n        );\n    }\n\n    getPersons() {\n        this.persons$ = this.store.select(selectPersonData)\n            .pipe(tap((persons: IPerson[]) => !persons && this.fetchPersons()));\n    }\n\n    fetchPersons() {\n        this.store.dispatch(new LoadPersons());\n    }\n\n    handleAction(event: { action: string, item: IWeapon }) {\n        switch (event.action) {\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            case Actions.CHANGE:\n                return this.openWeaponModal(event.item, true);\n            case Actions.UNTIE:\n                return this.unlinkWeapon(event.item.id);\n        }\n    }\n\n    add() {\n        this.openWeaponModal(WeaponMocks.emptyWeapon, false);\n    }\n\n    openWeaponModal(weapon: IWeapon, edit: boolean) {\n        const objectType = this.pageTypes.WEAPON;\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...weapon}, edit, objectType},\n            (res) => {\n                if (res) {\n                    if (edit) {\n                        const body = {...weapon, ...res};\n                        this.createWeaponListItem(body);\n                    } else {\n                        this.createWeaponListItem(res);\n                    }\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: IWeapon) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.weaponName.name, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.deleteWeaponListItem(item.id);\n                }\n            });\n    }\n\n    createWeaponListItem(weapon: IWeapon) {\n        this.store.dispatch(new CreateWeaponListItem(weapon));\n    }\n\n    deleteWeaponListItem(weaponId: string) {\n        this.store.dispatch(new DeleteWeaponListItem(weaponId));\n    }\n\n    unlinkWeapon(weaponId: string) {\n        this.store.dispatch(new UnlinkWeapon(weaponId));\n    }\n\n    onSelectItem(value: any) {\n        this.selectedDivision = value;\n        this.store.dispatch(new LoadWeaponList(this.selectedDivision.id));\n        this.store.dispatch(new LoadPersonsByDivision(this.selectedDivision.id));\n    }\n\n    initDialog(actions: string[], type: 'division' | 'persons') {\n        const options = this.dialogService.getDialogOptions('подразделение', actions);\n        this.dialogSubs.sink = this.dialogService.getDialogAction(options)\n            .subscribe((result) => {\n                if (result && result !== 'Отменить') {\n                    this.dialogType(type, result);\n                }\n            });\n    }\n\n    dialogType(type: 'division' | 'persons', result: string) {\n        console.log(result);\n        switch (type) {\n            case 'division':\n                const index = this.findDivisionIndex(this.divisionNames, result);\n                this.selectedDivision = this.divisions[index];\n                return this.getPersonsByDivision(this.selectedDivision);\n            case 'persons':\n                this.selectedPerson = result;\n                this.store.dispatch(new LoadPersonsWeaponList({\n                    personName: result,\n                    divisionId: this.selectedDivision.id\n                }));\n                return;\n\n        }\n    }\n\n    findDivisionIndex(divisionNames: string[], selectedDivision: string) {\n        return divisionNames.findIndex((division: string) => division === selectedDivision);\n    }\n\n    getPersonsByDivision(division: IDivision) {\n        this.store.dispatch(new LoadPersonsByDivision(division.id));\n        this.personsByDivision$ = this.store.pipe(\n            select(selectPersonsByDivision),\n            tap((personsByDivision: IPerson[]) => {\n                if (personsByDivision) {\n                    this.personsNames = this.getPersonsNames(personsByDivision);\n                }\n            })\n        );\n    }\n\n    getPersonsNames(persons: IPerson[]): string[] {\n        return persons.map((person: IPerson) => person.userName);\n    }\n\n    goToWeaponTypes() {\n        this.router.navigate(['weapon-list/weapon-types']);\n    }\n\n    goBack() {\n        this.location.back();\n    }\n\n}\n","<div class=\"container\" [@EnterLeave]>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <h1>{{'weaponType' | translate | titlecase}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <button type=\"button\" class=\"btn btn-primary w-100\"\n                    (click)=\"add()\">{{'add' | translate}} {{('weaponType' | translate).toLowerCase() }}</button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\" *ngIf=\"weaponTypes$ | async as weaponTypes\">\n        <div class=\"col-12\">\n            <app-base-table [objects]=\"weaponTypes\"\n                            [actions]=\"actions\"\n                            (action)=\"handleAction($event)\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\nimport {Actions} from '@models/constants/actions';\nimport {IWeaponTypes} from '@models/interfaces/weapons';\nimport {selectWeaponErrors, selectWeaponTypesData} from '@weapon/selectors/selectors';\nimport {CreateWeaponType, DeleteWeaponType, LoadWeaponTypesForList, UpdateWeaponType} from '@weapon/actions/actions';\nimport {BaseModalComponent} from '@modal/components/base-modal/base-modal.component';\nimport {DialogModalComponent} from '@modal/components/dialog-modal/dialog-modal.component';\nimport {ModalService} from '@modal/services/modal.service';\nimport {PageTypes} from '@models/constants/page-types';\nimport {WeaponMocks} from '@models/mocks/weapon.mocks';\nimport {MessageService} from '@services/message.service';\nimport {UnsubscribeOndestroyAdapter} from '../../../../adstracts/unsubscribe-ondestroy-adapter';\nimport {Animations} from '@models/constants/animations';\n\n@Component({\n    selector: 'app-weapon-types',\n    templateUrl: './weapon-types.component.html',\n    styleUrls: ['./weapon-types.component.scss'],\n    animations: [Animations.enterLeaveOpacity]\n})\nexport class WeaponTypesComponent extends UnsubscribeOndestroyAdapter implements OnInit {\n    public actions: string[];\n    public pageTypes = PageTypes;\n\n    public weaponTypes$: Observable<IWeaponTypes[]>;\n\n    constructor(private store: Store<any>,\n                private modalService: ModalService,\n                private messageService: MessageService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.actions = [Actions.CHANGE, Actions.REMOVE];\n        this.getWeaponTypes();\n    }\n\n    getWeaponTypes() {\n        this.weaponTypes$ = this.store.select(selectWeaponTypesData)\n            .pipe(tap((weaponTypes: IWeaponTypes[]) => !weaponTypes && this.fetchWeaponTypes()));\n    }\n\n    fetchWeaponTypes() {\n        this.store.dispatch(new LoadWeaponTypesForList());\n    }\n\n    handleAction(event: { action: string, item: IWeaponTypes }) {\n        switch (event.action) {\n            case Actions.REMOVE:\n                return this.openDialogModal('dialogQuestion', event.item);\n            case Actions.CHANGE:\n                this.openWeaponTypeModal(event.item, true);\n        }\n    }\n\n    add() {\n        this.openWeaponTypeModal(WeaponMocks.emptyWeaponType, false);\n    }\n\n    openWeaponTypeModal(weaponType: IWeaponTypes, edit: boolean) {\n        const objectType = this.pageTypes.WEAPON_TYPES;\n        this.modalService.openModal(BaseModalComponent,\n            {centered: true},\n            {object: {...weaponType}, edit, objectType},\n            (res) => {\n                if (res) {\n                    edit ? this.updateWeaponType(weaponType, res) : this.createWeaponType(res);\n                }\n            });\n    }\n\n    openDialogModal(message: string, item: IWeaponTypes) {\n        this.modalService.openModal(DialogModalComponent,\n            {centered: true},\n            {itemName: item.name, message},\n            (res) => {\n                if (res && res === 'Yes') {\n                    this.deleteWeaponType(item.id);\n                }\n            });\n    }\n\n    createWeaponType(weaponType: IWeaponTypes) {\n        this.store.dispatch(new CreateWeaponType(weaponType));\n    }\n\n    updateWeaponType(weaponType: IWeaponTypes, updatedWeaponType: IWeaponTypes) {\n        updatedWeaponType.id = weaponType.id;\n        this.store.dispatch(new UpdateWeaponType(updatedWeaponType));\n    }\n\n    deleteWeaponType(weaponTypeId: string) {\n        this.store.dispatch(new DeleteWeaponType(weaponTypeId));\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {Store} from '@ngrx/store';\n\nimport * as fromWeapons from '@weapon/actions/actions';\nimport {MessageService} from '@services/message.service';\nimport {WeaponsService} from '@weapon/services/weapons.service';\nimport {IWeapon, IWeaponTypes} from '@models/interfaces/weapons';\nimport {of} from 'rxjs';\nimport {WeaponsActions} from '@weapon/actions/actions';\nimport {selectWeaponList, selectWeaponTypesData} from '@weapon/selectors/selectors';\nimport {ToastrMessageType, ToastrUsersType} from '@models/constants/toastr';\n\n@Injectable()\nexport class WeaponsEffects {\n\n    constructor(\n        private actions$: Actions,\n        private messageService: MessageService,\n        private store: Store<any>,\n        private weaponService: WeaponsService\n    ) {\n    }\n\n    @Effect()\n    loadWeaponTypesForList$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.LoadWeaponTypesForList),\n            mergeMap(() => this.weaponService.getWeaponTypes()\n                .pipe(\n                    map((weaponTypes: IWeaponTypes[]) => new fromWeapons.LoadedWeaponTypesForList(weaponTypes)),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromWeapons.WeaponErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshWeaponTypes$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.RefreshWeaponTypes),\n            map((action: WeaponsActions) => new fromWeapons.LoadedWeaponTypesForList(action.payload)),\n            catchError((err) => {\n                this.messageService.showToastrError(err);\n                this.messageService.showPushNotification(err);\n                return of(new fromWeapons.WeaponErrors(err));\n            })\n        );\n\n    @Effect()\n    createWeaponType$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.CreateWeaponType),\n            withLatestFrom(this.store.select(selectWeaponTypesData)),\n            switchMap(([action, weaponTypes]: any[]) => this.weaponService.createWeaponType(action.payload)\n                .pipe(\n                    map((weaponType: IWeaponTypes) => {\n                        const message = {user: ToastrUsersType.WEAPON_TYPE, type: ToastrMessageType.CREATE};\n                        if (weaponType) {\n                            this.messageService.showToastrSuccess(message);\n                            weaponTypes.push(weaponType);\n                        }\n\n                        return new fromWeapons.RefreshWeaponTypes(weaponTypes);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromWeapons.WeaponErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    updateWeaponType$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.UpdateWeaponType),\n            withLatestFrom(this.store.select(selectWeaponTypesData)),\n            switchMap(([action, weaponTypes]: any[]) => this.weaponService.updateWeaponType(action.payload)\n                .pipe(\n                    map((weaponType: IWeaponTypes) => {\n                        const message = {user: ToastrUsersType.WEAPON_TYPE, type: ToastrMessageType.UPDATE};\n                        if (weaponType) {\n                            this.messageService.showToastrSuccess(message);\n                            weaponTypes = weaponTypes.map((item: IWeaponTypes) =>\n                                item.id === weaponType.id ? weaponType : item);\n                        }\n\n                        return new fromWeapons.RefreshWeaponTypes(weaponTypes);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromWeapons.WeaponErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    deleteWeaponType$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.DeleteWeaponType),\n            withLatestFrom(this.store.select(selectWeaponTypesData)),\n            switchMap(([action, weaponTypes]: any[]) => this.weaponService.deleteWeaponType(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.WEAPON_TYPE, type: ToastrMessageType.CREATE};\n                        this.messageService.showToastrSuccess(message);\n                        weaponTypes = weaponTypes.filter((item: IWeaponTypes) => item.id !== action.payload);\n\n                        return new fromWeapons.RefreshWeaponTypes(weaponTypes);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showToastrError(err);\n                        this.messageService.showPushNotification(err);\n                        return of(new fromWeapons.WeaponErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadWeaponList$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.LoadWeaponList),\n            mergeMap((action: WeaponsActions) => this.weaponService.getWeaponListByDivision(action.payload)\n                .pipe(\n                    map((weapons: IWeapon[]) => new fromWeapons.LoadedWeaponList(weapons)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromWeapons.WeaponErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    refreshWeaponList$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.RefreshWeaponList),\n            map((action: WeaponsActions) => new fromWeapons.LoadedWeaponList(action.payload)),\n            catchError((err) => {\n                this.messageService.showPushNotification(err);\n                this.messageService.showToastrError(err);\n                return of(new fromWeapons.WeaponErrors(err));\n            })\n        );\n\n    @Effect()\n    createWeaponListItem$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.CreateWeaponListItem),\n            withLatestFrom(this.store.select(selectWeaponList)),\n            switchMap(([action, weapons]: any[]) => this.weaponService.createWeaponListItem(action.payload)\n                .pipe(\n                    map((weapon: IWeapon) => {\n                        if (weapon) {\n                            const isUpdated = weapons.some((item: IWeapon) => item.id === weapon.id);\n                            if (isUpdated) {\n                                const message = {user: ToastrUsersType.WEAPON, type: ToastrMessageType.UPDATE};\n                                weapons = weapons.map((item: IWeapon) => item.id === weapon.id ? weapon : item);\n                                this.messageService.showToastrSuccess(message);\n                            } else {\n                                const message = {user: ToastrUsersType.WEAPON, type: ToastrMessageType.CREATE};\n                                weapons.push(weapon);\n                                this.messageService.showToastrSuccess(message);\n                            }\n                        }\n\n                        return new fromWeapons.RefreshWeaponList(weapons);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromWeapons.WeaponErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    deleteWeaponListItem$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.DeleteWeaponListItem),\n            withLatestFrom(this.store.select(selectWeaponList)),\n            switchMap(([action, weapons]: any[]) => this.weaponService.deleteWeaponListItem(action.payload)\n                .pipe(\n                    map(() => {\n                        const message = {user: ToastrUsersType.WEAPON, type: ToastrMessageType.CREATE};\n                        this.messageService.showToastrSuccess(message);\n                        weapons = weapons.filter((item: IWeapon) => item.id !== action.payload);\n\n                        return new fromWeapons.RefreshWeaponList(weapons);\n                    }),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromWeapons.WeaponErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    unlinkWeapon$ = this.actions$\n        .pipe(\n            ofType(fromWeapons.ActionTypes.UnlinkWeapon),\n            withLatestFrom(this.store.select(selectWeaponList)),\n            switchMap(([action, weapons]: any) => this.weaponService.unLinkWeaponListItem(action.payload)\n                .pipe(\n                    map(() => new fromWeapons.RefreshWeaponList(weapons)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromWeapons.WeaponErrors(err));\n                    })\n                )\n            )\n        );\n\n    @Effect()\n    loadPersonsWeaponList$ = this.actions$.pipe(\n        ofType(fromWeapons.ActionTypes.LoadPersonsWeaponList),\n        mergeMap((action: any) => {\n            const {personName, divisionId} = action.payload;\n            return this.weaponService.getPersonsWeaponList(personName, divisionId)\n                .pipe(\n                    map((weapons: IWeapon[]) => new fromWeapons.LoadedWeaponList(weapons)),\n                    catchError((err) => {\n                        this.messageService.showPushNotification(err);\n                        this.messageService.showToastrError(err);\n                        return of(new fromWeapons.WeaponErrors(err));\n                    })\n                );\n        })\n    );\n}\n","import {IWeapon, IWeaponTypes} from '@models/interfaces/weapons';\nimport {ActionTypes, WeaponsActions} from '../actions/actions';\n\nexport interface State {\n    weaponTypes: IWeaponTypes[];\n    weapons: IWeapon[];\n    personsWeaponList: IWeapon[];\n    errors?: any;\n}\n\nexport const initialState: State = {\n    weaponTypes: undefined,\n    weapons: undefined,\n    personsWeaponList: undefined\n};\n\nexport function reducer(state: State = initialState, action: WeaponsActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedWeaponTypesForList:\n            return {...state, weaponTypes: action.payload};\n        case ActionTypes.LoadedWeaponList:\n            return {...state, weapons: action.payload};\n        case ActionTypes.WeaponErrors:\n            return {...state, errors: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromWeapons from '@weapon/reducers/reducer';\n\nexport const selectWeapons = createFeatureSelector<fromWeapons.State>('weapons');\n\nexport const selectWeaponTypesData = createSelector(\n    selectWeapons,\n    (state: fromWeapons.State) => state.weaponTypes\n);\n\nexport const selectWeaponList = createSelector(\n    selectWeapons,\n    (state: fromWeapons.State) => state.weapons\n);\n\nexport const selectWeaponErrors = createSelector(\n    selectWeapons,\n    (state: fromWeapons.State) => state.errors\n);\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@environments/environment';\nimport {Observable} from 'rxjs';\nimport {IWeapon, IWeaponTypes} from '@models/interfaces/weapons';\nimport {map} from 'rxjs/operators';\nimport {weaponMapperToServer} from '@mappers/weapons.mapper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WeaponsService {\n    private weaponTypeBaseUrl: string = environment.BASE_URL + '/api/weapon/type/' + environment.version;\n    private weaponBaseUrl: string = environment.BASE_URL + '/api/weapon/' + environment.version;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getWeaponTypes(): Observable<IWeaponTypes[]> {\n        return this.http.get(this.weaponTypeBaseUrl + '/get/all')\n            .pipe(map((response: IWeaponTypes[]) => response));\n    }\n\n    createWeaponType(weaponType: IWeaponTypes): Observable<IWeaponTypes> {\n        return this.http.post(this.weaponTypeBaseUrl + '/create/weapontype', weaponType)\n            .pipe(map((response: IWeaponTypes) => response));\n    }\n\n    updateWeaponType(weaponType: IWeaponTypes): Observable<IWeaponTypes> {\n        return this.http.put(this.weaponTypeBaseUrl + `/update/weapontype/${weaponType.id}`, weaponType)\n            .pipe(map((response: IWeaponTypes) => response));\n    }\n\n    deleteWeaponType(weaponTypeId: string): Observable<any> {\n        return this.http.delete(this.weaponTypeBaseUrl + `/delete/weapontype/${weaponTypeId}`)\n            .pipe(map((response) => response));\n    }\n\n    getWeaponListByDivision(divisionId: string): Observable<IWeapon[]> {\n        return this.http.get(this.weaponBaseUrl + `/all/by/division/${divisionId}`)\n            .pipe(map((response: IWeapon[]) => response));\n    }\n\n    createWeaponListItem(weapon: IWeapon): Observable<IWeapon> {\n        const mappedBody = weaponMapperToServer(weapon);\n        return this.http.post(this.weaponBaseUrl + '/create/weapon', mappedBody)\n            .pipe(map((response: IWeapon) => response));\n    }\n\n    deleteWeaponListItem(weaponId: string): Observable<any> {\n        return this.http.delete(this.weaponBaseUrl + `/delete/weapon/${weaponId}`)\n            .pipe(map((response) => response));\n    }\n\n    unLinkWeaponListItem(weaponId: string): Observable<IWeapon> {\n        return this.http.post(this.weaponBaseUrl + `/${weaponId}/remove`, null)\n            .pipe(map((response: IWeapon) => response));\n    }\n\n    linkWeaponListItem(weaponId: string, personId: string): Observable<IWeapon> {\n        return this.http.post(this.weaponBaseUrl + `/${weaponId}/${personId}`, null)\n            .pipe(map((response: IWeapon) => response));\n    }\n\n    changeFireCount(weaponId: string, fireCount: string): Observable<IWeapon> {\n        return this.http.post(this.weaponBaseUrl + `/${weaponId}/add/firedcount/${fireCount}`, null)\n            .pipe(map((response: IWeapon) => response));\n    }\n\n    getPersonsWeaponList(personName: string, divisionId: string): Observable<IWeapon[]> {\n        return this.http.get<IWeapon[]>(`${this.weaponBaseUrl}/all/by/person/${personName}/division/${divisionId}`)\n            .pipe(map((response: IWeapon[]) => response));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {TableModule} from '@table/table.module';\nimport {NgSelectModule} from '@ng-select/ng-select';\n\nimport {WeaponTypesComponent} from './components/weapon-types/weapon-types.component';\nimport {WeaponListComponent} from './components/weapon-list/weapon-list.component';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: WeaponListComponent\n    }\n];\n\n@NgModule({\n    declarations: [WeaponTypesComponent, WeaponListComponent],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        TableModule,\n        NgSelectModule,\n        RouterModule.forChild(routes)\n    ]\n})\nexport class WeaponModule {\n}\n","import {Action} from '@ngrx/store';\nimport {IWorkSpace} from '@models/interfaces/workspace';\n\nexport enum ActionTypes {\n    LoadWorkspaces = '[Workspace Page] Load Workspaces',\n    LoadedWorkspaces = '[Workspace Page] Loaded Workspaces',\n    LoadCurrentWorkspace = '[Workspace Page] Load Current Workspace',\n    LoadedCurrentWorkspace = '[Workspace Page] Loaded Current Workspace',\n    SendCurrentWorkspace = '[Workspace Page] Send Current Workspace'\n}\n\nexport class LoadWorkspaces implements Action {\n    readonly type = ActionTypes.LoadWorkspaces;\n}\n\nexport class LoadedWorkspaces implements Action {\n    readonly type = ActionTypes.LoadedWorkspaces;\n\n    constructor(public payload: IWorkSpace[]) {\n    }\n}\n\nexport class LoadCurrentWorkspace implements Action {\n    readonly type = ActionTypes.LoadCurrentWorkspace;\n}\n\nexport class LoadedCurrentWorkspace implements Action {\n    readonly type = ActionTypes.LoadedCurrentWorkspace;\n\n    constructor(public payload: IWorkSpace) {\n    }\n}\n\nexport class SendCurrentWorkspace implements Action {\n    readonly type = ActionTypes.SendCurrentWorkspace;\n\n    constructor(public payload: IWorkSpace) {\n    }\n}\n\nexport type WorkspaceActions = LoadWorkspaces &\n    LoadedWorkspaces &\n    LoadCurrentWorkspace &\n    LoadedCurrentWorkspace &\n    SendCurrentWorkspace;\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col-4\">\n            <h1>{{'workspace' | translate | titlecase}}</h1>\n        </div>\n    </div>\n    <div class=\"row mt-3\" *ngIf=\"workspaces$ | async as workspaces\">\n        <div class=\"col\">\n            <app-base-table class=\"main__table\"\n                            [objects]=\"workspaces\"\n            ></app-base-table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\n\nimport {IWorkSpace} from '@models/interfaces/workspace';\nimport {selectWorkspaceData} from '@workspace/selectors/selectors';\nimport {LoadWorkspaces} from '@workspace/actions/actions';\n\n@Component({\n    selector: 'app-workspace',\n    templateUrl: './workspace.component.html',\n    styleUrls: ['./workspace.component.scss']\n})\nexport class WorkspaceComponent implements OnInit {\n    public workspaces$: Observable<IWorkSpace[]>;\n\n    constructor(private store: Store<any>) {\n    }\n\n    ngOnInit() {\n        this.getWorkspaces();\n    }\n\n    getWorkspaces() {\n        this.fetchWorkspace();\n        this.workspaces$ = this.store.pipe(select(selectWorkspaceData));\n    }\n\n    fetchWorkspace() {\n        this.store.dispatch(new LoadWorkspaces());\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, mergeMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\nimport * as fromWorkspace from '@workspace/actions/actions';\nimport {WorkspaceService} from '@workspace/services/workspace.service';\nimport {IWorkSpace} from '@models/interfaces/workspace';\nimport {MessageService} from '@services/message.service';\n\n@Injectable()\nexport class WorkspaceEffects {\n    constructor(private actions$: Actions,\n                private workspaceService: WorkspaceService,\n                private messageService: MessageService) {\n    }\n\n    @Effect()\n    loadWorkspaces$ = this.actions$.pipe(\n        ofType(fromWorkspace.ActionTypes.LoadWorkspaces),\n        mergeMap(() => this.workspaceService.getWorkSpaceForTest()\n            .pipe(\n                map((workspaces: IWorkSpace[]) => new fromWorkspace.LoadedWorkspaces(workspaces)),\n                catchError((err) => {\n                    this.messageService.showToastrError(err);\n                    this.messageService.showPushNotification(err);\n                    return of();\n                })\n            )\n        )\n    );\n\n    @Effect()\n    loadCurrentWorkspace$ = this.actions$.pipe(\n        ofType(fromWorkspace.ActionTypes.LoadCurrentWorkspace),\n        mergeMap(() => this.workspaceService.getCurrentWorkspace()\n            .pipe(map((workspace: IWorkSpace) => {\n                    workspace.useInTest = true;\n                    return new fromWorkspace.SendCurrentWorkspace(workspace);\n                }),\n                catchError((err) => {\n                    this.messageService.showToastrError(err);\n                    this.messageService.showPushNotification(err);\n                    return of();\n                })\n            )\n        )\n    );\n\n    @Effect()\n    sendCurrentWorkspace$ = this.actions$.pipe(\n        ofType(fromWorkspace.ActionTypes.SendCurrentWorkspace),\n        mergeMap((action: any) => this.workspaceService.sendCurrentWorkspace(action.payload)\n            .pipe(\n                map((workspace: IWorkSpace) => new fromWorkspace.LoadedCurrentWorkspace(workspace)),\n                catchError((err) => {\n                    this.messageService.showToastrError(err);\n                    this.messageService.showPushNotification(err);\n                    return of();\n                })\n            )\n        )\n    );\n}\n","import {IWorkSpace} from '@models/interfaces/workspace';\nimport {ActionTypes, WorkspaceActions} from '../actions/actions';\n\nexport interface State {\n    workspaces: IWorkSpace[];\n    currentWorkspace: IWorkSpace;\n}\n\nexport const initialState: State = {\n    workspaces: undefined,\n    currentWorkspace: undefined,\n};\n\nexport function reducer(state: State = initialState, action: WorkspaceActions) {\n    switch (action.type) {\n        case ActionTypes.LoadedWorkspaces:\n            return {...state, workspaces: action.payload};\n        case ActionTypes.LoadedCurrentWorkspace:\n            return {...state, currentWorkspace: action.payload};\n        default:\n            return state;\n    }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromWorkspace from '@workspace/reducers/reducer';\n\nexport const selectWorkspaces = createFeatureSelector<fromWorkspace.State>('workspaces');\n\nexport const selectWorkspaceData = createSelector(\n    selectWorkspaces,\n    (state: fromWorkspace.State) => state.workspaces\n);\n\nexport const selectCurrentWorkspace = createSelector(\n    selectWorkspaces,\n    (state: fromWorkspace.State) => state.currentWorkspace\n);\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {environment} from '@environments/environment';\nimport {Observable} from 'rxjs';\nimport {IWorkSpace} from '@models/interfaces/workspace';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WorkspaceService {\n    public baseUrl = `${environment.BASE_URL}/api/workspace/${environment.version}`;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getWorkSpaceForTest(): Observable<IWorkSpace[]> {\n        return this.http.get<IWorkSpace[]>(`${this.baseUrl}/allfortest`)\n            .pipe(map((response: IWorkSpace[]) => response));\n    }\n\n    getCurrentWorkspace(): Observable<IWorkSpace> {\n        return this.http.get<IWorkSpace>(this.baseUrl)\n            .pipe(map((response: IWorkSpace) => response));\n    }\n\n    sendCurrentWorkspace(workspace: IWorkSpace): Observable<IWorkSpace> {\n        return this.http.post<IWorkSpace>(`${this.baseUrl}/useintest`, workspace)\n            .pipe(map((response: IWorkSpace) => response));\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {WorkspaceComponent} from './components/workspace/workspace.component';\nimport {TableModule} from '@table/table.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: WorkspaceComponent\n    }\n];\n\n@NgModule({\n    declarations: [WorkspaceComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        TranslateModule,\n        TableModule\n    ]\n})\nexport class WorkspaceModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\nconst NO_CONNECTION = 'No Connection!';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConnectionService {\n\n    public readonly NO_CONNECTION = NO_CONNECTION;\n    public status: BehaviorSubject<string>;\n    private readonly connectionType: string;\n\n    constructor() {\n        this.connectionType = 'Unknown';\n        this.status = new BehaviorSubject(this.connectionType);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {ICompetitor} from '@models/interfaces/human';\nimport {IScore} from '@models/interfaces/score';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService {\n\n    public status = new Subject<string>();\n    public readonly NO_CONNECTION = 'No Connection!';\n\n    constructor() {\n    }\n\n    addCompetitor(tournamentId: string, updatedCmp: ICompetitor) {\n    }\n\n    removeCompetitor(tournamentId: string, competitorId: string) {\n    }\n\n    addScoreList(tournamentId: string, stageId: string, scoreList: IScore[]) {\n    }\n\n    removeScoreList(tournamentId: string, stageId: string) {\n    }\n\n    generateId() {\n        return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    }\n\n    hasScoreList(tournamentId: string, stageId: string) {\n        return false;\n    }\n\n    clearStorage() {\n    }\n\n    initStorage() {\n    }\n\n    saveToServer() {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MarkService {\n    public mark$: BehaviorSubject<string> = new BehaviorSubject('');\n    constructor() {\n    }\n\n    readMark() {\n        return;\n    }\n    writeMark(mark: string) {\n        return;\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ToastrMessageType, ToastrTitle} from '@models/constants/toastr';\nimport {ToastrService} from 'ngx-toastr';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MessageService {\n    public message: string;\n\n    constructor(private toastrService: ToastrService) {\n    }\n\n    getSuccessMessage(userType: string, messageType: string): string {\n        switch (messageType) {\n            case ToastrMessageType.CREATE:\n                this.message = `${userType} was created successfully`;\n                return this.message;\n            case ToastrMessageType.UPDATE:\n                this.message = `${userType} was updated successfully`;\n                return this.message;\n            case ToastrMessageType.REMOVE:\n                this.message = `${userType} was removed successfully`;\n                return this.message;\n            default:\n                return;\n        }\n    }\n\n    showToastrSuccess(message: { user: string, type: string }) {\n        this.toastrService.success(\n            this.getToastrMessage(message.user, message.type),\n            ToastrTitle.SUCCESS\n        );\n    }\n\n    showToastrError(err: HttpErrorResponse) {\n        const {error} = err.error;\n        for (const key in error) {\n            if (error.hasOwnProperty(key)) {\n                return this.toastrService.error(this.getToastrErrorMessage(error[key]), ToastrTitle.ERROR);\n            }\n        }\n    }\n\n    getToastrMessage(userType: string, messageType: string): string {\n        return this.getSuccessMessage(userType, messageType);\n    }\n\n    getToastrErrorMessage(text: string): string {\n        return text;\n    }\n\n    showPushNotification(text: string) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SubjectService {\n    private _subjects: { [ID: string]: Subject<any> } = {};\n\n    public get(ID: string): Subject<any> {\n        if (!this._subjects[ID]) {\n            this._subjects[ID] = new Subject();\n        }\n        return this._subjects[ID];\n    }\n\n}\n","import {Injectable} from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenService {\n    constructor() {\n    }\n\n    public getToken() {\n        return localStorage.getItem('auth_token');\n    }\n\n    public setToken(token: string) {\n        localStorage.setItem('auth_token', token);\n    }\n\n    public removeToken() {\n        localStorage.removeItem('auth_token');\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    version: 'v1.0',\n    BASE_URL: 'http://40.69.138.82:9901',\n    // BASE_URL: 'http://ipsc.com',\n    mqttHost: '40.69.138.82',\n    mqttPort: 8080,\n    mqttUserName: 'guest',\n    mqttPassword: 'guest',\n    hmr: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {ApplicationRef, NgModuleRef} from '@angular/core';\n\nimport {createNewHosts} from '@angularclass/hmr';\n\nexport const hmrBootstrap = (\n    module: any,\n    bootstrap: () => Promise<NgModuleRef<any>>\n) => {\n    let ngModule: NgModuleRef<any>;\n    module.hot.accept();\n    bootstrap().then(mod => (ngModule = mod));\n    module.hot.dispose(() => {\n        const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n        const elements = appRef.components.map(c => c.location.nativeElement);\n        const makeVisible = createNewHosts(elements);\n        ngModule.destroy();\n        makeVisible();\n    });\n};\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {AppModule} from './app/app.module';\nimport {environment} from '@environments/environment';\nimport {hmrBootstrap} from './hmr';\n\n\nif (environment.production) {\n    enableProdMode();\n}\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);\n\nif (environment.hmr) {\n    if (module['hot']) {\n        hmrBootstrap(module, bootstrap);\n    } else {\n        console.error('HMR is not enabled for webpack-dev-server!');\n        console.log('Are you using the --hmr flag for ng serve?');\n    }\n} else {\n    bootstrap().catch(err => console.log(err));\n}\n"],"sourceRoot":""}