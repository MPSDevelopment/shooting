<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>parent</artifactId>
		<groupId>tech.shooting</groupId>
		<version>0.1-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>shooting-ipsc</artifactId>
	<packaging>jar</packaging>
	<name>Shooting ipsc project</name>
	<url>http://maven.apache.org</url>

	<!-- <modules> -->
	<!-- <module>../shooting-commons</module> -->
	<!-- </modules> -->

	<dependencies>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>shooting-commons</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-actuator</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-actuator</artifactId> -->
		<!-- <version>${spring.boot.version}</version> -->
		<!-- <exclusions> -->
		<!-- <exclusion> -->
		<!-- <groupId>io.micrometer</groupId> -->
		<!-- <artifactId>micrometer-core</artifactId> -->
		<!-- </exclusion> -->
		<!-- </exclusions> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-thymeleaf</artifactId> -->
		<!-- <version>${spring.boot.version}</version> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<version>${spring.boot.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-mqtt</artifactId>
			<version>${spring.integration.version}</version>
		</dependency>

		<dependency>
			<groupId>io.moquette</groupId>
			<artifactId>moquette-broker</artifactId>
			<version>${moquette.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>${reflections.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>${tika.version}</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>OctaneSDKJava</groupId> -->
		<!-- <artifactId>OctaneSDKJava-full</artifactId> -->
		<!-- <version>${octane.version}</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>OctaneSDKJava</groupId> -->
		<!-- <artifactId>OctaneSDKJava</artifactId> -->
		<!-- <version>${octane.version}</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>org.llrp</groupId> -->
		<!-- <artifactId>ltkjava</artifactId> -->
		<!-- <version>1.0.0.7</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>org.apache.mina</groupId> -->
		<!-- <artifactId>mina-core</artifactId> -->
		<!-- <version>2.0.9</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>com.jcraft</groupId> -->
		<!-- <artifactId>jzlib</artifactId> -->
		<!-- <version>1.0.7</version> -->
		<!-- <optional>true</optional> -->
		<!-- </dependency> -->



		<!-- Dependency for TEST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring.boot.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.skyscreamer</groupId>
					<artifactId>jsonassert</artifactId>
				</exclusion>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<version>${flapdoodle.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons.fileupload.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>ipsc</finalName>
		<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory></directory>
				<targetPath>${project.build.directory}</targetPath>
				<includes>
					<include>*.sh</include>
					<include>*.bat</include>
					<include>*.service</include>
					<include>Dockerfile*</include>
					<include>docker-compose.yml</include>
					<include>ipsc</include>
					<include>ipsc*.zip</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${resources.plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.plugin.version}</version>
				<configuration>
					<properties>
						<includeTags>auto</includeTags>
						<groups>auto</groups>
					</properties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${dependency.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-lib</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/${lib.property}/</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<useBaseVersion>false</useBaseVersion>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
<!-- 					<execution> -->
<!-- 						<id>copy</id> -->
<!-- 						<phase>prepare-package</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>unpack</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<artifactItems> -->
<!-- 								<artifactItem> -->
<!-- 									<groupId>oracle</groupId> -->
<!-- 									<artifactId>jre-win32</artifactId> -->
<!-- 									<version>${jre.version}</version> -->
<!-- 									<type>zip</type> -->
<!-- 									<overWrite>false</overWrite> -->
<!-- 									<outputDirectory>${project.build.directory}/jre</outputDirectory> -->
<!-- 								</artifactItem> -->
<!-- 							</artifactItems> -->
<!-- 							<overWriteReleases>false</overWriteReleases> -->
<!-- 							<overWriteSnapshots>true</overWriteSnapshots> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${jar.plugin.version}</version>
				<configuration>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathLayoutType>custom</classpathLayoutType>
							<customClasspathLayout>
								${lib.property}/${artifact.artifactId}${artifact.dashClassifier?}.${artifact.extension}
							</customClasspathLayout>
							<mainClass>tech.shooting.ipsc.IpscApplication</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${deploy.plugin.version}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>build</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${assembly.plugin.version}</version>
						<configuration>
							<descriptors>
								<descriptor>zip.xml</descriptor>
							</descriptors>
							<archiverConfig>
								<compress>true</compress>
							</archiverConfig>
							<recompressZippedFiles>true</recompressZippedFiles>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>install</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jar2exe</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven.antrun.plugin.version}</version>
						<executions>
							<execution>
								<phase>package</phase>
								<configuration>
									<target>
										<copy file="build/app.j2e" tofile="${project.build.directory}/app.bat" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>app</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<executable>${project.build.directory}/app.bat</executable>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>excelsior</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.excelsiorjet</groupId>
						<artifactId>excelsior-jet-maven-plugin</artifactId>
						<version>${excelsiorjet.plugin.version}</version>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<mainClass>tech.shooting.ipsc.IpscApplication</mainClass>
							<jetOutputDir>${jet.output.directory}</jetOutputDir>
							<!-- <packaging>excelsior-installer</packaging> -->
							<icon>${project.basedir}/ipsc.ico</icon>
							<!-- <installerSplash>${project.basedir}/build/splash.bmp</installerSplash> -->
							<hideConsole>true</hideConsole>
							<!-- <globalOptimizer>true</globalOptimizer> -->

							<!-- <packageFilesDir>${jet.output.directory}/temp</packageFilesDir> -->

							<jvmArgs>
								<jvmArg>-Djava.net.preferIPv4Stack=true</jvmArg>
								<jvmArg>-Dspring.profiles.active=excelsior</jvmArg>
								<jvmArg>-Xmx2g</jvmArg>
							</jvmArgs>

							<jetHome>${jet32.home}</jetHome>

							<inlineExpansion>low</inlineExpansion>
							<protectData>true</protectData>

							<outputName>IpscApplication</outputName>
							<product></product>
							<vendor>${jet.vendor}</vendor>
							<version>${jet.version}</version>

							<dependencies>
								<dependency>
									<groupId>io.netty</groupId>
									<protect>all</protect>
									<optimize>all</optimize>
									<pack>all</pack>
								</dependency>
							</dependencies>

						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>${dockerfile.plugin.version}</version>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>shooting.azurecr.io</repository>
							<contextDirectory>target</contextDirectory>
							<tag>${docker.image.version}-latest</tag>
							<dockerfile>target\Dockerfile</dockerfile>
							<repository>shooting.azurecr.io/ipsc</repository>
							<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
							<verbose>true</verbose>
							<forceCreation>true</forceCreation>
							<buildArgs>
								<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
							</buildArgs>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>javax.activation</groupId>
								<artifactId>javax.activation-api</artifactId>
								<version>1.2.0</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>