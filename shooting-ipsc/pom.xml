<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>parent</artifactId>
		<groupId>tech.shooting</groupId>
		<version>0.1-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>shooting-ipsc</artifactId>
	<packaging>jar</packaging>
	<name>Shooting ipsc project</name>
	<url>http://maven.apache.org</url>

	<dependencies>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>shooting-commons</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring.boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>io.micrometer</groupId>
					<artifactId>micrometer-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>

		<!--RabbitMQ -->
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit</artifactId>
			<version>${spring.amqp.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-mqtt</artifactId>
			<version>${spring.integration.version}</version>
		</dependency>

		<!--jwt with rsa -->
		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>${nimbus.jose.jwt.version}</version>
		</dependency>
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>${jwt.version}</version>
		</dependency>


		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>${reflections.version}</version>
		</dependency>

		<!-- Dependency for TEST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring.boot.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.skyscreamer</groupId>
					<artifactId>jsonassert</artifactId>
				</exclusion>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<version>${flapdoodle.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons.fileupload.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>io.moquette</groupId>
			<artifactId>moquette-broker</artifactId>
			<version>0.12.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>

	<build>
		<finalName>ipsc</finalName>
		<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>config</directory>
			</resource>
			<resource>
				<directory>keys</directory>
				<targetPath>${project.build.directory}/keys</targetPath>
			</resource>
			<resource>
				<directory></directory>
				<targetPath>${project.build.directory}</targetPath>
				<includes>
					<include>*.sh</include>
					<include>*.bat</include>
					<include>*.service</include>
					<include>Dockerfile</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.plugin.version}</version>
				<configuration>
					<properties>
						<includeTags>auto</includeTags>
						<groups>auto</groups>
					</properties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${dependency.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-lib</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/${lib.property}/</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<useBaseVersion>false</useBaseVersion>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${jar.plugin.version}</version>
				<configuration>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathLayoutType>custom</classpathLayoutType>
							<customClasspathLayout>
								${lib.property}/${artifact.artifactId}${artifact.dashClassifier?}.${artifact.extension}
							</customClasspathLayout>
							<mainClass>tech.shooting.ipsc.IpscApplication</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>org.springframework.boot</groupId> -->
			<!-- <artifactId>spring-boot-maven-plugin</artifactId> -->
			<!-- <version>${spring.boot.version}</version> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <goals> -->
			<!-- <goal>repackage</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <mainClass> -->
			<!-- tech.shooting.ipsc.IpscApplication -->
			<!-- </mainClass> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>build</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- <plugin> -->
					<!-- <groupId>org.jsonschema2pojo</groupId> -->
					<!-- <artifactId>jsonschema2pojo-maven-plugin</artifactId> -->
					<!-- <version>1.0.0</version> -->
					<!-- <configuration> -->
					<!-- <sourceDirectory>${basedir}/src/main/resources/schema</sourceDirectory> -->

					<!-- package name for the models -->
					<!-- <targetPackage>com.rizvan.json</targetPackage> -->

					<!-- output folder folder for the generated code -->
					<!-- <outputDirectory>target/generated-sources/jsonpojo</outputDirectory> -->
					<!-- <annotationStyle>jackson2</annotationStyle> -->

					<!-- this is required for validating json -->
					<!-- <includeJsr303Annotations>true</includeJsr303Annotations> -->
					<!-- </configuration> -->
					<!-- <executions> -->
					<!-- <execution> -->
					<!-- <goals> -->
					<!-- <goal>generate</goal> -->
					<!-- </goals> -->
					<!-- </execution> -->
					<!-- </executions> -->
					<!-- </plugin> -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${assembly.plugin.version}</version>
						<configuration>
							<descriptors>
								<descriptor>zip.xml</descriptor>
							</descriptors>
							<archiverConfig>
								<compress>true</compress>
							</archiverConfig>
							<recompressZippedFiles>true</recompressZippedFiles>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>install</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>${dockerfile.plugin.version}</version>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>docker.mpsdevelopment.com</repository>
							<tag>${docker.image.version}-latest</tag>
							<dockerfile>target/Dockerfile</dockerfile>
							<repository>docker.mpsdevelopment.com/shooting/${docker.image.name}</repository>
							<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
							<buildArgs>
								<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
							</buildArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>